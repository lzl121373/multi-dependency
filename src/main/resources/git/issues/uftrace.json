[
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1159",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1159/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1159/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1159/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1159",
    "id": 603120661,
    "node_id": "MDU6SXNzdWU2MDMxMjA2NjE=",
    "number": 1159,
    "title": "uftrace replay with source line info",
    "user": {
      "login": "ekyooo",
      "id": 46103109,
      "node_id": "MDQ6VXNlcjQ2MTAzMTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/46103109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekyooo",
      "html_url": "https://github.com/ekyooo",
      "followers_url": "https://api.github.com/users/ekyooo/followers",
      "following_url": "https://api.github.com/users/ekyooo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekyooo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekyooo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekyooo/subscriptions",
      "organizations_url": "https://api.github.com/users/ekyooo/orgs",
      "repos_url": "https://api.github.com/users/ekyooo/repos",
      "events_url": "https://api.github.com/users/ekyooo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekyooo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-20T10:18:56Z",
    "updated_at": "2020-04-20T10:18:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This Issue is to discuss the details of the request below.\r\n\r\n> The same change can also be applied to replay command as well. I look forward to having this feature.\r\n\r\n_Originally posted by @honggyukim in https://github.com/namhyung/uftrace/pull/1133#issuecomment-610381414_\r\n\r\n> I think it can be handled in the same way by placing \"Source\" info right next to the function names. I don't mean to add it as a field. You can create an issue with a very simple description. It doesn' have to be long, but just one line is also enough, then add more comments incrementally.\r\n\r\n_Originally posted by @honggyukim in https://github.com/namhyung/uftrace/pull/1133#issuecomment-616300550_\r\n\r\n\r\nIt looks like this. Is it ok? \r\n(please don't mind the header.)\r\n\r\n```\r\n$ ./uftrace replay  --srcline\r\n# DURATION     TID     FUNCTION\r\n   0.461 us [ 28622] | __monstartup();\r\n   0.172 us [ 28622] | __cxa_atexit();\r\n            [ 28622] | main() { [tests/s-abc.c:26]\r\n            [ 28622] |   a() { [tests/s-abc.c:11]\r\n            [ 28622] |     b() { [tests/s-abc.c:16]\r\n            [ 28622] |       c() { [tests/s-abc.c:21]\r\n   0.919 us [ 28622] |         getpid();\r\n   1.354 us [ 28622] |       } /* c */\r\n   1.638 us [ 28622] |     } /* b */\r\n   1.848 us [ 28622] |   } /* a */\r\n   2.091 us [ 28622] | } /* main */\r\n\r\n$ ./uftrace replay -f +module --libname --srcline\r\n# DURATION     TID        MODULE NAME   FUNCTION\r\n   0.461 us [ 28622]            t-abc | __monstartup();\r\n   0.172 us [ 28622]            t-abc | __cxa_atexit@libc-2.27.so();\r\n            [ 28622]            t-abc | main() { [tests/s-abc.c:26]\r\n            [ 28622]            t-abc |   a() { [tests/s-abc.c:11]\r\n            [ 28622]            t-abc |     b() { [tests/s-abc.c:16]\r\n            [ 28622]            t-abc |       c() { [tests/s-abc.c:21]\r\n   0.919 us [ 28622]            t-abc |         getpid@libc-2.27.so();\r\n   1.354 us [ 28622]            t-abc |       } /* c */\r\n   1.638 us [ 28622]            t-abc |     } /* b */\r\n   1.848 us [ 28622]            t-abc |   } /* a */\r\n   2.091 us [ 28622]            t-abc | } /* main */\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1158",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1158/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1158/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1158/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1158",
    "id": 602475136,
    "node_id": "MDU6SXNzdWU2MDI0NzUxMzY=",
    "number": 1158,
    "title": "many tests get stuck in aarch64",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351507863,
        "node_id": "MDU6TGFiZWwxMzUxNTA3ODYz",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/arch",
        "name": "arch",
        "color": "f28271",
        "default": false,
        "description": ""
      },
      {
        "id": 1783742158,
        "node_id": "MDU6TGFiZWwxNzgzNzQyMTU4",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/tests",
        "name": "tests",
        "color": "1a7db2",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-04-18T14:39:41Z",
    "updated_at": "2020-04-20T05:27:00Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "Here is the problem.\r\n```\r\n$ ./runtest.py -p -O0 080\r\nStart 1 tests with 1 worker\r\nTest case                 pg\r\n------------------------: O0\r\n( ... gets stuck and no progress ...)\r\n```\r\nThe `t080_replay_kernel_D2.py` does not make progress during test.\r\n\r\nHere are more tests that get stuck.\r\n```\r\n$ ./runtest.py -p -O0 111\r\nStart 1 tests with 1 worker\r\nTest case                 pg\r\n------------------------: O0\r\n( ... gets stuck and no progress ...)\r\n```\r\n```\r\n$ ./runtest.py -p -O0 143\r\nStart 1 tests with 1 worker\r\nTest case                 pg\r\n------------------------: O0\r\n( ... gets stuck and no progress ...)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1157",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1157/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1157/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1157/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1157",
    "id": 602465948,
    "node_id": "MDU6SXNzdWU2MDI0NjU5NDg=",
    "number": 1157,
    "title": "weird test output in aarch64",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351507863,
        "node_id": "MDU6TGFiZWwxMzUxNTA3ODYz",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/arch",
        "name": "arch",
        "color": "f28271",
        "default": false,
        "description": ""
      },
      {
        "id": 1783742158,
        "node_id": "MDU6TGFiZWwxNzgzNzQyMTU4",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/tests",
        "name": "tests",
        "color": "1a7db2",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-04-18T13:56:57Z",
    "updated_at": "2020-04-20T03:31:56Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "Here is the test output in aarch64.\r\n```\r\n$ ./runtest.py\r\nStart 234 tests with 2 worker\r\nTest case                 pg             finstrument-fu\r\n------------------------: O0 O1 O2 O3 Os O0 O1 O2 O3 Os\r\n001 basic               : OK OK OK OK OK OK OK OK OK OK\r\n002 argument            : NG OK OK NG NG OK OK OK OK NG\r\n003 thread              : OK OK OK NG OK OK OK NG NG NG\r\n004 filter_F            : OK OK OK OK OK OK OK OK OK OK\r\n005 filter_N            : OK OK OK OK OK OK OK OK OK OK\r\n006 filter_FN           : OK OK OK OK OK OK OK OK OK OK\r\n007 library             : OK OK OK OK OK OK OK OK OK OK\r\n008 daemon              : OK OK OK OK OK OK OK OK OK OK\r\n009 fork                : OK OK OK OK OK OK OK OK OK OK\r\n010 forkexec            : OK OK OK OK OK OK OK OK OK OK\r\n011 vforkexec           : OK OK OK OK OK OK OK OK OK OK\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\nuftrace: /root/work/uftrace/cmds/record.c:1542:find_in_path\r\n ERROR: Cannot trace '@kernel-N': No such executable file.\r\n012 demangle            : OK OK OK OK OK OK NG OK OK OK\r\n013 signal              : OK NG OK NG OK NG OK OK OK OK\r\n014 ucontext            : OK OK OK OK OK OK OK OK OK OK\r\n        ...\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1156",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1156/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1156/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1156/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1156",
    "id": 602412201,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA1NDY3NzMw",
    "number": 1156,
    "title": "kernel: Properly handle offlined CPUs for kernel tracing",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-18T08:46:23Z",
    "updated_at": "2020-04-20T05:07:31Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1156",
      "html_url": "https://github.com/namhyung/uftrace/pull/1156",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1156.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1156.patch"
    },
    "body": "If some cpus are offlined especially from the initial numbers, then\r\nthe current implementation fails to collect correct kernel-cpuXX.dat.\r\n\r\nIt's because it just simply counts the number of cpus, then collects\r\nfrom cpu0 by looping over the number of cpus.\r\n\r\nHere is the problematic cpu settings.\r\n```\r\n  $ cat /sys/devices/system/cpu/possible\r\n  0-7\r\n\r\n  $ cat /sys/devices/system/cpu/offline\r\n  0-3,6-7\r\n\r\n  $ cat /sys/devices/system/cpu/online\r\n  4-5\r\n```\r\nIn this case, uftrace has to collect kernel-cpu4.dat and kernel-cpu5.dat,\r\nbut it just collects kernel-cpu0.dat and kernel-cpu1.dat, which are\r\nempty because they are offlined.\r\n\r\nThis patch fixes the problem by looping over all the cpus rather than\r\nconsidering only online cpus.  It changes from _SC_NPROCESSORS_ONLN to\r\n_SC_NPROCESSORS_CONF.\r\n```\r\n  _SC_NPROCESSORS_ONLN\r\n    The number of processors currently online\r\n\r\n  _SC_NPROCESSORS_CONF\r\n    The number of processors configured.\r\n```\r\nFixed: #1151\r\n\r\nSigned-off-by: Honggyu Kim <honggyu.kp@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1155",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1155/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1155/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1155/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1155",
    "id": 598735431,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDAyNTIyMTE0",
    "number": 1155,
    "title": "dwarf: Produce srcline in .dbg for -finstrument-functions",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-13T07:52:47Z",
    "updated_at": "2020-04-15T06:03:08Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1155",
      "html_url": "https://github.com/namhyung/uftrace/pull/1155",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1155.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1155.patch"
    },
    "body": "LoisHuang reported that the current implementation does not generate\r\nsource location info when the target binary is compiled with\r\n-finstrument-functions even though it has debug info.\r\n\r\nBinary compilation:\r\n```\r\n  $ gcc -g -finstrument-functions -o t-abc.finst tests/s-abc.c\r\n```\r\nBefore:\r\n```\r\n  $ uftrace record -a t-abc.finst\r\n  $ cat uftrace.data/*.dbg\r\n  cat: cannot access 'uftrace.data/*.dbg': No such file or directory\r\n```\r\nAfter:\r\n```\r\n  $ uftrace record -a t-abc.finst\r\n  $ cat uftrace.data/t-abc.finst.dbg\r\n  F: 73a a\r\n  L: 11 tests/s-abc.c\r\n  F: 77a b\r\n  L: 16 tests/s-abc.c\r\n  F: 7ba c\r\n  L: 21 tests/s-abc.c\r\n  F: 818 main\r\n  L: 26 tests/s-abc.c\r\n```\r\nPlease note that it doesn't generate arguments information unnecessarily\r\nbecause TRACE_CYGPROF type only has source location information.\r\n\r\nFixed: #1152\r\n\r\nSigned-off-by: Honggyu Kim <honggyu.kp@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1154",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1154/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1154/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1154/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1154",
    "id": 597904840,
    "node_id": "MDU6SXNzdWU1OTc5MDQ4NDA=",
    "number": 1154,
    "title": "incorrect enum display problem",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351503457,
        "node_id": "MDU6TGFiZWwxMzUxNTAzNDU3",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/args",
        "name": "args",
        "color": "540887",
        "default": false,
        "description": ""
      },
      {
        "id": 79918203,
        "node_id": "MDU6TGFiZWw3OTkxODIwMw==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/bug",
        "name": "bug",
        "color": "fbca04",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2020-04-10T14:03:30Z",
    "updated_at": "2020-04-20T05:08:15Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "Here is a simple program.\r\n```c\r\n$ cat enum.c\r\nenum et {\r\n        MINUS_ONE = -1,\r\n        ZERO,\r\n        ONE,\r\n        TWO,\r\n        TREE,\r\n};\r\n\r\nvoid foo(enum et e) { }\r\n\r\nint main()\r\n{\r\n        foo(MINUS_ONE);\r\n        return 0;\r\n}\r\n```\r\nThe enum type `et` begins with `-1`. In this case, argument display shows the enum incorrectly as follows.\r\n```\r\n$ gcc -pg -g enum.c\r\n\r\n$ uftrace record -a a.out\r\n$ uftrace replay\r\n# DURATION     TID     FUNCTION\r\n   1.134 us [ 17360] | __monstartup();\r\n   0.427 us [ 17360] | __cxa_atexit();\r\n            [ 17360] | main() {\r\n   1.130 us [ 17360] |   foo(TREE|TWO|ONE|ZERO|MINUS_ONE+0xfffffffa);\r\n   1.594 us [ 17360] | } = 0; /* main */\r\n```\r\nThe `dump` output shows the problem as follows.\r\n```\r\n$ uftrace dump -F foo -v\r\n        ...\r\nreading 17360.dat\r\n2602960.655323809  17360: [entry] foo(40061f) depth: 1\r\n <0000000000000000>: a1 92 39 01 61 3f 09 00  6c 00 1f 06 40 00 00 00\r\n2602960.655323809  17360: [args ] length = 8\r\n  args[0] enum et: TREE|TWO|ONE|ZERO|MINUS_ONE+0xfffffffa (reading 17360.dat\r\n2602960.655323809  17360: [entry] foo(40061f) depth: 1\r\n <0000000000000000>: a1 92 39 01 61 3f 09 00  6c 00 1f 06 40 00 00 00\r\n2602960.655323809  17360: [args ] length = 8\r\n  args[0] enum et: TREE|TWO|ONE|ZERO|MINUS_ONE+0xfffffffa (4294967295)\r\n <0000000000000010>: ff ff ff ff 00 00 00 00)\r\n <0000000000000010>: ff ff ff ff 00 00 00 00\r\n        ...\r\n```\r\nThe enum is interpreted as `4294967295` instead of `-1` here so it needs to be fixed correctly."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1153",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1153/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1153/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1153/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1153",
    "id": 597853366,
    "node_id": "MDU6SXNzdWU1OTc4NTMzNjY=",
    "number": 1153,
    "title": "051 return shows 'NZ' in aarch64",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351507863,
        "node_id": "MDU6TGFiZWwxMzUxNTA3ODYz",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/arch",
        "name": "arch",
        "color": "f28271",
        "default": false,
        "description": ""
      },
      {
        "id": 1351503457,
        "node_id": "MDU6TGFiZWwxMzUxNTAzNDU3",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/args",
        "name": "args",
        "color": "540887",
        "default": false,
        "description": ""
      },
      {
        "id": 79918203,
        "node_id": "MDU6TGFiZWw3OTkxODIwMw==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/bug",
        "name": "bug",
        "color": "fbca04",
        "default": true,
        "description": null
      },
      {
        "id": 1783742158,
        "node_id": "MDU6TGFiZWwxNzgzNzQyMTU4",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/tests",
        "name": "tests",
        "color": "1a7db2",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-04-10T12:00:31Z",
    "updated_at": "2020-04-16T14:24:57Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "Here is the problem.\r\n```\r\n$ ./runtest.py -vdp -O0 051\r\nStart 1 tests with 1 worker\r\nTest case                 pg\r\n------------------------: O0\r\nbuild command: gcc -o t-return -fno-inline -fno-builtin -fno-ipa-cp -fno-omit-frame-pointer -D_FORTIFY_SOURCE=0  -pg -O0  s-return.c\r\ntest command: /root/work/uftrace/uftrace live --no-pager --no-event -L/root/work/uftrace  t-return\r\nt051_return: -pg -O0 returns 1\r\n\r\n051 return              : NZ\r\n```\r\nHere is a simpler example to reproduce the same problem.\r\n```c\r\n$ cat long-double-return.c\r\n#include <stdio.h>\r\n#include <float.h>\r\n\r\nlong double return_long_double(void)\r\n{\r\n        fprintf(stderr, \"LDBL_MAX = %Le\\n\", LDBL_MAX);\r\n        return LDBL_MAX;\r\n}\r\n\r\nint main(void)\r\n{\r\n        long double ld;\r\n\r\n        ld = return_long_double();\r\n        fprintf(stderr, \"ld       = %Le\\n\", ld);\r\n        if (ld != LDBL_MAX)\r\n                return 1;\r\n        return 0;\r\n}\r\n```\r\nIt can be compiled and executed as expected.\r\n```\r\n$ gcc -pg long-double-return.c\r\n\r\n$ ./a.out\r\nLDBL_MAX = 1.189731e+4932\r\nld       = 1.189731e+4932\r\n\r\n$ echo $?\r\n0\r\n```\r\nHowever, if uftrace is running with this program, the result is different.\r\n```\r\n$ uftrace record -R main@retval a.out\r\nLDBL_MAX = 1.189731e+4932\r\nld       = 1.194459e-4946\r\n\r\n$ echo $?\r\n1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1152",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1152/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1152/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1152/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1152",
    "id": 597813904,
    "node_id": "MDU6SXNzdWU1OTc4MTM5MDQ=",
    "number": 1152,
    "title": "display the file name of function",
    "user": {
      "login": "LoisHuang",
      "id": 24759885,
      "node_id": "MDQ6VXNlcjI0NzU5ODg1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/24759885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LoisHuang",
      "html_url": "https://github.com/LoisHuang",
      "followers_url": "https://api.github.com/users/LoisHuang/followers",
      "following_url": "https://api.github.com/users/LoisHuang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LoisHuang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LoisHuang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LoisHuang/subscriptions",
      "organizations_url": "https://api.github.com/users/LoisHuang/orgs",
      "repos_url": "https://api.github.com/users/LoisHuang/repos",
      "events_url": "https://api.github.com/users/LoisHuang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LoisHuang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-04-10T10:14:10Z",
    "updated_at": "2020-04-15T04:55:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hello, whether the output could contain the file name of the function?"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1151",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1151/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1151/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1151/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1151",
    "id": 597711390,
    "node_id": "MDU6SXNzdWU1OTc3MTEzOTA=",
    "number": 1151,
    "title": "failure on collecting correct kernel-cpuXX",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 79918203,
        "node_id": "MDU6TGFiZWw3OTkxODIwMw==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/bug",
        "name": "bug",
        "color": "fbca04",
        "default": true,
        "description": null
      },
      {
        "id": 1352027480,
        "node_id": "MDU6TGFiZWwxMzUyMDI3NDgw",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/kernel",
        "name": "kernel",
        "color": "e5474c",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-04-10T05:54:42Z",
    "updated_at": "2020-04-18T08:17:47Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "If some cpus are offlined especially from the initial numbers, then current implementation fails to collect correct `kernel-cpuXX.dat`. It's because it just simply count the number of cpus, then collect from `cpu0` by looping over the number of cpus.\r\n\r\nHere is the problematic cpu settings.\r\n```\r\n$ cat /sys/devices/system/cpu/possible\r\n0-7\r\n\r\n$ cat /sys/devices/system/cpu/offline\r\n0-3,6-7\r\n\r\n$ cat /sys/devices/system/cpu/online\r\n4-5\r\n```\r\nIn this case, uftrace has to collect `kernel-cpu4.dat` and `kernel-cpu5.dat`, but it just collects `kernel-cpu0.dat` and `kernel-cpu1.dat`, which are empty because they are offlined.\r\n\r\nWe need to fix this by collecting the online cpus only."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1150",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1150/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1150/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1150/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1150",
    "id": 594911236,
    "node_id": "MDU6SXNzdWU1OTQ5MTEyMzY=",
    "number": 1150,
    "title": "display pretty \"errno\" value",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351503457,
        "node_id": "MDU6TGFiZWwxMzUxNTAzNDU3",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/args",
        "name": "args",
        "color": "540887",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-06T08:32:28Z",
    "updated_at": "2020-04-20T06:33:31Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "It seems that `errno` value can be read by [__errno_location](http://refspecs.linux-foundation.org/LSB_4.0.0/LSB-Core-generic/LSB-Core-generic/baselib---errno-location.html) function so it'd be better to display its [errno number](https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html) just like enum types.\r\n\r\nIt will require dereferencing the return value of `__errno_location`."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1149",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1149/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1149/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1149/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1149",
    "id": 592957279,
    "node_id": "MDU6SXNzdWU1OTI5NTcyNzk=",
    "number": 1149,
    "title": "reuse -P/-U options for analysis commands",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 79918205,
        "node_id": "MDU6TGFiZWw3OTkxODIwNQ==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-02T22:32:06Z",
    "updated_at": "2020-04-02T22:42:30Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "The most commonly used filters in replay are `-F` for opt-in and `-N` for opt-out filtering. `-F` enables to show and `-N` disables to hide the target function and its children functions.\r\n\r\nThere can be other filters. Unlike `-F` option, it can show only the target function without considering its children functions. Likewise, another option can hide only the target function but shows its children functions as usual and it can correspond to `-N` option.\r\n\r\nCurrently, `-P`/`-U` options are only used for record command, but they can also be used for these purposes in replay and other analysis commands."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1147",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1147/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1147/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1147/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1147",
    "id": 590330516,
    "node_id": "MDU6SXNzdWU1OTAzMzA1MTY=",
    "number": 1147,
    "title": "problem recording uftrace.data",
    "user": {
      "login": "nnWhisperer",
      "id": 13225349,
      "node_id": "MDQ6VXNlcjEzMjI1MzQ5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13225349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nnWhisperer",
      "html_url": "https://github.com/nnWhisperer",
      "followers_url": "https://api.github.com/users/nnWhisperer/followers",
      "following_url": "https://api.github.com/users/nnWhisperer/following{/other_user}",
      "gists_url": "https://api.github.com/users/nnWhisperer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nnWhisperer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nnWhisperer/subscriptions",
      "organizations_url": "https://api.github.com/users/nnWhisperer/orgs",
      "repos_url": "https://api.github.com/users/nnWhisperer/repos",
      "events_url": "https://api.github.com/users/nnWhisperer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nnWhisperer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-03-30T14:20:07Z",
    "updated_at": "2020-04-05T01:43:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\nIt is the first time I am trying to use uftrace program. Thank you for such a useful tool, yet I have not been able to use it for what I intended. When I am in a directory with the binary app is in;\r\n`$ uftrace app`\r\nprints a detailed call trace. However, I am intending to use dump --chrome utility.\r\n`$ uftrace dump --chrome`\r\n\r\n> WARN: cannot open record data: uftrace.data: No such file or directory\r\n\r\nSo, when I want to deliberately record the data with the following command:\r\n`$ uftrace record app`\r\nreceive the following output:\r\n\r\n> uftrace: $(UFTRACE_INSTALLATION_LOCATION)/cmds/record.c:2150:command_record ERROR: cannot create a communication channel: Operation not permitted\r\n\r\nThe directory is a shared vagrant directory, with filetype vboxsf between windows and ubuntu.\r\nWhen I change the command by adding -d aDirectoryLocation where aDirectoryLocation is path of a directory with file type ext4, the warning changes to the following:\r\n`$ uftrace record -d=~/forUftrace app`\r\n\r\n> WARN: creating directory failed: No such file or directory however, the directory exists.\r\n\r\nChanging `-d=~/forUftrace` to `-d=~/forUftrace/` did not change the warning either.\r\nRunning the commands with sudo prepended does not change the problem statements either.\r\nI am using Ubuntu 16.04LTS over Windows 10.\r\nThank you"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1146",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1146/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1146/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1146/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1146",
    "id": 589783164,
    "node_id": "MDU6SXNzdWU1ODk3ODMxNjQ=",
    "number": 1146,
    "title": "mcount_auto_recover producing incomplete reports",
    "user": {
      "login": "arter97",
      "id": 5400990,
      "node_id": "MDQ6VXNlcjU0MDA5OTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5400990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arter97",
      "html_url": "https://github.com/arter97",
      "followers_url": "https://api.github.com/users/arter97/followers",
      "following_url": "https://api.github.com/users/arter97/following{/other_user}",
      "gists_url": "https://api.github.com/users/arter97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arter97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arter97/subscriptions",
      "organizations_url": "https://api.github.com/users/arter97/orgs",
      "repos_url": "https://api.github.com/users/arter97/repos",
      "events_url": "https://api.github.com/users/arter97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arter97/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-29T12:41:56Z",
    "updated_at": "2020-03-30T05:40:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi.\r\n\r\nThis is my first time using uftrace, so excuse me if I'm making a basic/noob error.\r\n\r\nI've been trying to run uftrace to profile function calls.\r\nI noticed that the old uftrace v0.8.1 included with Ubuntu 18.04 works, but the latest git revision doesn't.\r\n\r\nI've ran `git bisect` and found commit 0f12d02fad022b3e9bd8b165c9ce0e5cb1eaa897 to be the one causing it.\r\nSure enough, setting `bool mcount_auto_recover` to false from libmcount/mcount.c allowed me to run the program correctly.\r\n\r\nI've run `uftrace --color=yes -vv` on the latest git revision and one with `bool mcount_auto_recover = false` and uploaded the output to http://arter97.com/uftrace/\r\n\r\nYou can `cat` the files on your terminal to see the colored texts as well.\r\n\r\nThe program I'm running with uftrace is a network benchmark program to be used on a paper.\r\nAfter the program accepts a connection, it says this:\r\n```\r\nplthook: /home/arter97/uftrace/libmcount/plthook.c:951:__plthook_exit\r\n ERROR: <5> invalid dynsym idx: -269488145\r\n```\r\n\r\nThanks."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1145",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1145/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1145/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1145/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1145",
    "id": 589710755,
    "node_id": "MDU6SXNzdWU1ODk3MTA3NTU=",
    "number": 1145,
    "title": "Adding clang-format",
    "user": {
      "login": "binkoni",
      "id": 6345376,
      "node_id": "MDQ6VXNlcjYzNDUzNzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6345376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binkoni",
      "html_url": "https://github.com/binkoni",
      "followers_url": "https://api.github.com/users/binkoni/followers",
      "following_url": "https://api.github.com/users/binkoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/binkoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binkoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binkoni/subscriptions",
      "organizations_url": "https://api.github.com/users/binkoni/orgs",
      "repos_url": "https://api.github.com/users/binkoni/repos",
      "events_url": "https://api.github.com/users/binkoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binkoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-03-29T04:03:35Z",
    "updated_at": "2020-03-30T02:40:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Hello,\r\nHow do you think about adding .clang-format file and updating .travis.yml to run clang-format automatically on new commits?\r\n\r\nIt is easy to generate .clang-format here:\r\nhttps://zed0.co.uk/clang-format-configurator/\r\n\r\nAnd you can run and check clang-format like this in travis.yml:\r\n```yml\r\nscript: clang-format -style=file -i ${srcs} && [ $(git diff --numstat | wc -l) = 0 ]\r\n```\r\nIf you are ok with this, I can send you a PR"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1144",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1144/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1144/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1144/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1144",
    "id": 586444430,
    "node_id": "MDU6SXNzdWU1ODY0NDQ0MzA=",
    "number": 1144,
    "title": "support debugging info in separate files",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351480075,
        "node_id": "MDU6TGFiZWwxMzUxNDgwMDc1",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/dynamic",
        "name": "dynamic",
        "color": "b3e244",
        "default": false,
        "description": ""
      },
      {
        "id": 79918205,
        "node_id": "MDU6TGFiZWw3OTkxODIwNQ==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-03-23T19:02:07Z",
    "updated_at": "2020-03-25T13:21:50Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "In some cases, debug info can be in separate files. Since the current uftrace implementation doesn't support such cases, it can fail to read symbol tables and debug info.\r\n\r\nHere is the way how to generate debug info in separate files summarized in [1].\r\n\r\n1. Compile with debug information:\r\n```\r\n$ gcc -g -o main main.c\r\n```\r\n2. Separate the debug information:\r\n```\r\n$ objcopy --only-keep-debug main main.debug\r\n       or\r\n$ cp main main.debug\r\n$ strip --only-keep-debug main.debug\r\n```\r\n3. Strip debug information from origin file:\r\n```\r\n$ objcopy --strip-debug main\r\n       or\r\n$ strip --strip-debug --strip-unneeded main\r\n```\r\n4. debug by debuglink mode:\r\n```\r\n$ objcopy --add-gnu-debuglink main.debug main\r\n$ gdb main\r\n```\r\n5. You can also use exec file and symbol file separately:\r\n```\r\n$ gdb -s main.debug -e main\r\n       or\r\n$ gdb\r\n(gdb) exec-file main\r\n(gdb) symbol-file main.debug\r\n```\r\n\r\nIn this case, the program `main` cannot be traced with uftrace full dynamic tracing feature because it cannot find any function information. So it needs to be supported in the long term.\r\n\r\n[1] [How to generate gcc debug symbol outside the build target?\r\n](https://stackoverflow.com/questions/866721/how-to-generate-gcc-debug-symbol-outside-the-build-target) [2] [Debugging Information in Separate Files](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Debugging_with_gdb/separate-debug-files.html)"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1143",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1143/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1143/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1143/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1143",
    "id": 585795890,
    "node_id": "MDU6SXNzdWU1ODU3OTU4OTA=",
    "number": 1143,
    "title": "full dynamic tracing parallelization",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351480075,
        "node_id": "MDU6TGFiZWwxMzUxNDgwMDc1",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/dynamic",
        "name": "dynamic",
        "color": "b3e244",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-03-22T19:40:56Z",
    "updated_at": "2020-03-25T13:46:00Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "It takes a really long time to analyze and patch functions when full dynamic tracing is used especially for a big program such as chrome.\r\n\r\nWe may be able to run several threads to analyze and patch function for a lot faster launching time.\r\n\r\nIt's just an idea but looks feasible."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1142",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1142/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1142/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1142/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1142",
    "id": 585634502,
    "node_id": "MDU6SXNzdWU1ODU2MzQ1MDI=",
    "number": 1142,
    "title": "compiler warnings in gcc-9.2.1",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 758612862,
        "node_id": "MDU6TGFiZWw3NTg2MTI4NjI=",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/good%20first%20issue",
        "name": "good first issue",
        "color": "8856c9",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-03-22T03:08:14Z",
    "updated_at": "2020-03-23T14:06:08Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "It shows some compiler warnings when compiled with `gcc-9.2.1`.\r\n```\r\n$ make\r\n        ...\r\n  CC FPIC  arch/x86_64/mcount-dynamic.op\r\n/home/honggyu/work/uftrace/arch/x86_64/mcount-dynamic.c:524:26: warning: passing 'uint8_t *' (aka 'unsigned char *') to parameter of type 'char *' converts between pointers to integer types with different sign [-Wpointer-sign]\r\n        __builtin___clear_cache(insn, insn + nop_size);\r\n                                ^~~~\r\n/home/honggyu/work/uftrace/arch/x86_64/mcount-dynamic.c:524:32: warning: passing 'uint8_t *' (aka 'unsigned char *') to parameter of type 'char *' converts between pointers to integer types with different sign [-Wpointer-sign]\r\n        __builtin___clear_cache(insn, insn + nop_size);\r\n                                      ^~~~~~~~~~~~~~~\r\n2 warnings generated.\r\n        ...\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1139",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1139/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1139/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1139/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1139",
    "id": 582416838,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg5MzM5NzI2",
    "number": 1139,
    "title": "report: support to select output fields of uftrace report",
    "user": {
      "login": "ekyooo",
      "id": 46103109,
      "node_id": "MDQ6VXNlcjQ2MTAzMTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/46103109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekyooo",
      "html_url": "https://github.com/ekyooo",
      "followers_url": "https://api.github.com/users/ekyooo/followers",
      "following_url": "https://api.github.com/users/ekyooo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekyooo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekyooo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekyooo/subscriptions",
      "organizations_url": "https://api.github.com/users/ekyooo/orgs",
      "repos_url": "https://api.github.com/users/ekyooo/repos",
      "events_url": "https://api.github.com/users/ekyooo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekyooo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-03-16T16:05:40Z",
    "updated_at": "2020-04-20T03:23:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1139",
      "html_url": "https://github.com/namhyung/uftrace/pull/1139",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1139.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1139.patch"
    },
    "body": "support to select output fields with -f option\r\n\r\nFixed: #876\r\n\r\nSigned-off-by: Eunseon Lee <esintospace@gmail.com>\r\n\r\nI think there are many other ways to implement this feature.\r\nAll comments are welcome."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1138",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1138/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1138/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1138/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1138",
    "id": 582207851,
    "node_id": "MDU6SXNzdWU1ODIyMDc4NTE=",
    "number": 1138,
    "title": ".dbg file for library with debug section is not generated",
    "user": {
      "login": "ekyooo",
      "id": 46103109,
      "node_id": "MDQ6VXNlcjQ2MTAzMTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/46103109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekyooo",
      "html_url": "https://github.com/ekyooo",
      "followers_url": "https://api.github.com/users/ekyooo/followers",
      "following_url": "https://api.github.com/users/ekyooo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekyooo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekyooo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekyooo/subscriptions",
      "organizations_url": "https://api.github.com/users/ekyooo/orgs",
      "repos_url": "https://api.github.com/users/ekyooo/repos",
      "events_url": "https://api.github.com/users/ekyooo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekyooo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-03-16T11:15:03Z",
    "updated_at": "2020-03-17T11:05:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "As I see, .dbg file is generated for just main executable.\r\nCould you please let me know if it's intentional? Or am I missing something?\r\n\r\nlibabc_test_lib.so is dynamically linked to t-lib.\r\n```\r\n$ gcc -o libabc_test_lib.so -pg -g -shared -fPIC tests/s-lib.c\r\n$ gcc -o t-lib -pg -g tests/s-libmain.c -L. -labc_test_lib\r\n```\r\n\r\nBoth of executable and linked library have debug section as follows\r\n```\r\n$ nm libabc_test_lib.so |grep mcount\r\n                 U mcount@@GLIBC_2.2.5\r\n\r\n$ objdump -h libabc_test_lib.so\r\n 22 .debug_aranges 00000030  0000000000000000  0000000000000000  00001066  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 23 .debug_info   00000139  0000000000000000  0000000000000000  00001096  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 24 .debug_abbrev 000000a7  0000000000000000  0000000000000000  000011cf  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 25 .debug_line   00000071  0000000000000000  0000000000000000  00001276  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 26 .debug_str    000000f4  0000000000000000  0000000000000000  000012e7  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n\r\n\r\n$ nm t-lib|grep mcount\r\n                 U mcount@@GLIBC_2.2.5\r\n\t\t\t\t \r\n$ objdump -h t-lib\r\n 23 .debug_aranges 00000030  0000000000000000  0000000000000000  000010b9  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 24 .debug_info   00000128  0000000000000000  0000000000000000  000010e9  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 25 .debug_abbrev 000000a9  0000000000000000  0000000000000000  00001211  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 26 .debug_line   00000075  0000000000000000  0000000000000000  000012ba  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n 27 .debug_str    000000f4  0000000000000000  0000000000000000  0000132f  2**0\r\n                  CONTENTS, READONLY, DEBUGGING\r\n```\r\n\r\n```\r\n$ export LD_LIBRARY_PATH=.\r\n$ ldd t-lib\r\n        linux-vdso.so.1 =>  (0x00007ffc72cb5000)\r\n        libabc_test_lib.so => ./libabc_test_lib.so (0x00007fef3c3a7000)  //\r\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fef3bfde000)\r\n        /lib64/ld-linux-x86-64.so.2 (0x00007fef3c5a9000)\r\n$ ./t-lib\r\n```\r\n\r\nAfter running uftrace with t-lib, t-lib.dbg is generated. but libabc_test_lib.dbg is not.\r\n```\r\n$ uftrace record --srcline t-lib\r\n$ ls uftrace.data\r\n5469.dat      ld-2.19.so.sym          libc-2.19.so.sym    libelf-0.158.so.sym   libm-2.19.so.sym        libz.so.1.2.8.sym         t-lib.sym\r\ndefault.opts  libabc_test_lib.so.sym  libdl-2.19.so.sym   libgcc_s.so.1.sym     libpthread-2.19.so.sym  sid-83384f174c5f6219.map  task.txt\r\ninfo          libbz2.so.1.0.4.sym     libdw-0.158.so.sym  liblzma.so.5.0.0.sym  librt-2.19.so.sym       t-lib.dbg\r\n```\r\n```\r\n$ cat uftrace.data/t-lib.dbg\r\nF: 7d7 foo\r\nL: 11 tests/s-libmain.c\r\nF: 7ec main\r\nL: 16 tests/s-libmain.c\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1137",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1137/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1137/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1137/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1137",
    "id": 581495226,
    "node_id": "MDU6SXNzdWU1ODE0OTUyMjY=",
    "number": 1137,
    "title": "provide kind error messages for configure script",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 758612862,
        "node_id": "MDU6TGFiZWw3NTg2MTI4NjI=",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/good%20first%20issue",
        "name": "good first issue",
        "color": "8856c9",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-03-15T03:47:36Z",
    "updated_at": "2020-03-15T03:49:50Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "As of now, the `configure` script fails on some newly installed systems as follows:\r\n```\r\n$ ./configure\r\n./configure: line 168: make: command not found\r\n./configure: line 169: make: command not found\r\nuftrace detected system features:\r\n...         prefix: /usr/local\r\n...         libelf: [ OFF ] - more flexible ELF data handling\r\n...          libdw: [ OFF ] - DWARF debug info support\r\n...      libpython: [ OFF ] - python scripting support\r\n...      libluajit: [ OFF ] - luajit scripting support\r\n...    libncursesw: [ OFF ] - TUI support\r\n...   cxa_demangle: [ OFF ] - full demangler support with libstdc++\r\n...     perf_event: [ OFF ] - perf (PMU) event support\r\n...       schedule: [ OFF ] - scheduler event support\r\n...       capstone: [ OFF ] - full dynamic tracing support\r\n```\r\nThe configuration is failed because the system doesn't have `make` installed.\r\n\r\nWe can provide better error messages on such cases.\r\n\r\nIt can also check whether `gcc` is installed as well and it fails silently even if `make` is installed.\r\n```\r\n$ ./configure\r\nuftrace detected system features:\r\n...         prefix: /usr/local\r\n...         libelf: [ OFF ] - more flexible ELF data handling\r\n...          libdw: [ OFF ] - DWARF debug info support\r\n...      libpython: [ OFF ] - python scripting support\r\n...      libluajit: [ OFF ] - luajit scripting support\r\n...    libncursesw: [ OFF ] - TUI support\r\n...   cxa_demangle: [ OFF ] - full demangler support with libstdc++\r\n...     perf_event: [ OFF ] - perf (PMU) event support\r\n...       schedule: [ OFF ] - scheduler event support\r\n...       capstone: [ OFF ] - full dynamic tracing support\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1133",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1133/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1133/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1133/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1133",
    "id": 572950318,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxNTQ5NjE5",
    "number": 1133,
    "title": "report: show source line info with --srcline option",
    "user": {
      "login": "ekyooo",
      "id": 46103109,
      "node_id": "MDQ6VXNlcjQ2MTAzMTA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/46103109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekyooo",
      "html_url": "https://github.com/ekyooo",
      "followers_url": "https://api.github.com/users/ekyooo/followers",
      "following_url": "https://api.github.com/users/ekyooo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekyooo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekyooo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekyooo/subscriptions",
      "organizations_url": "https://api.github.com/users/ekyooo/orgs",
      "repos_url": "https://api.github.com/users/ekyooo/repos",
      "events_url": "https://api.github.com/users/ekyooo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekyooo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-02-28T19:12:48Z",
    "updated_at": "2020-04-20T09:58:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1133",
      "html_url": "https://github.com/namhyung/uftrace/pull/1133",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1133.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1133.patch"
    },
    "body": "Show source line info of each function with loaded debug_info.\r\n\r\nFixed: #763\r\n\r\nCould I leave 'Signed off' message after code review?\r\n\r\nI think there are many other ways to implement this feature.\r\nAll comments are welcome."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1131",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1131/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1131/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1131/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1131",
    "id": 568108570,
    "node_id": "MDU6SXNzdWU1NjgxMDg1NzA=",
    "number": 1131,
    "title": "dynamic instrumentation is not possible for C++ templates.",
    "user": {
      "login": "ParkHanbum",
      "id": 1003760,
      "node_id": "MDQ6VXNlcjEwMDM3NjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1003760?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParkHanbum",
      "html_url": "https://github.com/ParkHanbum",
      "followers_url": "https://api.github.com/users/ParkHanbum/followers",
      "following_url": "https://api.github.com/users/ParkHanbum/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParkHanbum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParkHanbum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParkHanbum/subscriptions",
      "organizations_url": "https://api.github.com/users/ParkHanbum/orgs",
      "repos_url": "https://api.github.com/users/ParkHanbum/repos",
      "events_url": "https://api.github.com/users/ParkHanbum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParkHanbum/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-20T07:38:18Z",
    "updated_at": "2020-02-21T02:00:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The following functions did not traced while attempting a dynamic instrument.\r\n```\r\n  115 template<typename T>                                                                                         │Dump of assembler code for function art::ShouldBlockAccessToMember<art::ArtField>(art::ArtField*, art::Thread*):                                                                              [58/1928]\r\n~ 116 bool ShouldBlockAccessToMember(T* member, Thread* self)                                                      │   0x00007ffff6b79270 <+0>:     push   %rbp\r\n  117     REQUIRES_SHARED(Locks::mutator_lock_) {                                                                  │   0x00007ffff6b79271 <+1>:     mov    %rsp,%rbp\r\n+ 118             __asm__ __volatile__ (\"nop;nop;nop;nop;nop;nop\");                                                │   0x00007ffff6b79274 <+4>:     push   %r15\r\n  119   hiddenapi::Action action = hiddenapi::GetMemberAction(                                                     │   0x00007ffff6b79276 <+6>:     push   %r14\r\n  120       member, self, IsCallerTrusted, hiddenapi::kReflection);                                                │   0x00007ffff6b79278 <+8>:     push   %r13\r\n  121   if (action != hiddenapi::kAllow) {                                                                         │   0x00007ffff6b7927a <+10>:    push   %r12\r\n  122     hiddenapi::NotifyHiddenApiListener(member);                                                              │   0x00007ffff6b7927c <+12>:    push   %rbx\r\n  123   }                                                                                                          │   0x00007ffff6b7927d <+13>:    sub    $0x38,%rsp\r\n  124                                                                                                              │   0x00007ffff6b79281 <+17>:    mov    %fs:0x28,%rax\r\n  125   return action == hiddenapi::kDeny;                                                                         │   0x00007ffff6b7928a <+26>:    mov    %rax,-0x30(%rbp)\r\n  126 }\r\n```\r\n\r\n\r\nthis is disassembled code: \r\n```\r\nDump of assembler code for function art::ShouldBlockAccessToMember<art::ArtField>(art::ArtField*, art::Thread*):                                                                              [58/1928]\r\n   0x00007ffff6b79270 <+0>:     push   %rbp\r\n   0x00007ffff6b79271 <+1>:     mov    %rsp,%rbp\r\n   0x00007ffff6b79274 <+4>:     push   %r15\r\n   0x00007ffff6b79276 <+6>:     push   %r14\r\n   0x00007ffff6b79278 <+8>:     push   %r13\r\n   0x00007ffff6b7927a <+10>:    push   %r12\r\n   0x00007ffff6b7927c <+12>:    push   %rbx\r\n   0x00007ffff6b7927d <+13>:    sub    $0x38,%rsp\r\n   0x00007ffff6b79281 <+17>:    mov    %fs:0x28,%rax\r\n   0x00007ffff6b7928a <+26>:    mov    %rax,-0x30(%rbp)\r\n=> 0x00007ffff6b7928e <+30>:    nop\r\n```\r\n\r\nthis is symbol info from objdump\r\n```\r\n0000000000272c40 g     F .text  0000000000000020              .protected _ZNK3art2gc9collector11MarkCompact16ShouldSweepSpaceEPNS0_5space15ContinuousSpaceE\r\n0000000000283e50 g     F .text  0000000000000017              .protected _ZNK3art2gc9collector9SemiSpace16ShouldSweepSpaceEPNS0_5space15ContinuousSpaceE\r\n00000000002ad8c0  w    F .text  0000000000000014              .protected _ZNK3art2gc10accounting31ModUnionTableToZygoteAllocspace18ShouldAddReferenceEPKNS_6mirror6ObjectE\r\n00000000002ade30  w    F .text  0000000000000003              .protected _ZNK3art2gc25ZygoteCompactingCollector16ShouldSweepSpaceEPNS0_5space15ContinuousSpaceE\r\n00000000002ef700 g     F .text  0000000000000023              .protected _ZNK3art15instrumentation15Instrumentation33ShouldNotifyMethodEnterExitEventsEv\r\n0000000000646060 g     F .text  00000000000000c9              .protected MterpShouldSwitchInterpreters\r\n00000000003d95d0 g     F .text  0000000000000024              .protected _ZN3art3jit3Jit29ShouldUsePriorityThreadWeightEPNS_6ThreadE\r\n00000000003e5a20 g     F .text  0000000000000029              .protected _ZN3art3jit12JitCodeCache22ShouldDoFullCollectionEv\r\n00000000004b9550 g     F .text  0000000000000023              .protected _ZN3art22ShouldEnforceHiddenApiEPNS_6ThreadE\r\n00000000004bd270  w    F .text  0000000000000104              .protected _ZN3art25ShouldBlockAccessToMemberINS_8ArtFieldEEEbPT_PNS_6ThreadE\r\n00000000004bd380  w    F .text  0000000000000143              .protected _ZN3art25ShouldBlockAccessToMemberINS_9ArtMethodEEEbPT_PNS_6ThreadE\r\n0000000000584ff0 g     F .text  000000000000005b              .protected _ZN3art13SignalCatcher10ShouldHaltEv\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1129",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1129/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1129/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1129/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1129",
    "id": 564975733,
    "node_id": "MDU6SXNzdWU1NjQ5NzU3MzM=",
    "number": 1129,
    "title": "C++11 user defined string literals break the json file",
    "user": {
      "login": "kobi-ca",
      "id": 2780267,
      "node_id": "MDQ6VXNlcjI3ODAyNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2780267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kobi-ca",
      "html_url": "https://github.com/kobi-ca",
      "followers_url": "https://api.github.com/users/kobi-ca/followers",
      "following_url": "https://api.github.com/users/kobi-ca/following{/other_user}",
      "gists_url": "https://api.github.com/users/kobi-ca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kobi-ca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kobi-ca/subscriptions",
      "organizations_url": "https://api.github.com/users/kobi-ca/orgs",
      "repos_url": "https://api.github.com/users/kobi-ca/repos",
      "events_url": "https://api.github.com/users/kobi-ca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kobi-ca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 79918203,
        "node_id": "MDU6TGFiZWw3OTkxODIwMw==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/bug",
        "name": "bug",
        "color": "fbca04",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-02-13T22:00:45Z",
    "updated_at": "2020-02-24T11:30:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "and it cannot be loaded.\r\nC++11 user defined string literals looks like the following:\r\n```\r\nret operator \"\" _name(some_type var) {\r\n// ...\r\n}\r\n\r\n// to make it work with\r\nauto v = 10_name;\r\n```\r\nin the json, the name of the func would be\r\n```\r\n\"operator \"\"'\r\n```\r\nthose 3 trailing quotes makes it impossible to load this into chrome"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1126",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1126/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1126/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1126/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1126",
    "id": 563811199,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTU0ODQx",
    "number": 1126,
    "title": "add explanation for -Z option in record",
    "user": {
      "login": "dhm04022",
      "id": 33170659,
      "node_id": "MDQ6VXNlcjMzMTcwNjU5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/33170659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhm04022",
      "html_url": "https://github.com/dhm04022",
      "followers_url": "https://api.github.com/users/dhm04022/followers",
      "following_url": "https://api.github.com/users/dhm04022/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhm04022/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhm04022/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhm04022/subscriptions",
      "organizations_url": "https://api.github.com/users/dhm04022/orgs",
      "repos_url": "https://api.github.com/users/dhm04022/repos",
      "events_url": "https://api.github.com/users/dhm04022/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhm04022/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-02-12T07:38:44Z",
    "updated_at": "2020-02-17T07:27:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1126",
      "html_url": "https://github.com/namhyung/uftrace/pull/1126",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1126.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1126.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1124",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1124/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1124/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1124/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1124",
    "id": 563772125,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTIyOTI3",
    "number": 1124,
    "title": "utils: Detect busybox and disable color",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-02-12T05:56:44Z",
    "updated_at": "2020-02-24T11:32:43Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1124",
      "html_url": "https://github.com/namhyung/uftrace/pull/1124",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1124.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1124.patch"
    },
    "body": "In some cases, busybox is used with a script file.\r\n\r\nThe example case is as follows:\r\n```\r\n  $ realpath /usr/bin/less\r\n  /usr/lib64/busybox/usr/bin/less\r\n```\r\nHowever, the file is not an ELF executable, but just a script.\r\n```\r\n  $ cat /usr/lib64/busybox/usr/bin/less\r\n  #!/bin/busybox.nosuid\r\n```\r\nTo detect such case, uftrace has to check whether the file is ELF\r\nexecutable or not.  If it's just a script, then disable color.\r\n\r\nFixed: #1123\r\n\r\nSigned-off-by: Honggyu Kim <honggyu.kp@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1123",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1123/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1123/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1123/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1123",
    "id": 563747069,
    "node_id": "MDU6SXNzdWU1NjM3NDcwNjk=",
    "number": 1123,
    "title": "busybox less detection fail",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 79918203,
        "node_id": "MDU6TGFiZWw3OTkxODIwMw==",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/bug",
        "name": "bug",
        "color": "fbca04",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-12T04:37:33Z",
    "updated_at": "2020-02-12T04:40:03Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "In some cases, uftrace fails to detect busybox less, so the color is broken.\r\n\r\nI found that the problem happens because of the following busybox less.\r\n```\r\n$ readlink /usr/bin/less\r\n/usr/lib64/busybox/usr/bin/less\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1121",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1121/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1121/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1121/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1121",
    "id": 563015673,
    "node_id": "MDU6SXNzdWU1NjMwMTU2NzM=",
    "number": 1121,
    "title": "demangle failures",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-11T07:12:13Z",
    "updated_at": "2020-02-11T07:21:26Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "Here are the list of symbols that are failed to be demangled by our internal demangler.\r\n```\r\n$ cat symbols.txt | xargs ./misc/demangler\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE16do_always_noconvEv\r\n_ZNSt14numeric_limitsIDuE8is_exactE\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE11do_encodingEv\r\n_ZNSt14numeric_limitsIDuE10has_denormE\r\n_ZTSSt7codecvtIDiDu11__mbstate_tE\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_\r\n_ZNSt14numeric_limitsIDuE17has_signaling_NaNE\r\n_ZTVSt7codecvtIDsDu11__mbstate_tE\r\n_ZNSt7codecvtIDiDu11__mbstate_tE2idE\r\n_ZNSt14numeric_limitsIDuE8digits10E\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE13do_max_lengthEv\r\n_ZTISt7codecvtIDsDu11__mbstate_tE\r\n_ZNSt14numeric_limitsIDuE5radixE\r\n_ZNSt14numeric_limitsIDuE6digitsE\r\n_ZNSt14numeric_limitsIDuE13has_quiet_NaNE\r\n_ZNSt14numeric_limitsIDuE12max_exponentE\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE13do_max_lengthEv\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE9do_lengthERS0_PKDuS4_m\r\n_ZNSt7codecvtIDiDu11__mbstate_tED1Ev\r\n_ZNSt14numeric_limitsIDuE15tinyness_beforeE\r\n_ZTIDu\r\n_ZNSt7codecvtIDsDu11__mbstate_tED0Ev\r\n_ZNSt14numeric_limitsIDuE12min_exponentE\r\n_ZNSt14numeric_limitsIDuE5trapsE\r\n_ZNSt14numeric_limitsIDuE14min_exponent10E\r\n_ZNSt7codecvtIDsDu11__mbstate_tED2Ev\r\n_ZNSt14numeric_limitsIDuE9is_signedE\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE10do_unshiftERS0_PDuS3_RS3_\r\n_ZTVSt7codecvtIDiDu11__mbstate_tE\r\n_ZNSt14numeric_limitsIDuE11round_styleE\r\n_ZNSt14numeric_limitsIDuE15has_denorm_lossE\r\n_ZTSSt7codecvtIDsDu11__mbstate_tE\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_\r\n_ZNSt14numeric_limitsIDuE12has_infinityE\r\n_ZNSt14numeric_limitsIDuE14is_specializedE\r\n_ZTISt7codecvtIDiDu11__mbstate_tE\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE10do_unshiftERS0_PDuS3_RS3_\r\n_ZNSt7codecvtIDsDu11__mbstate_tE2idE\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE11do_encodingEv\r\n_ZNSt14numeric_limitsIDuE10is_integerE\r\n_ZNSt7codecvtIDiDu11__mbstate_tED0Ev\r\n_ZTIPKDu\r\n_ZNSt14numeric_limitsIDuE9is_moduloE\r\n_ZNKSt7codecvtIDiDu11__mbstate_tE9do_lengthERS0_PKDuS4_m\r\n_ZNSt7codecvtIDiDu11__mbstate_tED2Ev\r\n_ZNKSt7codecvtIDsDu11__mbstate_tE16do_always_noconvEv\r\n_ZTIPDu\r\n_ZNSt7codecvtIDsDu11__mbstate_tED1Ev\r\n_ZNSt14numeric_limitsIDuE10is_boundedE\r\n_ZNSt14numeric_limitsIDuE14max_exponent10E\r\n_ZNSt14numeric_limitsIDuE9is_iec559E\r\n_ZNSt7codecvtIDsDu11__mbstate_tED1Ev\r\n_ZNSt7codecvtIDiDu11__mbstate_tED1Ev\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1116",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1116/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1116/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1116/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1116",
    "id": 562098245,
    "node_id": "MDU6SXNzdWU1NjIwOTgyNDU=",
    "number": 1116,
    "title": "clang compiled uftrace test result",
    "user": {
      "login": "honggyukim",
      "id": 19642328,
      "node_id": "MDQ6VXNlcjE5NjQyMzI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19642328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honggyukim",
      "html_url": "https://github.com/honggyukim",
      "followers_url": "https://api.github.com/users/honggyukim/followers",
      "following_url": "https://api.github.com/users/honggyukim/following{/other_user}",
      "gists_url": "https://api.github.com/users/honggyukim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honggyukim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honggyukim/subscriptions",
      "organizations_url": "https://api.github.com/users/honggyukim/orgs",
      "repos_url": "https://api.github.com/users/honggyukim/repos",
      "events_url": "https://api.github.com/users/honggyukim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honggyukim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1783742158,
        "node_id": "MDU6TGFiZWwxNzgzNzQyMTU4",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/tests",
        "name": "tests",
        "color": "1a7db2",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-09T00:16:45Z",
    "updated_at": "2020-02-09T00:24:53Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "I've compiled uftrace with clang-9.0.1 and run tests in x86_64. The result is as follows:\r\n```\r\nTest case                 pg             finstrument-fu\r\n------------------------: O0 O1 O2 O3 Os O0 O1 O2 O3 Os\r\n015 longjmp             : OK NG NG NG NG OK OK OK OK OK\r\n051 return              : NG NG NG NG NG NG OK OK OK OK\r\n052 nested_func         : BI BI BI BI BI BI BI BI BI BI\r\n062 arg_char            : OK NG NG NG NG SK SK SK SK SK\r\n082 arg_many            : NG OK OK OK OK SK SK SK SK SK\r\n083 arg_float           : NG NG NG NG NG SK SK SK SK SK\r\n084 arg_mixed           : NG NG NG NG NG SK SK SK SK SK\r\n085 arg_reg             : NG NG NG NG NG SK SK SK SK SK\r\n087 arg_variadic        : NG NG NG NG NG SK SK SK SK SK\r\n090 report_recursive    : OK NG NG NG NG OK OK OK OK OK\r\n124 exception           : OK OK OK OK OK NG NG NG NG NG\r\n125 report_range        : OK NG OK OK OK OK OK OK OK OK\r\n136 dynamic             : BI BI BI BI BI BI BI BI BI BI\r\n151 recv_runcmd         : NG NG NG NG NG NG NG NG NG NG\r\n162 pltbind_now_pie     : BI BI BI BI BI BI BI BI BI BI\r\n181 graph_full          : NG NG NG NG NG NG NG NG NG NG\r\n182 thread_exit         : SG OK OK NG OK SG OK NG NG NG\r\n184 arg_enum            : NG NG NG NG NG NG NG NG NG NG\r\n185 exception2          : OK OK OK OK OK NG NG NG NG NG\r\n186 exception3          : OK OK OK OK OK NG NG NG NG NG\r\n191 posix_spawn         : NG OK OK OK OK NG OK OK OK OK\r\n198 lib_arg_float       : NG NG NG NG NG SK SK SK SK SK\r\n201 arg_dwarf1          : NG NG NG NG NG SK SK SK SK SK\r\n202 arg_dwarf2          : NG OK OK OK OK SK SK SK SK SK\r\n203 arg_dwarf3          : NG NG NG NG NG SK SK SK SK SK\r\n222 external_data       : OK OK OK OK OK OK OK NG OK OK\r\n225 dynamic_size        : NG OK OK OK NG NG OK OK OK NG\r\n228 read_pmu_cycle3     : OK NG NG NG NG OK OK NG OK OK\r\n231 arg_bound           : NG OK OK OK OK SK SK SK SK SK\r\n232 dynamic_unpatch     : BI BI BI BI BI BI BI BI BI BI\r\n```\r\nThe tests are executed after changing as follows:\r\n```diff\r\n$ diff -u a/.config b/.config\r\n--- a/.config   2020-02-09 09:24:00.711544768 +0900\r\n+++ b/.config   2020-02-09 09:23:48.635330333 +0900\r\n@@ -6,7 +6,7 @@\r\n override etcdir := /home/honggyu/usr/etc\r\n\r\n override ARCH   := x86_64\r\n-override CC     := gcc\r\n+override CC     := clang-9\r\n override LD     := ld\r\n override CFLAGS  =\r\n override LDFLAGS =\r\n```\r\n```diff\r\ndiff --git a/tests/runtest.py b/tests/runtest.py\r\nindex 1ddc8b7..b3a35f3 100755\r\n--- a/tests/runtest.py\r\n+++ b/tests/runtest.py\r\n@@ -10,8 +10,8 @@ import time\r\n\r\n class TestBase:\r\n     supported_lang = {\r\n-        'C':   { 'cc': 'gcc', 'flags': 'CFLAGS',   'ext': '.c' },\r\n-        'C++': { 'cc': 'g++', 'flags': 'CXXFLAGS', 'ext': '.cpp' },\r\n+        'C':   { 'cc': 'clang', 'flags': 'CFLAGS',   'ext': '.c' },\r\n+        'C++': { 'cc': 'clang++', 'flags': 'CXXFLAGS', 'ext': '.cpp' },\r\n     }\r\n\r\n     TEST_SUCCESS = 0\r\n```"
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1114",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1114/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1114/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1114/events",
    "html_url": "https://github.com/namhyung/uftrace/issues/1114",
    "id": 562000686,
    "node_id": "MDU6SXNzdWU1NjIwMDA2ODY=",
    "number": 1114,
    "title": "Clang compiled uftrace unittest failed with ASAN",
    "user": {
      "login": "DanielTimLee",
      "id": 16421480,
      "node_id": "MDQ6VXNlcjE2NDIxNDgw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16421480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielTimLee",
      "html_url": "https://github.com/DanielTimLee",
      "followers_url": "https://api.github.com/users/DanielTimLee/followers",
      "following_url": "https://api.github.com/users/DanielTimLee/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielTimLee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielTimLee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielTimLee/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielTimLee/orgs",
      "repos_url": "https://api.github.com/users/DanielTimLee/repos",
      "events_url": "https://api.github.com/users/DanielTimLee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielTimLee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1783742158,
        "node_id": "MDU6TGFiZWwxNzgzNzQyMTU4",
        "url": "https://api.github.com/repos/namhyung/uftrace/labels/tests",
        "name": "tests",
        "color": "1a7db2",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-02-08T10:25:13Z",
    "updated_at": "2020-03-15T15:02:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "From PR: #1113, on Travis-CI AMD64 Xenial clang-7 environment,\r\nclang compiled uftrace unittest failed with ASAN option enabled.\r\n\r\n<details><summary>ERROR LOG (Long content)</summary>\r\n<p>\r\n\r\n```bash\r\n\r\n  CC       libmcount/plthook.ot\r\n  LINK     unittest\r\n  TEST     test_unit\r\nRunning 188 test cases\r\n======================\r\n[001] unittest_framework            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5522==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5522==The signal is caused by a READ memory access.\r\n==5522==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5522==ABORTING\r\n[002] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5524==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5524==The signal is caused by a READ memory access.\r\n==5524==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5524==ABORTING\r\n[003] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5526==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5526==The signal is caused by a READ memory access.\r\n==5526==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5526==ABORTING\r\n[004] (null)                        : FAIL\r\n[005] option_parsing1               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5530==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5530==The signal is caused by a READ memory access.\r\n==5530==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5530==ABORTING\r\n[006] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5532==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5532==The signal is caused by a READ memory access.\r\n==5532==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5532==ABORTING\r\n[007] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5534==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5534==The signal is caused by a READ memory access.\r\n==5534==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5534==ABORTING\r\n[008] (null)                        : FAIL\r\n[009] option_parsing2               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5538==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5538==The signal is caused by a READ memory access.\r\n==5538==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5538==ABORTING\r\n[010] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5540==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5540==The signal is caused by a READ memory access.\r\n==5540==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5540==ABORTING\r\n[011] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5542==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5542==The signal is caused by a READ memory access.\r\n==5542==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5542==ABORTING\r\n[012] (null)                        : FAIL\r\n[013] option_parsing3               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5546==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5546==The signal is caused by a READ memory access.\r\n==5546==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5546==ABORTING\r\n[014] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5548==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5548==The signal is caused by a READ memory access.\r\n==5548==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5548==ABORTING\r\n[015] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5550==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5550==The signal is caused by a READ memory access.\r\n==5550==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5550==ABORTING\r\n[016] (null)                        : FAIL\r\n[017] option_parsing4               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5554==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5554==The signal is caused by a READ memory access.\r\n==5554==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5554==ABORTING\r\n[018] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5556==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5556==The signal is caused by a READ memory access.\r\n==5556==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5556==ABORTING\r\n[019] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5558==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5558==The signal is caused by a READ memory access.\r\n==5558==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5558==ABORTING\r\n[020] (null)                        : FAIL\r\n[021] option_parsing5               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5567==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5567==The signal is caused by a READ memory access.\r\n==5567==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5567==ABORTING\r\n[022] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5569==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5569==The signal is caused by a READ memory access.\r\n==5569==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5569==ABORTING\r\n[023] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5571==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5571==The signal is caused by a READ memory access.\r\n==5571==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5571==ABORTING\r\n[024] (null)                        : FAIL\r\n[025] session_search                : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5575==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5575==The signal is caused by a READ memory access.\r\n==5575==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5575==ABORTING\r\n[026] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5577==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5577==The signal is caused by a READ memory access.\r\n==5577==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5577==ABORTING\r\n[027] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5579==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5579==The signal is caused by a READ memory access.\r\n==5579==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5579==ABORTING\r\n[028] (null)                        : FAIL\r\n[029] task_search                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5583==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5583==The signal is caused by a READ memory access.\r\n==5583==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5583==ABORTING\r\n[030] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5585==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5585==The signal is caused by a READ memory access.\r\n==5585==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5585==ABORTING\r\n[031] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5587==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5587==The signal is caused by a READ memory access.\r\n==5587==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5587==ABORTING\r\n[032] (null)                        : FAIL\r\n[033] task_symbol                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5591==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5591==The signal is caused by a READ memory access.\r\n==5591==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5591==ABORTING\r\n[034] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5593==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5593==The signal is caused by a READ memory access.\r\n==5593==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5593==ABORTING\r\n[035] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5595==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5595==The signal is caused by a READ memory access.\r\n==5595==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5595==ABORTING\r\n[036] (null)                        : FAIL\r\n[037] task_symbol_dlopen            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5599==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5599==The signal is caused by a READ memory access.\r\n==5599==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5599==ABORTING\r\n[038] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5601==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5601==The signal is caused by a READ memory access.\r\n==5601==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5601==ABORTING\r\n[039] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5603==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5603==The signal is caused by a READ memory access.\r\n==5603==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5603==ABORTING\r\n[040] (null)                        : FAIL\r\n[041] report_find                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5607==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5607==The signal is caused by a READ memory access.\r\n==5607==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5607==ABORTING\r\n[042] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5609==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5609==The signal is caused by a READ memory access.\r\n==5609==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5609==ABORTING\r\n[043] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5611==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5611==The signal is caused by a READ memory access.\r\n==5611==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5611==ABORTING\r\n[044] (null)                        : FAIL\r\n[045] report_sort                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5615==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5615==The signal is caused by a READ memory access.\r\n==5615==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5615==ABORTING\r\n[046] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5617==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5617==The signal is caused by a READ memory access.\r\n==5617==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5617==ABORTING\r\n[047] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5619==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5619==The signal is caused by a READ memory access.\r\n==5619==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5619==ABORTING\r\n[048] (null)                        : FAIL\r\n[049] report_diff                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5623==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5623==The signal is caused by a READ memory access.\r\n==5623==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5623==ABORTING\r\n[050] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5625==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5625==The signal is caused by a READ memory access.\r\n==5625==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5625==ABORTING\r\n[051] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5627==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5627==The signal is caused by a READ memory access.\r\n==5627==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5627==ABORTING\r\n[052] (null)                        : FAIL\r\n[053] argspec_auto_args             : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5631==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5631==The signal is caused by a READ memory access.\r\n==5631==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5631==ABORTING\r\n[054] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5633==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5633==The signal is caused by a READ memory access.\r\n==5633==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5633==ABORTING\r\n[055] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5635==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5635==The signal is caused by a READ memory access.\r\n==5635==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5635==ABORTING\r\n[056] (null)                        : FAIL\r\n[057] argspec_extract               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5639==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5639==The signal is caused by a READ memory access.\r\n==5639==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5639==ABORTING\r\n[058] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5641==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5641==The signal is caused by a READ memory access.\r\n==5641==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5641==ABORTING\r\n[059] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5643==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5643==The signal is caused by a READ memory access.\r\n==5643==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5643==ABORTING\r\n[060] (null)                        : FAIL\r\n[061] argspec_parse_enum            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5647==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5647==The signal is caused by a READ memory access.\r\n==5647==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5647==ABORTING\r\n[062] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5649==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5649==The signal is caused by a READ memory access.\r\n==5649==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5649==ABORTING\r\n[063] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5651==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5651==The signal is caused by a READ memory access.\r\n==5651==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5651==ABORTING\r\n[064] (null)                        : FAIL\r\n[065] demangle_simple1              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5655==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5655==The signal is caused by a READ memory access.\r\n==5655==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5655==ABORTING\r\n[066] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5657==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5657==The signal is caused by a READ memory access.\r\n==5657==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5657==ABORTING\r\n[067] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5659==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5659==The signal is caused by a READ memory access.\r\n==5659==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5659==ABORTING\r\n[068] (null)                        : FAIL\r\n[069] demangle_simple2              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5663==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5663==The signal is caused by a READ memory access.\r\n==5663==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5663==ABORTING\r\n[070] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5665==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5665==The signal is caused by a READ memory access.\r\n==5665==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5665==ABORTING\r\n[071] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5667==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5667==The signal is caused by a READ memory access.\r\n==5667==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5667==ABORTING\r\n[072] (null)                        : FAIL\r\n[073] demangle_simple3              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5671==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5671==The signal is caused by a READ memory access.\r\n==5671==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5671==ABORTING\r\n[074] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5673==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5673==The signal is caused by a READ memory access.\r\n==5673==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5673==ABORTING\r\n[075] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5675==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5675==The signal is caused by a READ memory access.\r\n==5675==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5675==ABORTING\r\n[076] (null)                        : FAIL\r\n[077] demangle_simple4              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5679==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5679==The signal is caused by a READ memory access.\r\n==5679==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5679==ABORTING\r\n[078] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5681==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5681==The signal is caused by a READ memory access.\r\n==5681==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5681==ABORTING\r\n[079] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5683==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5683==The signal is caused by a READ memory access.\r\n==5683==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5683==ABORTING\r\n[080] (null)                        : FAIL\r\n[081] demangle_simple5              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5687==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5687==The signal is caused by a READ memory access.\r\n==5687==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5687==ABORTING\r\n[082] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5689==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5689==The signal is caused by a READ memory access.\r\n==5689==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5689==ABORTING\r\n[083] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5691==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5691==The signal is caused by a READ memory access.\r\n==5691==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5691==ABORTING\r\n[084] (null)                        : FAIL\r\n[085] demangle_simple6              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5695==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5695==The signal is caused by a READ memory access.\r\n==5695==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5695==ABORTING\r\n[086] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5697==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5697==The signal is caused by a READ memory access.\r\n==5697==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5697==ABORTING\r\n[087] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5699==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5699==The signal is caused by a READ memory access.\r\n==5699==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5699==ABORTING\r\n[088] (null)                        : FAIL\r\n[089] demangle_simple7              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5703==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5703==The signal is caused by a READ memory access.\r\n==5703==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5703==ABORTING\r\n[090] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5705==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5705==The signal is caused by a READ memory access.\r\n==5705==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5705==ABORTING\r\n[091] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5707==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5707==The signal is caused by a READ memory access.\r\n==5707==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5707==ABORTING\r\n[092] (null)                        : FAIL\r\n[093] demangle_simple8              : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5711==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5711==The signal is caused by a READ memory access.\r\n==5711==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5711==ABORTING\r\n[094] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5713==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5713==The signal is caused by a READ memory access.\r\n==5713==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5713==ABORTING\r\n[095] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5715==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5715==The signal is caused by a READ memory access.\r\n==5715==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5715==ABORTING\r\n[096] (null)                        : FAIL\r\n[097] demangle_rust1                : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5719==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5719==The signal is caused by a READ memory access.\r\n==5719==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5719==ABORTING\r\n[098] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5721==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5721==The signal is caused by a READ memory access.\r\n==5721==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5721==ABORTING\r\n[099] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5723==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5723==The signal is caused by a READ memory access.\r\n==5723==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5723==ABORTING\r\n[100] (null)                        : FAIL\r\n[101] filter_setup_simple           : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5727==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5727==The signal is caused by a READ memory access.\r\n==5727==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5727==ABORTING\r\n[102] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5729==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5729==The signal is caused by a READ memory access.\r\n==5729==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5729==ABORTING\r\n[103] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5731==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5731==The signal is caused by a READ memory access.\r\n==5731==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5731==ABORTING\r\n[104] (null)                        : FAIL\r\n[105] filter_setup_regex            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5735==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5735==The signal is caused by a READ memory access.\r\n==5735==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5735==ABORTING\r\n[106] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5737==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5737==The signal is caused by a READ memory access.\r\n==5737==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5737==ABORTING\r\n[107] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5739==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5739==The signal is caused by a READ memory access.\r\n==5739==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5739==ABORTING\r\n[108] (null)                        : FAIL\r\n[109] filter_setup_glob             : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5743==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5743==The signal is caused by a READ memory access.\r\n==5743==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5743==ABORTING\r\n[110] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5745==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5745==The signal is caused by a READ memory access.\r\n==5745==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5745==ABORTING\r\n[111] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5747==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5747==The signal is caused by a READ memory access.\r\n==5747==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5747==ABORTING\r\n[112] (null)                        : FAIL\r\n[113] filter_setup_notrace          : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5751==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5751==The signal is caused by a READ memory access.\r\n==5751==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5751==ABORTING\r\n[114] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5753==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5753==The signal is caused by a READ memory access.\r\n==5753==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5753==ABORTING\r\n[115] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5755==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5755==The signal is caused by a READ memory access.\r\n==5755==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5755==ABORTING\r\n[116] (null)                        : FAIL\r\n[117] filter_match                  : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5759==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5759==The signal is caused by a READ memory access.\r\n==5759==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5759==ABORTING\r\n[118] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5761==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5761==The signal is caused by a READ memory access.\r\n==5761==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5761==ABORTING\r\n[119] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5763==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5763==The signal is caused by a READ memory access.\r\n==5763==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5763==ABORTING\r\n[120] (null)                        : FAIL\r\n[121] trigger_setup_actions         : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5767==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5767==The signal is caused by a READ memory access.\r\n==5767==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5767==ABORTING\r\n[122] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5769==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5769==The signal is caused by a READ memory access.\r\n==5769==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5769==ABORTING\r\n[123] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5771==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5771==The signal is caused by a READ memory access.\r\n==5771==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5771==ABORTING\r\n[124] (null)                        : FAIL\r\n[125] trigger_setup_filters         : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5775==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5775==The signal is caused by a READ memory access.\r\n==5775==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5775==ABORTING\r\n[126] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5777==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5777==The signal is caused by a READ memory access.\r\n==5777==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5777==ABORTING\r\n[127] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5779==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5779==The signal is caused by a READ memory access.\r\n==5779==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5779==ABORTING\r\n[128] (null)                        : FAIL\r\n[129] trigger_setup_args            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5783==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5783==The signal is caused by a READ memory access.\r\n==5783==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5783==ABORTING\r\n[130] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5785==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5785==The signal is caused by a READ memory access.\r\n==5785==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5785==ABORTING\r\n[131] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5787==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5787==The signal is caused by a READ memory access.\r\n==5787==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5787==ABORTING\r\n[132] (null)                        : FAIL\r\n[133] fstack_read                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5791==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5791==The signal is caused by a READ memory access.\r\n==5791==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5791==ABORTING\r\n[134] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5793==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5793==The signal is caused by a READ memory access.\r\n==5793==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5793==ABORTING\r\n[135] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5795==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5795==The signal is caused by a READ memory access.\r\n==5795==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5795==ABORTING\r\n[136] (null)                        : FAIL\r\n[137] fstack_skip                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5799==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5799==The signal is caused by a READ memory access.\r\n==5799==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5799==ABORTING\r\n[138] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5801==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5801==The signal is caused by a READ memory access.\r\n==5801==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5801==ABORTING\r\n[139] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5803==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5803==The signal is caused by a READ memory access.\r\n==5803==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5803==ABORTING\r\n[140] (null)                        : FAIL\r\n[141] fstack_time                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5807==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5807==The signal is caused by a READ memory access.\r\n==5807==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5807==ABORTING\r\n[142] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5809==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5809==The signal is caused by a READ memory access.\r\n==5809==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5809==ABORTING\r\n[143] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5811==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5811==The signal is caused by a READ memory access.\r\n==5811==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5811==ABORTING\r\n[144] (null)                        : FAIL\r\n[145] kernel_read                   : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5815==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5815==The signal is caused by a READ memory access.\r\n==5815==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5815==ABORTING\r\n[146] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5817==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5817==The signal is caused by a READ memory access.\r\n==5817==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5817==ABORTING\r\n[147] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5819==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5819==The signal is caused by a READ memory access.\r\n==5819==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5819==ABORTING\r\n[148] (null)                        : FAIL\r\n[149] kernel_cpu_read               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5823==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5823==The signal is caused by a READ memory access.\r\n==5823==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5823==ABORTING\r\n[150] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5825==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5825==The signal is caused by a READ memory access.\r\n==5825==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5825==ABORTING\r\n[151] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5827==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5827==The signal is caused by a READ memory access.\r\n==5827==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5827==ABORTING\r\n[152] (null)                        : FAIL\r\n[153] kernel_event_read             : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5831==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5831==The signal is caused by a READ memory access.\r\n==5831==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5831==ABORTING\r\n[154] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5833==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5833==The signal is caused by a READ memory access.\r\n==5833==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5833==ABORTING\r\n[155] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5835==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5835==The signal is caused by a READ memory access.\r\n==5835==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5835==ABORTING\r\n[156] (null)                        : FAIL\r\n[157] symbol_load_module            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5839==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5839==The signal is caused by a READ memory access.\r\n==5839==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5839==ABORTING\r\n[158] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5841==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5841==The signal is caused by a READ memory access.\r\n==5841==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5841==ABORTING\r\n[159] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5843==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5843==The signal is caused by a READ memory access.\r\n==5843==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5843==ABORTING\r\n[160] (null)                        : FAIL\r\n[161] symbol_load_map               : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5847==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5847==The signal is caused by a READ memory access.\r\n==5847==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5847==ABORTING\r\n[162] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5849==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5849==The signal is caused by a READ memory access.\r\n==5849==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5849==ABORTING\r\n[163] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5851==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5851==The signal is caused by a READ memory access.\r\n==5851==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5851==ABORTING\r\n[164] (null)                        : FAIL\r\n[165] utils_parse_cmdline           : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5855==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5855==The signal is caused by a READ memory access.\r\n==5855==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5855==ABORTING\r\n[166] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5857==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5857==The signal is caused by a READ memory access.\r\n==5857==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5857==ABORTING\r\n[167] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5859==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5859==The signal is caused by a READ memory access.\r\n==5859==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5859==ABORTING\r\n[168] (null)                        : FAIL\r\n[169] utils_strv                    : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5863==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5863==The signal is caused by a READ memory access.\r\n==5863==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5863==ABORTING\r\n[170] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5865==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5865==The signal is caused by a READ memory access.\r\n==5865==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5865==ABORTING\r\n[171] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5867==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5867==The signal is caused by a READ memory access.\r\n==5867==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5867==ABORTING\r\n[172] (null)                        : FAIL\r\n[173] mcount_thread_data            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5871==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5871==The signal is caused by a READ memory access.\r\n==5871==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5871==ABORTING\r\n[174] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5873==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5873==The signal is caused by a READ memory access.\r\n==5873==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5873==ABORTING\r\n[175] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5875==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5875==The signal is caused by a READ memory access.\r\n==5875==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5875==ABORTING\r\n[176] (null)                        : FAIL\r\n[177] mcount_signal_setup           : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5879==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5879==The signal is caused by a READ memory access.\r\n==5879==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5879==ABORTING\r\n[178] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5881==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5881==The signal is caused by a READ memory access.\r\n==5881==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5881==ABORTING\r\n[179] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5883==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5883==The signal is caused by a READ memory access.\r\n==5883==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5883==ABORTING\r\n[180] (null)                        : FAIL\r\n[181] mcount_wrap_dlopen            : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5887==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5887==The signal is caused by a READ memory access.\r\n==5887==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5887==ABORTING\r\n[182] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5889==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5889==The signal is caused by a READ memory access.\r\n==5889==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5889==ABORTING\r\n[183] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5891==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5891==The signal is caused by a READ memory access.\r\n==5891==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5891==ABORTING\r\n[184] (null)                        : FAIL\r\n[185] mcount_debug_domain           : PASS\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5895==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5895==The signal is caused by a READ memory access.\r\n==5895==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5895==ABORTING\r\n[186] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5897==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5897==The signal is caused by a READ memory access.\r\n==5897==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5897==ABORTING\r\n[187] (null)                        : FAIL\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==5899==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd4d690a48e bp 0x7fff0b5827f0 sp 0x7fff0b5824f0 T0)\r\n==5899==The signal is caused by a READ memory access.\r\n==5899==Hint: address points to the zero page.\r\n    #0 0x7fd4d690a48d in strcasestr (/lib/x86_64-linux-gnu/libc.so.6+0x9548d)\r\n    #1 0x43415f in __interceptor_strcasestr /tmp/final/llvm.src/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:581:13\r\n    #2 0x4f7a4d in set_debug_domain /home/travis/build/namhyung/uftrace/tests/unittest.c:86:7\r\n    #3 0x4f6bef in run_unit_test /home/travis/build/namhyung/uftrace/tests/unittest.c:108:3\r\n    #4 0x4f5e6c in main /home/travis/build/namhyung/uftrace/tests/unittest.c:286:3\r\n    #5 0x7fd4d689582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\r\n    #6 0x41dd08 in _start (/home/travis/build/namhyung/uftrace/tests/unittest+0x41dd08)\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x9548d) in strcasestr\r\n==5899==ABORTING\r\n[188] (null)                        : FAIL\r\nunit test stats\r\n====================\r\n 47 ran successfully\r\n141 failed\r\n  0 skipped\r\n  0 signal caught\r\n  0 unknown result\r\nMakefile:34: recipe for target 'test_unit' failed\r\nmake[1]: *** [test_unit] Error 1\r\nMakefile:345: recipe for target 'unittest' failed\r\nmake: *** [unittest] Error 2\r\nThe command \"./configure && make ASAN=1 && make ASAN=1 unittest\" exited with 2.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThis can be reproduced with below environment and commands.\r\n**(Not exactly the same, uses `clang-8` but reproducible)**\r\n\r\nFrom `ubuntu:xenial`  docker image,\r\n`docker exec -it ubuntu:xenial bash`\r\n\r\n```bash\r\napt update\r\napt install sudo git wget lsb-release python-software-properties software-properties-common -y\r\nwget https://apt.llvm.org/llvm.sh\r\nchmod +x llvm.sh\r\n./llvm.sh 8\r\ngit clone https://github.com/namhyung/uftrace\r\ncd uftrace/\r\n./misc/install-deps.sh -y\r\nexport CC=clang-8 \r\nexport MAKEFLAGS='-j 4'\r\n./configure && make ASAN=1 && make ASAN=1 unittest\r\n```\r\n\r\n\r\n\r\nNo error occurs without ASAN."
  },
  {
    "url": "https://api.github.com/repos/namhyung/uftrace/issues/1113",
    "repository_url": "https://api.github.com/repos/namhyung/uftrace",
    "labels_url": "https://api.github.com/repos/namhyung/uftrace/issues/1113/labels{/name}",
    "comments_url": "https://api.github.com/repos/namhyung/uftrace/issues/1113/comments",
    "events_url": "https://api.github.com/repos/namhyung/uftrace/issues/1113/events",
    "html_url": "https://github.com/namhyung/uftrace/pull/1113",
    "id": 561973407,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyNjgyMzYz",
    "number": 1113,
    "title": "build: Add multi-arch and multi-compiler build test",
    "user": {
      "login": "DanielTimLee",
      "id": 16421480,
      "node_id": "MDQ6VXNlcjE2NDIxNDgw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16421480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielTimLee",
      "html_url": "https://github.com/DanielTimLee",
      "followers_url": "https://api.github.com/users/DanielTimLee/followers",
      "following_url": "https://api.github.com/users/DanielTimLee/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielTimLee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielTimLee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielTimLee/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielTimLee/orgs",
      "repos_url": "https://api.github.com/users/DanielTimLee/repos",
      "events_url": "https://api.github.com/users/DanielTimLee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielTimLee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-02-08T05:26:28Z",
    "updated_at": "2020-03-01T07:36:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/namhyung/uftrace/pulls/1113",
      "html_url": "https://github.com/namhyung/uftrace/pull/1113",
      "diff_url": "https://github.com/namhyung/uftrace/pull/1113.diff",
      "patch_url": "https://github.com/namhyung/uftrace/pull/1113.patch"
    },
    "body": "Recently, Travis CI released support for multi-arch build. And also, it has multi-compiler support.\r\n\r\nBy this commit, travis will compile with amd64, arm64 architecture and with gcc, clang compiler. (Each arch x compilers)\r\n\r\nFixed: #1112 \r\n\r\nSigned-off-by: Daniel T. Lee <danieltimlee@gmail.com>"
  }
]
