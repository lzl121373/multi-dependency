[
  {
    "url": "https://api.github.com/repos/google/guava/issues/2833",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2833/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2833/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2833/events",
    "html_url": "https://github.com/google/guava/issues/2833",
    "id": 232436731,
    "node_id": "MDU6SXNzdWUyMzI0MzY3MzE=",
    "number": 2833,
    "title": "Confusion over throwing exception on remove() after a hasNext()",
    "user": {
      "login": "mebigfatguy",
      "id": 170161,
      "node_id": "MDQ6VXNlcjE3MDE2MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/170161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mebigfatguy",
      "html_url": "https://github.com/mebigfatguy",
      "followers_url": "https://api.github.com/users/mebigfatguy/followers",
      "following_url": "https://api.github.com/users/mebigfatguy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mebigfatguy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mebigfatguy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mebigfatguy/subscriptions",
      "organizations_url": "https://api.github.com/users/mebigfatguy/orgs",
      "repos_url": "https://api.github.com/users/mebigfatguy/repos",
      "events_url": "https://api.github.com/users/mebigfatguy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mebigfatguy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-31T02:36:52Z",
    "updated_at": "2017-05-31T03:14:17Z",
    "closed_at": "2017-05-31T03:14:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am running\r\n```@CollectionFeature.Require(absent = KNOWN_ORDER, value = SUPPORTS_ITERATOR_REMOVE)\r\n  public void testIterator_unknownOrderRemoveSupported() {\r\n    runIteratorTest(MODIFIABLE, IteratorTester.KnownOrder.UNKNOWN_ORDER, getSampleElements());\r\n  }\r\n```\r\non a set, and the stimuli running is\r\n\r\n[hasNext, hasNext, next, hasNext, remove]\r\n\r\nMy set throws an IllegalStateException on the remove, but the reference does not throw an exception.\r\n\r\nthus, it fails, in\r\n\r\n```if (referenceException == null) {\r\n      if (targetException != null) {\r\n        Helpers.fail(targetException, \"Target threw exception when reference did not\");\r\n      }\r\n```\r\n\r\nAm i wrong in throwing that exception? i thought once hasNext() was called, the remove couldn't be called...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2832",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2832/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2832/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2832/events",
    "html_url": "https://github.com/google/guava/issues/2832",
    "id": 232420201,
    "node_id": "MDU6SXNzdWUyMzI0MjAyMDE=",
    "number": 2832,
    "title": "null unsupported checks only look for NPEs",
    "user": {
      "login": "mebigfatguy",
      "id": 170161,
      "node_id": "MDQ6VXNlcjE3MDE2MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/170161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mebigfatguy",
      "html_url": "https://github.com/mebigfatguy",
      "followers_url": "https://api.github.com/users/mebigfatguy/followers",
      "following_url": "https://api.github.com/users/mebigfatguy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mebigfatguy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mebigfatguy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mebigfatguy/subscriptions",
      "organizations_url": "https://api.github.com/users/mebigfatguy/orgs",
      "repos_url": "https://api.github.com/users/mebigfatguy/repos",
      "events_url": "https://api.github.com/users/mebigfatguy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mebigfatguy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-31T00:29:02Z",
    "updated_at": "2017-05-31T00:35:38Z",
    "closed_at": "2017-05-31T00:35:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The test\r\n```java\r\n@CollectionFeature.Require(value = SUPPORTS_ADD, absent = ALLOWS_NULL_VALUES)\r\n  public void testAddAll_nullUnsupported() {\r\n    List<E> containsNull = singletonList(null);\r\n    try {\r\n      collection.addAll(containsNull);\r\n      fail(\"addAll(containsNull) should throw\");\r\n    } catch (NullPointerException expected) {\r\n    }\r\n    expectUnchanged();\r\n    expectNullMissingWhenNullUnsupported(\r\n        \"Should not contain null after unsupported addAll(containsNull)\");\r\n  }\r\n```\r\n\r\nonly catches NPE. My collection throws IllegalArgumentException when null is presented, and thus testlib fails the test. Seems like any exception really should be caught. or at least IAE",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2831",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2831/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2831/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2831/events",
    "html_url": "https://github.com/google/guava/issues/2831",
    "id": 232373830,
    "node_id": "MDU6SXNzdWUyMzIzNzM4MzA=",
    "number": 2831,
    "title": "Non optional compile dependencies in Guava 22.0",
    "user": {
      "login": "sn42",
      "id": 21104385,
      "node_id": "MDQ6VXNlcjIxMTA0Mzg1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21104385?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sn42",
      "html_url": "https://github.com/sn42",
      "followers_url": "https://api.github.com/users/sn42/followers",
      "following_url": "https://api.github.com/users/sn42/following{/other_user}",
      "gists_url": "https://api.github.com/users/sn42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sn42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sn42/subscriptions",
      "organizations_url": "https://api.github.com/users/sn42/orgs",
      "repos_url": "https://api.github.com/users/sn42/repos",
      "events_url": "https://api.github.com/users/sn42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sn42/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-30T20:35:09Z",
    "updated_at": "2017-05-30T20:37:47Z",
    "closed_at": "2017-05-30T20:37:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The maven artifact for guava 22.0 declares non-optional compile dependencies (e.g. jsr305, error_prone_annotations) while the previous version 21.0 declares all compile dependencies as optional. Is this intended?\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2830",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2830/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2830/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2830/events",
    "html_url": "https://github.com/google/guava/issues/2830",
    "id": 231981075,
    "node_id": "MDU6SXNzdWUyMzE5ODEwNzU=",
    "number": 2830,
    "title": "Unchecked sources and sinks",
    "user": {
      "login": "ogregoire",
      "id": 666970,
      "node_id": "MDQ6VXNlcjY2Njk3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/666970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogregoire",
      "html_url": "https://github.com/ogregoire",
      "followers_url": "https://api.github.com/users/ogregoire/followers",
      "following_url": "https://api.github.com/users/ogregoire/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogregoire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogregoire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogregoire/subscriptions",
      "organizations_url": "https://api.github.com/users/ogregoire/orgs",
      "repos_url": "https://api.github.com/users/ogregoire/repos",
      "events_url": "https://api.github.com/users/ogregoire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogregoire/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-29T10:08:30Z",
    "updated_at": "2018-06-27T20:25:03Z",
    "closed_at": "2018-06-27T20:24:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In Java 8, the type [`java.io.UncheckedIOException`](http://docs.oracle.com/javase/8/docs/api/java/io/UncheckedIOException.html) exists and its sole role is to wrap `IOException`. It is notably used in `Stream`-returning methods like `Files.lines(Path [,Charset])`. While it is indeed useful for streaming operations, it's also fairly recognizable when catching `RuntimeException`. The wrapped `IOException` is easily accessible without any cast thanks to the overloaded `getCause` method. Also, nothing in its documentation constrains it to streaming operations.\r\n\r\nSo I was wondering if to avoid the checked exceptions hell, we might get an `openStream`-like method on `ByteSource`, `ByteSink`, `CharSource` and `CharSink` methods, and start a steady migration towards `UncheckedIOException` on these classes for Java 8 users.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2829",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2829/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2829/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2829/events",
    "html_url": "https://github.com/google/guava/issues/2829",
    "id": 231604421,
    "node_id": "MDU6SXNzdWUyMzE2MDQ0MjE=",
    "number": 2829,
    "title": "Ordering.immutableSortedCopy should accept wildcard",
    "user": {
      "login": "turbanoff",
      "id": 741251,
      "node_id": "MDQ6VXNlcjc0MTI1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/741251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/turbanoff",
      "html_url": "https://github.com/turbanoff",
      "followers_url": "https://api.github.com/users/turbanoff/followers",
      "following_url": "https://api.github.com/users/turbanoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/turbanoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/turbanoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/turbanoff/subscriptions",
      "organizations_url": "https://api.github.com/users/turbanoff/orgs",
      "repos_url": "https://api.github.com/users/turbanoff/repos",
      "events_url": "https://api.github.com/users/turbanoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/turbanoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-26T11:44:39Z",
    "updated_at": "2017-09-13T23:41:54Z",
    "closed_at": "2017-09-13T23:41:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Ordering.immutableSortedCopy should allow to pass wildcard type (Similar to ImmutableList.copyOf()).\r\n\r\n    public <E extends T> ImmutableList<E> immutableSortedCopy(Iterable<? extends E> elements).\r\n\r\nWe use it sometimes, but lack of wildcard forces to use ugly casts.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2826",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2826/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2826/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2826/events",
    "html_url": "https://github.com/google/guava/issues/2826",
    "id": 231045903,
    "node_id": "MDU6SXNzdWUyMzEwNDU5MDM=",
    "number": 2826,
    "title": "Graph Wiki needs updating",
    "user": {
      "login": "jbduncan",
      "id": 2482228,
      "node_id": "MDQ6VXNlcjI0ODIyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2482228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbduncan",
      "html_url": "https://github.com/jbduncan",
      "followers_url": "https://api.github.com/users/jbduncan/followers",
      "following_url": "https://api.github.com/users/jbduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/jbduncan/orgs",
      "repos_url": "https://api.github.com/users/jbduncan/repos",
      "events_url": "https://api.github.com/users/jbduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbduncan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-24T13:47:40Z",
    "updated_at": "2017-05-25T17:02:48Z",
    "closed_at": "2017-05-25T17:02:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "@jrtom It looks like the [GraphsExplained](https://github.com/google/guava/wiki/GraphsExplained) page on the wiki needs updating, as at least two pieces of information are now out-of-date:\r\n1. `Graphs.equivalent` is now deprecated, so https://github.com/google/guava/wiki/GraphsExplained#equals-hashcode-and-graph-equivalence should be updated to say that `(Graph|ValueGraph|Network).equals` is preferred instead.\r\n2. Accessor methods no longer take `Object` parameters and take generic typed parameters instead, so https://github.com/google/guava/wiki/GraphsExplained#accessor-methods should be updated to reflect this.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2825",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2825/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2825/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2825/events",
    "html_url": "https://github.com/google/guava/pull/2825",
    "id": 230827384,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTIyMDgzNzQz",
    "number": 2825,
    "title": "Added some Unit Tests",
    "user": {
      "login": "TheRealHaui",
      "id": 6312834,
      "node_id": "MDQ6VXNlcjYzMTI4MzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6312834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheRealHaui",
      "html_url": "https://github.com/TheRealHaui",
      "followers_url": "https://api.github.com/users/TheRealHaui/followers",
      "following_url": "https://api.github.com/users/TheRealHaui/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheRealHaui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheRealHaui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheRealHaui/subscriptions",
      "organizations_url": "https://api.github.com/users/TheRealHaui/orgs",
      "repos_url": "https://api.github.com/users/TheRealHaui/repos",
      "events_url": "https://api.github.com/users/TheRealHaui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheRealHaui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-23T20:06:26Z",
    "updated_at": "2017-05-25T20:38:44Z",
    "closed_at": "2017-05-25T20:38:44Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2825",
      "html_url": "https://github.com/google/guava/pull/2825",
      "diff_url": "https://github.com/google/guava/pull/2825.diff",
      "patch_url": "https://github.com/google/guava/pull/2825.patch"
    },
    "body": "Added some Unit Tests that cover uncovered code until yet.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2824",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2824/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2824/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2824/events",
    "html_url": "https://github.com/google/guava/issues/2824",
    "id": 230690594,
    "node_id": "MDU6SXNzdWUyMzA2OTA1OTQ=",
    "number": 2824,
    "title": "Unnecessary-looking dependencies",
    "user": {
      "login": "OrangeDog",
      "id": 675056,
      "node_id": "MDQ6VXNlcjY3NTA1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/675056?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OrangeDog",
      "html_url": "https://github.com/OrangeDog",
      "followers_url": "https://api.github.com/users/OrangeDog/followers",
      "following_url": "https://api.github.com/users/OrangeDog/following{/other_user}",
      "gists_url": "https://api.github.com/users/OrangeDog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OrangeDog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OrangeDog/subscriptions",
      "organizations_url": "https://api.github.com/users/OrangeDog/orgs",
      "repos_url": "https://api.github.com/users/OrangeDog/repos",
      "events_url": "https://api.github.com/users/OrangeDog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OrangeDog/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 27,
    "created_at": "2017-05-23T12:33:04Z",
    "updated_at": "2020-05-26T03:32:06Z",
    "closed_at": "2017-05-25T16:48:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "New in Release 22 are a bunch of Maven dependencies that look like they should be compile-only, but are now required at runtime.\r\n```\r\n[INFO] +- com.google.guava:guava:jar:22.0:compile\r\n[INFO] |  +- com.google.code.findbugs:jsr305:jar:1.3.9:compile\r\n[INFO] |  +- com.google.errorprone:error_prone_annotations:jar:2.0.18:compile\r\n[INFO] |  +- com.google.j2objc:j2objc-annotations:jar:1.1:compile\r\n[INFO] |  \\- org.codehaus.mojo:animal-sniffer-annotations:jar:1.14:compile\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2823",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2823/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2823/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2823/events",
    "html_url": "https://github.com/google/guava/issues/2823",
    "id": 230156012,
    "node_id": "MDU6SXNzdWUyMzAxNTYwMTI=",
    "number": 2823,
    "title": "Get weight for connected nodes",
    "user": {
      "login": "ankit2771991",
      "id": 3745629,
      "node_id": "MDQ6VXNlcjM3NDU2Mjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ankit2771991",
      "html_url": "https://github.com/ankit2771991",
      "followers_url": "https://api.github.com/users/ankit2771991/followers",
      "following_url": "https://api.github.com/users/ankit2771991/following{/other_user}",
      "gists_url": "https://api.github.com/users/ankit2771991/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ankit2771991/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ankit2771991/subscriptions",
      "organizations_url": "https://api.github.com/users/ankit2771991/orgs",
      "repos_url": "https://api.github.com/users/ankit2771991/repos",
      "events_url": "https://api.github.com/users/ankit2771991/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ankit2771991/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-20T14:13:57Z",
    "updated_at": "2017-05-22T12:30:09Z",
    "closed_at": "2017-05-22T12:30:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using MutableValueGraph and has  graph structure as \r\n1,1 -> 0\r\n1,2 -> 2\r\n2,2 -> 0\r\n2,3 -> 3\r\n3,3 -> 0\r\n\r\nnow if i get edge value for (1,2) it returns 2 but for (1,3) it returns null\r\nits their any way to make it return 5(i.e 2+3) or should i use any other data structure for this purpose",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2821",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2821/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2821/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2821/events",
    "html_url": "https://github.com/google/guava/issues/2821",
    "id": 230030880,
    "node_id": "MDU6SXNzdWUyMzAwMzA4ODA=",
    "number": 2821,
    "title": "Range created with Integers throws ClassCastException when asked if range.contains(Double)",
    "user": {
      "login": "jcalcote",
      "id": 49394,
      "node_id": "MDQ6VXNlcjQ5Mzk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/49394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcalcote",
      "html_url": "https://github.com/jcalcote",
      "followers_url": "https://api.github.com/users/jcalcote/followers",
      "following_url": "https://api.github.com/users/jcalcote/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcalcote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcalcote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcalcote/subscriptions",
      "organizations_url": "https://api.github.com/users/jcalcote/orgs",
      "repos_url": "https://api.github.com/users/jcalcote/repos",
      "events_url": "https://api.github.com/users/jcalcote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcalcote/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-05-19T16:51:06Z",
    "updated_at": "2017-07-06T17:25:24Z",
    "closed_at": "2017-07-06T17:25:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I realize you have to do something in this scenario, but there's no where I can find in the doc that mentions that users might be interested in watching for a ClassCastException from contains in this situation.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2820",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2820/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2820/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2820/events",
    "html_url": "https://github.com/google/guava/issues/2820",
    "id": 229305771,
    "node_id": "MDU6SXNzdWUyMjkzMDU3NzE=",
    "number": 2820,
    "title": "com.google.common.cache.Cache invalidate method",
    "user": {
      "login": "gdragomir",
      "id": 26459590,
      "node_id": "MDQ6VXNlcjI2NDU5NTkw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26459590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdragomir",
      "html_url": "https://github.com/gdragomir",
      "followers_url": "https://api.github.com/users/gdragomir/followers",
      "following_url": "https://api.github.com/users/gdragomir/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdragomir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdragomir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdragomir/subscriptions",
      "organizations_url": "https://api.github.com/users/gdragomir/orgs",
      "repos_url": "https://api.github.com/users/gdragomir/repos",
      "events_url": "https://api.github.com/users/gdragomir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdragomir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-17T10:24:28Z",
    "updated_at": "2017-05-17T15:39:06Z",
    "closed_at": "2017-05-17T15:39:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is not a issue, is just a question. Is there any reason why you are using \"Object var1\" parameter instead of \"K var1\" for invalidate method? I see for all the other methods the generics are used.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2819",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2819/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2819/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2819/events",
    "html_url": "https://github.com/google/guava/pull/2819",
    "id": 229222115,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTIwOTY0Mjc4",
    "number": 2819,
    "title": "merge google guava",
    "user": {
      "login": "cenxui",
      "id": 10194005,
      "node_id": "MDQ6VXNlcjEwMTk0MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10194005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cenxui",
      "html_url": "https://github.com/cenxui",
      "followers_url": "https://api.github.com/users/cenxui/followers",
      "following_url": "https://api.github.com/users/cenxui/following{/other_user}",
      "gists_url": "https://api.github.com/users/cenxui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cenxui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cenxui/subscriptions",
      "organizations_url": "https://api.github.com/users/cenxui/orgs",
      "repos_url": "https://api.github.com/users/cenxui/repos",
      "events_url": "https://api.github.com/users/cenxui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cenxui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-17T02:41:39Z",
    "updated_at": "2017-05-17T02:42:12Z",
    "closed_at": "2017-05-17T02:42:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2819",
      "html_url": "https://github.com/google/guava/pull/2819",
      "diff_url": "https://github.com/google/guava/pull/2819.diff",
      "patch_url": "https://github.com/google/guava/pull/2819.patch"
    },
    "body": "",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2818",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2818/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2818/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2818/events",
    "html_url": "https://github.com/google/guava/pull/2818",
    "id": 229220370,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTIwOTYzMDYw",
    "number": 2818,
    "title": "merge back",
    "user": {
      "login": "cenxui",
      "id": 10194005,
      "node_id": "MDQ6VXNlcjEwMTk0MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10194005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cenxui",
      "html_url": "https://github.com/cenxui",
      "followers_url": "https://api.github.com/users/cenxui/followers",
      "following_url": "https://api.github.com/users/cenxui/following{/other_user}",
      "gists_url": "https://api.github.com/users/cenxui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cenxui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cenxui/subscriptions",
      "organizations_url": "https://api.github.com/users/cenxui/orgs",
      "repos_url": "https://api.github.com/users/cenxui/repos",
      "events_url": "https://api.github.com/users/cenxui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cenxui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-17T02:27:37Z",
    "updated_at": "2017-05-17T02:28:24Z",
    "closed_at": "2017-05-17T02:28:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2818",
      "html_url": "https://github.com/google/guava/pull/2818",
      "diff_url": "https://github.com/google/guava/pull/2818.diff",
      "patch_url": "https://github.com/google/guava/pull/2818.patch"
    },
    "body": "",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2817",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2817/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2817/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2817/events",
    "html_url": "https://github.com/google/guava/issues/2817",
    "id": 228546580,
    "node_id": "MDU6SXNzdWUyMjg1NDY1ODA=",
    "number": 2817,
    "title": "Deprecate most of the methods in Unsigned*s classes after move to Java 8",
    "user": {
      "login": "ykunda",
      "id": 562963,
      "node_id": "MDQ6VXNlcjU2Mjk2Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/562963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ykunda",
      "html_url": "https://github.com/ykunda",
      "followers_url": "https://api.github.com/users/ykunda/followers",
      "following_url": "https://api.github.com/users/ykunda/following{/other_user}",
      "gists_url": "https://api.github.com/users/ykunda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ykunda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ykunda/subscriptions",
      "organizations_url": "https://api.github.com/users/ykunda/orgs",
      "repos_url": "https://api.github.com/users/ykunda/repos",
      "events_url": "https://api.github.com/users/ykunda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ykunda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143551708,
        "node_id": "MDU6TGFiZWwxNDM1NTE3MDg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=primitives",
        "name": "package=primitives",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 307275428,
        "node_id": "MDU6TGFiZWwzMDcyNzU0Mjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=java8",
        "name": "platform=java8",
        "color": "ff9560",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-14T14:50:29Z",
    "updated_at": "2017-07-28T15:27:40Z",
    "closed_at": "2017-07-28T15:27:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "UnsignedBytes, UnsignedInts and UnsignedLongs all have many methods that can be re-implemented using methods in the primitive wrapper classes new to Java 8, and/or deprecated and scheduled for removal.\r\nHere are the obvious mappings I found in UnsignedInts:\r\n\r\nGuava | Java 8\r\n------|------\r\nUnsignedInts.compare(int, int) | Integer.compareUnsigned(int, int)\r\nUnsignedInts.toLong(int) | toUnsignedLong(int)\r\nUnsignedInts.divide(int, int) | Integer.divideUnsigned(int, int)\r\nUnsignedInts.remainder(int, int) | Integer.remainderUnsigned(int, int)\r\nUnsignedInts.parseUnsignedInt(String) | Integer.parseUnsignedInt(String)\r\nUnsignedInts.parseUnsignedInt(String, int) | Integer.parseUnsignedInt(String, int)\r\nUnsignedInts.toString(int) | Integer.toUnsignedString(int)\r\nUnsignedInts.toString(int, int) | Integer.toUnsignedString(int, int)\r\n\r\nSimilar mapping can be found in UnsignedBytes and UnsignedLongs (and possibly in the yet-to-be-released UnsignedShorts)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2816",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2816/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2816/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2816/events",
    "html_url": "https://github.com/google/guava/issues/2816",
    "id": 228458457,
    "node_id": "MDU6SXNzdWUyMjg0NTg0NTc=",
    "number": 2816,
    "title": "ImmutableDoubleArray should document behaviour re NaN",
    "user": {
      "login": "pmg23",
      "id": 3007629,
      "node_id": "MDQ6VXNlcjMwMDc2Mjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3007629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmg23",
      "html_url": "https://github.com/pmg23",
      "followers_url": "https://api.github.com/users/pmg23/followers",
      "following_url": "https://api.github.com/users/pmg23/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmg23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmg23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmg23/subscriptions",
      "organizations_url": "https://api.github.com/users/pmg23/orgs",
      "repos_url": "https://api.github.com/users/pmg23/repos",
      "events_url": "https://api.github.com/users/pmg23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmg23/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143551708,
        "node_id": "MDU6TGFiZWwxNDM1NTE3MDg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=primitives",
        "name": "package=primitives",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-13T08:30:00Z",
    "updated_at": "2017-11-13T18:04:25Z",
    "closed_at": "2017-11-13T18:04:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In `ImmutableDoubleArray`, documentation ([as of 22.0-rc1](http://google.github.io/guava/releases/22.0-rc1/api/docs/com/google/common/primitives/ImmutableDoubleArray.html)) of the behaviour of `equals(Object)`, `indexOf(double)` and `lastIndexOf(double)` is ambiguous as to the treatment of NaNs.\r\n\r\nSpecific examples:\r\n```java\r\nImmutableDoubleArray a = ImmutableDoubleArray.of(Double.NaN);\r\na.equals(a) == ? (hopefully true)\r\na.equals(ImmutableDoubleArray.of(Double.NaN)) == ?\r\na.indexOf(Double.NaN) == ?\r\na.lastIndexOf(Double.NaN) == ?\r\n```\r\n\r\nI suppose behaviour with the infinities and `-0.0` is unambiguous, but perhaps this should be documented too.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2815",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2815/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2815/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2815/events",
    "html_url": "https://github.com/google/guava/issues/2815",
    "id": 227952648,
    "node_id": "MDU6SXNzdWUyMjc5NTI2NDg=",
    "number": 2815,
    "title": "Iterables.getOnlyElement could check for List implementation",
    "user": {
      "login": "thecoop",
      "id": 2678694,
      "node_id": "MDQ6VXNlcjI2Nzg2OTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2678694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thecoop",
      "html_url": "https://github.com/thecoop",
      "followers_url": "https://api.github.com/users/thecoop/followers",
      "following_url": "https://api.github.com/users/thecoop/following{/other_user}",
      "gists_url": "https://api.github.com/users/thecoop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thecoop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thecoop/subscriptions",
      "organizations_url": "https://api.github.com/users/thecoop/orgs",
      "repos_url": "https://api.github.com/users/thecoop/repos",
      "events_url": "https://api.github.com/users/thecoop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thecoop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-11T10:54:49Z",
    "updated_at": "2017-07-06T17:41:30Z",
    "closed_at": "2017-07-06T17:41:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, `Iterables.getOnlyElement` just uses the iterator. A small optimization is to check whether the iterable implements `List` and `RandomAccess`, and if so, use `size()` and `get(0)` to get the only element. This would save an iterator allocation.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2814",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2814/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2814/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2814/events",
    "html_url": "https://github.com/google/guava/issues/2814",
    "id": 227835292,
    "node_id": "MDU6SXNzdWUyMjc4MzUyOTI=",
    "number": 2814,
    "title": "Feature Request: Allow custom Equivalence instance for elements in common.graph.{Graph|ValueGraph|Network}",
    "user": {
      "login": "jbduncan",
      "id": 2482228,
      "node_id": "MDQ6VXNlcjI0ODIyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2482228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbduncan",
      "html_url": "https://github.com/jbduncan",
      "followers_url": "https://api.github.com/users/jbduncan/followers",
      "following_url": "https://api.github.com/users/jbduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/jbduncan/orgs",
      "repos_url": "https://api.github.com/users/jbduncan/repos",
      "events_url": "https://api.github.com/users/jbduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbduncan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-05-10T23:09:01Z",
    "updated_at": "2017-06-06T21:59:53Z",
    "closed_at": "2017-06-06T21:59:52Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In my dissertation software, I have an instance of `MutableGraph<Equivalence.Wrapper<CustomDataClass>>`, where the associated `Equivalence` is `Equivalence.identity()`.\r\n\r\nIt involves some difficult-to-read boilerplate during interaction, due to need to create and unwrap the `Wrapper` instances. The alternative is to make `CustomDataClass`'s `equals` and `hashCode` be identity-based rather than value-based, and whereas I could do that, it feels dirty as `CustomDataClass` is supposed to be value-based (as if it were an `@AutoValue` class, or a `case class` or `data class` from Scala or Kotlin).\r\n\r\nIf I could specify upfront when creating the graph that the equality and hash codes of nodes are  determined by `identity()`, then that would eliminate a good amount of boilerplate in my code.\r\n\r\nThis could probably be expanded to accept any `Equivalence` rather than just `identity()`. However, it's not clear to me if it could be also be expanded to `ValueGraph`s and `Network`s; I suspect it would be useful sometimes for edge values to have a different `Equivalence` to nodes, so that would make things more complicated.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2813",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2813/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2813/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2813/events",
    "html_url": "https://github.com/google/guava/issues/2813",
    "id": 227333038,
    "node_id": "MDU6SXNzdWUyMjczMzMwMzg=",
    "number": 2813,
    "title": "Improvement for 22.0-rc1 Release Notes",
    "user": {
      "login": "jbduncan",
      "id": 2482228,
      "node_id": "MDQ6VXNlcjI0ODIyMjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2482228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbduncan",
      "html_url": "https://github.com/jbduncan",
      "followers_url": "https://api.github.com/users/jbduncan/followers",
      "following_url": "https://api.github.com/users/jbduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/jbduncan/orgs",
      "repos_url": "https://api.github.com/users/jbduncan/repos",
      "events_url": "https://api.github.com/users/jbduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbduncan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-09T11:22:27Z",
    "updated_at": "2017-05-24T12:07:05Z",
    "closed_at": "2017-05-09T12:18:52Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I've noticed that it's not been mentioned that `BloomFilter` is now thread-safe.\r\n\r\n@cgdecker Should this be added?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2812",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2812/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2812/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2812/events",
    "html_url": "https://github.com/google/guava/issues/2812",
    "id": 227265407,
    "node_id": "MDU6SXNzdWUyMjcyNjU0MDc=",
    "number": 2812,
    "title": "Error: Dex cannot parse version 52 byte code",
    "user": {
      "login": "kevinashaw",
      "id": 7141343,
      "node_id": "MDQ6VXNlcjcxNDEzNDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7141343?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinashaw",
      "html_url": "https://github.com/kevinashaw",
      "followers_url": "https://api.github.com/users/kevinashaw/followers",
      "following_url": "https://api.github.com/users/kevinashaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinashaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinashaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinashaw/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinashaw/orgs",
      "repos_url": "https://api.github.com/users/kevinashaw/repos",
      "events_url": "https://api.github.com/users/kevinashaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinashaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-09T06:41:23Z",
    "updated_at": "2017-05-09T07:30:14Z",
    "closed_at": "2017-05-09T07:30:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is probably an old issue, but I can't find a reference to it.  I just added:\r\n```\r\n    compile('com.google.guava:guava:21.0')\r\n```\r\nto the dependencies section of my gradle file and the following error message appeared:\r\n```\r\nError:Error converting bytecode to dex:\r\nCause: Dex cannot parse version 52 byte code.\r\nThis is caused by library dependencies that have been compiled using Java 8 or above.\r\nIf you are using the 'java' gradle plugin in a library submodule add \r\ntargetCompatibility = '1.7'\r\nsourceCompatibility = '1.7'\r\nto that submodule's build.gradle file.\r\n```\r\nI've tried adding the targetCompatability and sourceCompatability tags to the gradle file, but still get the same error.  \r\nIs there a version of the .jar file that is compatible with Version 1.7 java?\r\nThanks.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2811",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2811/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2811/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2811/events",
    "html_url": "https://github.com/google/guava/issues/2811",
    "id": 227243728,
    "node_id": "MDU6SXNzdWUyMjcyNDM3Mjg=",
    "number": 2811,
    "title": "AbstractScheduledService stop slient",
    "user": {
      "login": "yangdong",
      "id": 954058,
      "node_id": "MDQ6VXNlcjk1NDA1OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/954058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yangdong",
      "html_url": "https://github.com/yangdong",
      "followers_url": "https://api.github.com/users/yangdong/followers",
      "following_url": "https://api.github.com/users/yangdong/following{/other_user}",
      "gists_url": "https://api.github.com/users/yangdong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yangdong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yangdong/subscriptions",
      "organizations_url": "https://api.github.com/users/yangdong/orgs",
      "repos_url": "https://api.github.com/users/yangdong/repos",
      "events_url": "https://api.github.com/users/yangdong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yangdong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "ronshapiro",
      "id": 792797,
      "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronshapiro",
      "html_url": "https://github.com/ronshapiro",
      "followers_url": "https://api.github.com/users/ronshapiro/followers",
      "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
      "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
      "repos_url": "https://api.github.com/users/ronshapiro/repos",
      "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ronshapiro",
        "id": 792797,
        "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ronshapiro",
        "html_url": "https://github.com/ronshapiro",
        "followers_url": "https://api.github.com/users/ronshapiro/followers",
        "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
        "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
        "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
        "repos_url": "https://api.github.com/users/ronshapiro/repos",
        "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-05-09T04:02:23Z",
    "updated_at": "2019-08-08T10:02:18Z",
    "closed_at": "2019-08-08T10:02:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using AbstractScheduledService to schedule my background job in a dropwizard project. Those jobs will run every 5 mins, but they will stop without any notification after a day or two. \r\n\r\n**One thing** I have done to investigate this issue is to add more log, and I found that the there was no more log recorded after a period of time, normally one or two days.  So it seems that AbstractScheduledService is stopped silently.\r\n\r\n**Another thing** I have done is to try to restart the stopped jobs (and I realised it is not restartable). However, I found that the state of all job were still RUNNING which is confusing me.\r\n\r\n**Now** I have to restart my entire application daily, and it works.\r\n\r\nSo, can you please help me on this issue?\r\n\r\nCheers,\r\nDong",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2809",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2809/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2809/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2809/events",
    "html_url": "https://github.com/google/guava/issues/2809",
    "id": 226936426,
    "node_id": "MDU6SXNzdWUyMjY5MzY0MjY=",
    "number": 2809,
    "title": "Collectors for immutable collections",
    "user": {
      "login": "trejkaz",
      "id": 43236,
      "node_id": "MDQ6VXNlcjQzMjM2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/43236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trejkaz",
      "html_url": "https://github.com/trejkaz",
      "followers_url": "https://api.github.com/users/trejkaz/followers",
      "following_url": "https://api.github.com/users/trejkaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/trejkaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trejkaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trejkaz/subscriptions",
      "organizations_url": "https://api.github.com/users/trejkaz/orgs",
      "repos_url": "https://api.github.com/users/trejkaz/repos",
      "events_url": "https://api.github.com/users/trejkaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trejkaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 307275428,
        "node_id": "MDU6TGFiZWwzMDcyNzU0Mjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=java8",
        "name": "platform=java8",
        "color": "ff9560",
        "default": false,
        "description": ""
      },
      {
        "id": 143534295,
        "node_id": "MDU6TGFiZWwxNDM1MzQyOTU=",
        "url": "https://api.github.com/repos/google/guava/labels/status=obsolete",
        "name": "status=obsolete",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-05-08T04:44:33Z",
    "updated_at": "2017-05-10T18:44:48Z",
    "closed_at": "2017-05-10T18:44:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Our own `MoreCollectors` class contains solely collectors which create Guava collections. Now that Guava does have collectors, having these in Guava would be useful.\r\n\r\n    public static <T> Collector<T, ?, List<T>> toImmutableList()\r\n\r\n    public static <T> Collector<T, ?, Set<T>> toImmutableSet()\r\n\r\n    public static <T extends Comparable<?>> Collector<T, ?, SortedSet<T>> toImmutableSortedSet()\r\n\r\n    public static <T, K> Collector<T, ?, Map<K, T>> toImmutableMap(\r\n        Function<? super T, ? extends K> keyMapper)\r\n\r\n    public static <T, K, U> Collector<T, ?, Map<K, U>> toImmutableMap(\r\n        Function<? super T, ? extends K> keyMapper, Function<? super T, ? extends U> valueMapper)\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2807",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2807/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2807/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2807/events",
    "html_url": "https://github.com/google/guava/pull/2807",
    "id": 225913170,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4NzEwODU3",
    "number": 2807,
    "title": "ImmediateEventBus that uses Dispatcher.IMMEDIATE",
    "user": {
      "login": "DavesMan",
      "id": 9961055,
      "node_id": "MDQ6VXNlcjk5NjEwNTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9961055?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavesMan",
      "html_url": "https://github.com/DavesMan",
      "followers_url": "https://api.github.com/users/DavesMan/followers",
      "following_url": "https://api.github.com/users/DavesMan/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavesMan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavesMan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavesMan/subscriptions",
      "organizations_url": "https://api.github.com/users/DavesMan/orgs",
      "repos_url": "https://api.github.com/users/DavesMan/repos",
      "events_url": "https://api.github.com/users/DavesMan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavesMan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-05-03T08:22:38Z",
    "updated_at": "2017-05-03T08:45:27Z",
    "closed_at": "2017-05-03T08:45:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2807",
      "html_url": "https://github.com/google/guava/pull/2807",
      "diff_url": "https://github.com/google/guava/pull/2807.diff",
      "patch_url": "https://github.com/google/guava/pull/2807.patch"
    },
    "body": "New child of EventBus that uses immediate Dispatcher, which isn't used in any impl as of now.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2806",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2806/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2806/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2806/events",
    "html_url": "https://github.com/google/guava/pull/2806",
    "id": 225570299,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4NDcyMjYz",
    "number": 2806,
    "title": "Issue #1259: Fix misleading documentation on behaviour of Ints.tryParse with null input",
    "user": {
      "login": "deepaks4077",
      "id": 5383050,
      "node_id": "MDQ6VXNlcjUzODMwNTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5383050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepaks4077",
      "html_url": "https://github.com/deepaks4077",
      "followers_url": "https://api.github.com/users/deepaks4077/followers",
      "following_url": "https://api.github.com/users/deepaks4077/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepaks4077/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepaks4077/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepaks4077/subscriptions",
      "organizations_url": "https://api.github.com/users/deepaks4077/orgs",
      "repos_url": "https://api.github.com/users/deepaks4077/repos",
      "events_url": "https://api.github.com/users/deepaks4077/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepaks4077/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 691862394,
        "node_id": "MDU6TGFiZWw2OTE4NjIzOTQ=",
        "url": "https://api.github.com/repos/google/guava/labels/P3",
        "name": "P3",
        "color": "c5c5c5",
        "default": false,
        "description": null
      },
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-05-02T01:47:27Z",
    "updated_at": "2019-10-02T20:54:53Z",
    "closed_at": "2019-10-02T20:54:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2806",
      "html_url": "https://github.com/google/guava/pull/2806",
      "diff_url": "https://github.com/google/guava/pull/2806.diff",
      "patch_url": "https://github.com/google/guava/pull/2806.patch"
    },
    "body": "Referencing #1259.\r\n\r\nThe documentation for Ints.trParse explicitly says that a NullPointerException is not thrown if the input is null. However, this is not true and the function does indeed throw a NPE.\r\n\r\nI have simply removed the misleading lines from the doc.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2805",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2805/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2805/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2805/events",
    "html_url": "https://github.com/google/guava/issues/2805",
    "id": 225406440,
    "node_id": "MDU6SXNzdWUyMjU0MDY0NDA=",
    "number": 2805,
    "title": "DirectoryNotEmptyException for desugar",
    "user": {
      "login": "rospe",
      "id": 16307483,
      "node_id": "MDQ6VXNlcjE2MzA3NDgz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16307483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rospe",
      "html_url": "https://github.com/rospe",
      "followers_url": "https://api.github.com/users/rospe/followers",
      "following_url": "https://api.github.com/users/rospe/following{/other_user}",
      "gists_url": "https://api.github.com/users/rospe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rospe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rospe/subscriptions",
      "organizations_url": "https://api.github.com/users/rospe/orgs",
      "repos_url": "https://api.github.com/users/rospe/repos",
      "events_url": "https://api.github.com/users/rospe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rospe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-05-01T08:51:37Z",
    "updated_at": "2017-05-01T09:52:32Z",
    "closed_at": "2017-05-01T09:52:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My project on Android Studio 2.4P7 fails to build with guava 21.0. Former version of Guava works.\r\n\r\nDetails of exception:\r\n\r\n:app:mergeProdDebugAssets UP-TO-DATE\r\n:app:transformClassesWithDesugarForProdDebug\r\nException in thread \"main\" java.lang.IllegalArgumentException: Interface com/google/common/base/Predicate defines non-abstract method test(Ljava/lang/Object;)Z, which is not supported\r\n\tat com.google.common.base.Preconditions.checkArgument(Preconditions.java:399)\r\n\tat com.google.devtools.build.android.desugar.Java7Compatibility.visitMethod(Java7Compatibility.java:82)\r\n\tat org.objectweb.asm.ClassVisitor.visitMethod(Unknown Source)\r\n\tat com.google.devtools.build.android.desugar.LambdaDesugaring.visitMethod(LambdaDesugaring.java:169)\r\n\tat org.objectweb.asm.ClassReader.b(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat org.objectweb.asm.ClassReader.accept(Unknown Source)\r\n\tat com.google.devtools.build.android.desugar.Desugar.main(Desugar.java:256)\r\n\r\n\r\n FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':app:transformClassesWithDesugarForProdDebug'.\r\n> java.nio.file.DirectoryNotEmptyException: C:\\Users\\Peter\\AppData\\Local\\Temp\\desugar_classpath3611760953130357256\r\n\r\n* Try:\r\nRun with --info or --debug option to get more log output.\r\n\r\n* Exception is:\r\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesWithDesugarForProdDebug'.\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:84)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:55)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:88)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:46)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.execute(DefaultTaskGraphExecuter.java:236)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.execute(DefaultTaskGraphExecuter.java:228)\r\n\tat org.gradle.internal.Transformers$4.transform(Transformers.java:169)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:106)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:61)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:228)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:215)\r\n\tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:77)\r\n\tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:58)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)\r\nCaused by: java.lang.RuntimeException: java.nio.file.DirectoryNotEmptyException: C:\\Users\\Peter\\AppData\\Local\\Temp\\desugar_classpath3611760953130357256\r\n\tat com.android.builder.profile.Recorder$Block.handleException(Recorder.java:55)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:104)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:186)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$IncrementalTaskAction.doExecute(DefaultTaskClassInfoStore.java:163)\r\n\tat org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.execute(DefaultTaskClassInfoStore.java:134)\r\n\tat org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.execute(DefaultTaskClassInfoStore.java:123)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:95)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:76)\r\n\t... 20 more\r\nCaused by: java.nio.file.DirectoryNotEmptyException: C:\\Users\\Peter\\AppData\\Local\\Temp\\desugar_classpath3611760953130357256\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.removeTmpClasspathJars(DesugarTransform.java:551)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.transform(DesugarTransform.java:241)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:195)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:191)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\t... 27 more\r\n\r\n\r\nBUILD FAILED",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2804",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2804/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2804/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2804/events",
    "html_url": "https://github.com/google/guava/issues/2804",
    "id": 225099428,
    "node_id": "MDU6SXNzdWUyMjUwOTk0Mjg=",
    "number": 2804,
    "title": "Nested Iterators.concat breaks",
    "user": {
      "login": "serddmitry",
      "id": 397594,
      "node_id": "MDQ6VXNlcjM5NzU5NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/397594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/serddmitry",
      "html_url": "https://github.com/serddmitry",
      "followers_url": "https://api.github.com/users/serddmitry/followers",
      "following_url": "https://api.github.com/users/serddmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/serddmitry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/serddmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/serddmitry/subscriptions",
      "organizations_url": "https://api.github.com/users/serddmitry/orgs",
      "repos_url": "https://api.github.com/users/serddmitry/repos",
      "events_url": "https://api.github.com/users/serddmitry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/serddmitry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 2,
    "created_at": "2017-04-28T14:34:08Z",
    "updated_at": "2017-05-05T16:53:29Z",
    "closed_at": "2017-05-04T19:44:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "        Iterator<String> iter1 = Arrays.asList(\"1\", \"5\").iterator();\r\n        Iterator<String> iter2 = Iterators.concat(Iterators.singletonIterator(\"2\"), iter1);\r\n\r\n        assertEquals(\"2\", iter2.next());\r\n        assertEquals(\"1\", iter2.next()); // iterator points to before \"5\" now\r\n\r\n        Iterator<String> iter3 = Iterators.concat(Iterators.singletonIterator(\"3\"), iter2); // prepend 3\r\n        assertEquals(\"3\", iter3.next());\r\n\r\n        assertEquals(\"5\", iter3.next()); // here we get NoSuchElementException",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2803",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2803/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2803/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2803/events",
    "html_url": "https://github.com/google/guava/issues/2803",
    "id": 225069437,
    "node_id": "MDU6SXNzdWUyMjUwNjk0Mzc=",
    "number": 2803,
    "title": "Different hashCode of murmur3_128 results between Java guava 19 and c++",
    "user": {
      "login": "juehuizh-zz",
      "id": 2183049,
      "node_id": "MDQ6VXNlcjIxODMwNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2183049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juehuizh-zz",
      "html_url": "https://github.com/juehuizh-zz",
      "followers_url": "https://api.github.com/users/juehuizh-zz/followers",
      "following_url": "https://api.github.com/users/juehuizh-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/juehuizh-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juehuizh-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juehuizh-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/juehuizh-zz/orgs",
      "repos_url": "https://api.github.com/users/juehuizh-zz/repos",
      "events_url": "https://api.github.com/users/juehuizh-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juehuizh-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-28T12:42:42Z",
    "updated_at": "2017-04-28T19:37:34Z",
    "closed_at": "2017-04-28T19:37:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is my Java test code\r\n```\r\nHashCode hashCode = Hashing.murmur3_128(1318007700).hashString(\"domain1topic1\", Charsets.UTF_8);\r\nSystem.out.println(hashCode.toString()); // print out \"6b478d2aa1b3a59004fe736b61c00340\"\r\n```\r\nBut c++ gives me the result \"90a5b3a12a8d476b4003c0616b73fe04\"",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2802",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2802/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2802/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2802/events",
    "html_url": "https://github.com/google/guava/pull/2802",
    "id": 224876912,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4MDA1NjI2",
    "number": 2802,
    "title": "DO NOT SUBMIT - testing travis",
    "user": {
      "login": "ronshapiro",
      "id": 792797,
      "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronshapiro",
      "html_url": "https://github.com/ronshapiro",
      "followers_url": "https://api.github.com/users/ronshapiro/followers",
      "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
      "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
      "repos_url": "https://api.github.com/users/ronshapiro/repos",
      "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-27T18:44:09Z",
    "updated_at": "2017-05-09T15:03:54Z",
    "closed_at": "2017-04-27T18:52:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2802",
      "html_url": "https://github.com/google/guava/pull/2802",
      "diff_url": "https://github.com/google/guava/pull/2802.diff",
      "patch_url": "https://github.com/google/guava/pull/2802.patch"
    },
    "body": "",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2801",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2801/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2801/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2801/events",
    "html_url": "https://github.com/google/guava/issues/2801",
    "id": 224693910,
    "node_id": "MDU6SXNzdWUyMjQ2OTM5MTA=",
    "number": 2801,
    "title": "Guava 20 & 21 causing java.lang.NoSuchMethodError in Payara Server",
    "user": {
      "login": "aureliens13",
      "id": 16634700,
      "node_id": "MDQ6VXNlcjE2NjM0NzAw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16634700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aureliens13",
      "html_url": "https://github.com/aureliens13",
      "followers_url": "https://api.github.com/users/aureliens13/followers",
      "following_url": "https://api.github.com/users/aureliens13/following{/other_user}",
      "gists_url": "https://api.github.com/users/aureliens13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aureliens13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aureliens13/subscriptions",
      "organizations_url": "https://api.github.com/users/aureliens13/orgs",
      "repos_url": "https://api.github.com/users/aureliens13/repos",
      "events_url": "https://api.github.com/users/aureliens13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aureliens13/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-27T07:24:29Z",
    "updated_at": "2017-04-27T17:17:13Z",
    "closed_at": "2017-04-27T17:17:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using guava 21 (same error with 20) under Payara Server 4.1.1.164 (Glassfish4 fork).\r\n\r\nThe error message is : java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkNotNull(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;\r\n\r\nNo problem with Guava 19.\r\n\r\nThanks in advance.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2800",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2800/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2800/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2800/events",
    "html_url": "https://github.com/google/guava/issues/2800",
    "id": 224654626,
    "node_id": "MDU6SXNzdWUyMjQ2NTQ2MjY=",
    "number": 2800,
    "title": "Is there a community chat room, such as gitter?",
    "user": {
      "login": "QubitPi",
      "id": 16126939,
      "node_id": "MDQ6VXNlcjE2MTI2OTM5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/16126939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/QubitPi",
      "html_url": "https://github.com/QubitPi",
      "followers_url": "https://api.github.com/users/QubitPi/followers",
      "following_url": "https://api.github.com/users/QubitPi/following{/other_user}",
      "gists_url": "https://api.github.com/users/QubitPi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/QubitPi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/QubitPi/subscriptions",
      "organizations_url": "https://api.github.com/users/QubitPi/orgs",
      "repos_url": "https://api.github.com/users/QubitPi/repos",
      "events_url": "https://api.github.com/users/QubitPi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/QubitPi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-27T02:55:24Z",
    "updated_at": "2017-05-01T15:28:36Z",
    "closed_at": "2017-05-01T15:28:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to find tasks to contribute to Guava. I though it would be nice if we have an instant messaging place so we get updated on how we can contribute.(what tasks are there for pick up, which is more urgent, which is easy/time-consuming to finish, etc)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2799",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2799/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2799/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2799/events",
    "html_url": "https://github.com/google/guava/pull/2799",
    "id": 224114028,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE3NDY3Mjcy",
    "number": 2799,
    "title": "Fix deadlock if compute function throw a RuntimeException",
    "user": {
      "login": "imario42",
      "id": 4653435,
      "node_id": "MDQ6VXNlcjQ2NTM0MzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4653435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imario42",
      "html_url": "https://github.com/imario42",
      "followers_url": "https://api.github.com/users/imario42/followers",
      "following_url": "https://api.github.com/users/imario42/following{/other_user}",
      "gists_url": "https://api.github.com/users/imario42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imario42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imario42/subscriptions",
      "organizations_url": "https://api.github.com/users/imario42/orgs",
      "repos_url": "https://api.github.com/users/imario42/repos",
      "events_url": "https://api.github.com/users/imario42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imario42/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      },
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2017-04-25T12:02:05Z",
    "updated_at": "2019-10-25T21:31:36Z",
    "closed_at": "2019-10-25T21:31:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2799",
      "html_url": "https://github.com/google/guava/pull/2799",
      "diff_url": "https://github.com/google/guava/pull/2799.diff",
      "patch_url": "https://github.com/google/guava/pull/2799.patch"
    },
    "body": "If the computeIfAbsent methods fails with a runtime exception, successive calls to computeIfAbsent lock due to a call to oldValue.waitForValue which never will receive a value then.\r\n\r\nA test case to reproduce this behavior - the second computeIfAbsent will never return and your app is frozen.\r\nThe pull request restores the previous state of the cache on RuntimeException and the test will finish correctly.\r\n\r\n`public class TestGuava extends TestCase\r\n{\r\n    private Cache<String, Boolean> cache = CacheBuilder.newBuilder()\r\n            .maximumSize(10000)\r\n            .expireAfterAccess(30, TimeUnit.SECONDS)\r\n            .build();\r\n    private Map<String, Boolean> cacheMap = cache.asMap();\r\n\r\n    private final static Boolean TEST_BOOLEAN = new Boolean(true);\r\n    public void testComputeException()\r\n    {\r\n        try\r\n        {\r\n            cacheMap.computeIfAbsent(\"a\", key ->\r\n            {\r\n                throw new IllegalArgumentException();\r\n            });\r\n\r\n            fail();\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            // expected\r\n        }\r\n\r\n        Boolean ret = cacheMap.computeIfAbsent(\"a\", key -> {\r\n            return TEST_BOOLEAN;\r\n        });\r\n\r\n        assertEquals(Boolean.TRUE, ret);\r\n        assertSame(TEST_BOOLEAN, ret);\r\n\r\n        ret = cacheMap.computeIfAbsent(\"a\", key -> {\r\n            return new Boolean(true); // should not create a new entry\r\n        });\r\n\r\n        assertEquals(Boolean.TRUE, ret);\r\n        assertSame(TEST_BOOLEAN, ret);\r\n    }\r\n}`",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2798",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2798/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2798/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2798/events",
    "html_url": "https://github.com/google/guava/pull/2798",
    "id": 223660196,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE3MTYxNzQ1",
    "number": 2798,
    "title": "Remove broken link in JavaDoc of CharMatcher",
    "user": {
      "login": "EricEdens",
      "id": 575626,
      "node_id": "MDQ6VXNlcjU3NTYyNg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/575626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricEdens",
      "html_url": "https://github.com/EricEdens",
      "followers_url": "https://api.github.com/users/EricEdens/followers",
      "following_url": "https://api.github.com/users/EricEdens/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricEdens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricEdens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricEdens/subscriptions",
      "organizations_url": "https://api.github.com/users/EricEdens/orgs",
      "repos_url": "https://api.github.com/users/EricEdens/repos",
      "events_url": "https://api.github.com/users/EricEdens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricEdens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-23T19:14:50Z",
    "updated_at": "2017-11-05T05:33:54Z",
    "closed_at": "2017-11-05T05:33:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2798",
      "html_url": "https://github.com/google/guava/pull/2798",
      "diff_url": "https://github.com/google/guava/pull/2798.diff",
      "patch_url": "https://github.com/google/guava/pull/2798.patch"
    },
    "body": "The linked Google Spreadsheet is no longer available (at least externally). I think it's fine to remove since the link to unicode.org details which codepoints are defined as whitespace.\r\n\r\nAlso, I double checked, and the list hasn't changed compared to what's used in CharMatchers.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2796",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2796/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2796/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2796/events",
    "html_url": "https://github.com/google/guava/issues/2796",
    "id": 223317065,
    "node_id": "MDU6SXNzdWUyMjMzMTcwNjU=",
    "number": 2796,
    "title": "LinkedListMultiMap.get(key).iterator() inconsistent behavior on key->value removal",
    "user": {
      "login": "alsemenov",
      "id": 4629015,
      "node_id": "MDQ6VXNlcjQ2MjkwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4629015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alsemenov",
      "html_url": "https://github.com/alsemenov",
      "followers_url": "https://api.github.com/users/alsemenov/followers",
      "following_url": "https://api.github.com/users/alsemenov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alsemenov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alsemenov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alsemenov/subscriptions",
      "organizations_url": "https://api.github.com/users/alsemenov/orgs",
      "repos_url": "https://api.github.com/users/alsemenov/repos",
      "events_url": "https://api.github.com/users/alsemenov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alsemenov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-21T08:40:18Z",
    "updated_at": "2017-04-21T12:58:08Z",
    "closed_at": "2017-04-21T12:58:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is the sample code that demonstrates the problem:\r\n```java\r\n\t@Test\r\n\tpublic void testRemoveDuringIterate1() {\r\n\t\tListMultimap<String, Integer> map = LinkedListMultimap.<String, Integer>create();\r\n\t\tmap.get(\"one\").add( 1);\r\n\t\tmap.get(\"one\").add( 2);\r\n\t\tmap.get(\"one\").add( 3);\r\n\t\tmap.get(\"one\").add( 4);\r\n\t\tmap.get(\"one\").add( 2);\r\n\r\n\t\tIterator<Integer> it = map.get(\"one\").iterator();\r\n\t\tassertTrue(it.hasNext());\r\n\t\tassertEquals(Integer.valueOf(1), it.next());\r\n\t\tmap.remove(\"one\", 4);\r\n\t\tList<Integer> remain = new ArrayList<>();\r\n\t\tit.forEachRemaining((e)->remain.add(e));\r\n\t\tassertEquals(Arrays.asList(2,3,2), remain);\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void testRemoveDuringIterate2() {\r\n\t\tListMultimap<String, Integer> map = LinkedListMultimap.<String, Integer>create();\r\n\t\tmap.get(\"one\").add( 1);\r\n\t\tmap.get(\"one\").add( 2);\r\n\t\tmap.get(\"one\").add( 3);\r\n\t\tmap.get(\"one\").add( 4);\r\n\t\tmap.get(\"one\").add( 5);\r\n\r\n\t\tIterator<Integer> it = map.get(\"one\").iterator();\r\n\t\tassertTrue(it.hasNext());\r\n\t\tassertEquals(Integer.valueOf(1), it.next());\r\n\t\tmap.remove(\"one\",2);\r\n\t\tList<Integer> remain = new ArrayList<>();\r\n\t\tit.forEachRemaining((e)->remain.add(e));\r\n\t\tassertEquals(Arrays.asList(3,4,5), remain);\r\n\t}\r\n```\r\n\r\nFirst test passes, but second fails on last check, `remain` is [2,3,4,5] instead of expected [3,4,5]\r\nI would expect that iterator either ignores all changes, or respect them all.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2795",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2795/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2795/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2795/events",
    "html_url": "https://github.com/google/guava/issues/2795",
    "id": 223187410,
    "node_id": "MDU6SXNzdWUyMjMxODc0MTA=",
    "number": 2795,
    "title": "MoreObjects.ToStringHelper allow user to specify Appendable",
    "user": {
      "login": "stampy88",
      "id": 333299,
      "node_id": "MDQ6VXNlcjMzMzI5OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/333299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stampy88",
      "html_url": "https://github.com/stampy88",
      "followers_url": "https://api.github.com/users/stampy88/followers",
      "following_url": "https://api.github.com/users/stampy88/following{/other_user}",
      "gists_url": "https://api.github.com/users/stampy88/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stampy88/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stampy88/subscriptions",
      "organizations_url": "https://api.github.com/users/stampy88/orgs",
      "repos_url": "https://api.github.com/users/stampy88/repos",
      "events_url": "https://api.github.com/users/stampy88/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stampy88/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-04-20T20:20:54Z",
    "updated_at": "2017-07-12T19:17:20Z",
    "closed_at": "2017-07-06T20:07:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently the `ToStringHelper` class constructs a StringBuilder with an initial capacity of 32 in the `toString` method\r\n```\r\n @Override\r\n    public String toString() {\r\n      // create a copy to keep it consistent in case value changes\r\n      boolean omitNullValuesSnapshot = omitNullValues;\r\n      String nextSeparator = \"\";\r\n      StringBuilder builder = new StringBuilder(32).append(className).append('{');\r\n```\r\nI think it would be useful to add an instance field to ToStringHelper that holds a Appendable instance that can be given to it, or defaulted to the ` new StringBuilder(32)`. Also additional factory methods would be added to`MoreObjects` to allow the user to specify said instance, e.g. `public static ToStringHelper toStringHelper(Appendable buffer, Object self) `.  This would allow reuse of StringBuilders as opposed to creating them every time.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2794",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2794/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2794/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2794/events",
    "html_url": "https://github.com/google/guava/issues/2794",
    "id": 222204345,
    "node_id": "MDU6SXNzdWUyMjIyMDQzNDU=",
    "number": 2794,
    "title": "Guava Collections : limit permutation size / or support a sizedSubsets iterable?",
    "user": {
      "login": "dthkao",
      "id": 11166458,
      "node_id": "MDQ6VXNlcjExMTY2NDU4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11166458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dthkao",
      "html_url": "https://github.com/dthkao",
      "followers_url": "https://api.github.com/users/dthkao/followers",
      "following_url": "https://api.github.com/users/dthkao/following{/other_user}",
      "gists_url": "https://api.github.com/users/dthkao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dthkao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dthkao/subscriptions",
      "organizations_url": "https://api.github.com/users/dthkao/orgs",
      "repos_url": "https://api.github.com/users/dthkao/repos",
      "events_url": "https://api.github.com/users/dthkao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dthkao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-17T19:11:01Z",
    "updated_at": "2017-05-10T17:52:39Z",
    "closed_at": "2017-05-10T17:47:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it possible to support the use case here:\r\nhttp://stackoverflow.com/questions/11120985/guava-collections-limit-permutation-size\r\n\r\nOr alternatively, provide a static function like Sets#powerSet that returns instead of \"the set of all possible subsets..\" the set of all possible subsets of a given size?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2793",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2793/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2793/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2793/events",
    "html_url": "https://github.com/google/guava/issues/2793",
    "id": 222175775,
    "node_id": "MDU6SXNzdWUyMjIxNzU3NzU=",
    "number": 2793,
    "title": "GWT: error: cannot access com.google.common.collect.AbstractIterator",
    "user": {
      "login": "morbilli",
      "id": 27696660,
      "node_id": "MDQ6VXNlcjI3Njk2NjYw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/27696660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morbilli",
      "html_url": "https://github.com/morbilli",
      "followers_url": "https://api.github.com/users/morbilli/followers",
      "following_url": "https://api.github.com/users/morbilli/following{/other_user}",
      "gists_url": "https://api.github.com/users/morbilli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morbilli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morbilli/subscriptions",
      "organizations_url": "https://api.github.com/users/morbilli/orgs",
      "repos_url": "https://api.github.com/users/morbilli/repos",
      "events_url": "https://api.github.com/users/morbilli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morbilli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-04-17T17:09:36Z",
    "updated_at": "2017-07-06T20:05:53Z",
    "closed_at": "2017-07-06T20:05:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello.\r\nTrying to compile my GWT (2.8.0) project by maven with dependency:\r\n```\r\n<dependency>\r\n  <groupId>com.google.guava</groupId>\r\n  <artifactId>guava-gwt</artifactId>\r\n  <version>21.0</version>\r\n</dependency>\r\n```\r\nand got the following:\r\n```\r\n[INFO] diagnostic C:\\Users\\user\\.m2\\repository\\com\\google\\guava\\guava-gwt\\21.0\\guava-gwt-21.0.jar(com/google/common/collect/Collections2.java):532: error: cannot access com.google.common.collect.AbstractIterator\r\n  private static final class OrderedPermutationIterator<E> extends AbstractIterator<List<E>> {\r\n                                                                   ^\r\n  bad source file: C:\\Users\\user\\.m2\\repository\\com\\google\\guava\\guava-gwt\\21.0\\guava-gwt-21.0.jar(com/google/common/collect/AbstractIterator.java)\r\n    file does not contain class com.google.common.collect.AbstractIterator\r\n    Please remove or make sure it appears in the correct subdirectory of the sourcepath.\r\n[ERROR] error on execute: error during compilation\r\n...\r\n[ERROR] Failed to execute goal org.bsc.maven:maven-processor-plugin:1.0.0:process (process) on project portal: Error executing: error during compilation -> [Help 1]\r\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.bsc.maven:maven-processor-plugin:1.0.0:process (process) on project portal: Error executing\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n        at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\r\n        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194)\r\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107)\r\n        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:993)\r\n        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:345)\r\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:191)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\nCaused by: org.apache.maven.plugin.MojoExecutionException: Error executing\r\n        at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.execute(AbstractAnnotationProcessorMojo.java:204)\r\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n        ... 20 more\r\nCaused by: java.lang.Exception: error during compilation\r\n        at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.executeWithExceptionsHandled(AbstractAnnotationProcessorMojo.java:353)\r\n        at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.execute(AbstractAnnotationProcessorMojo.java:197)\r\n        ... 22 more\r\n```\r\nTarget JDK is 1.8.\r\nI'll appreciate any help about that. Thanks.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2791",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2791/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2791/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2791/events",
    "html_url": "https://github.com/google/guava/pull/2791",
    "id": 221959617,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2MDMxNTEy",
    "number": 2791,
    "title": "Update InternetDomainName docs to reflect the most recent public suffix list.",
    "user": {
      "login": "dave-r12",
      "id": 1520761,
      "node_id": "MDQ6VXNlcjE1MjA3NjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1520761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dave-r12",
      "html_url": "https://github.com/dave-r12",
      "followers_url": "https://api.github.com/users/dave-r12/followers",
      "following_url": "https://api.github.com/users/dave-r12/following{/other_user}",
      "gists_url": "https://api.github.com/users/dave-r12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dave-r12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dave-r12/subscriptions",
      "organizations_url": "https://api.github.com/users/dave-r12/orgs",
      "repos_url": "https://api.github.com/users/dave-r12/repos",
      "events_url": "https://api.github.com/users/dave-r12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dave-r12/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-15T16:56:04Z",
    "updated_at": "2018-02-02T16:46:20Z",
    "closed_at": "2018-02-02T16:46:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2791",
      "html_url": "https://github.com/google/guava/pull/2791",
      "diff_url": "https://github.com/google/guava/pull/2791.diff",
      "patch_url": "https://github.com/google/guava/pull/2791.patch"
    },
    "body": "It turns out `google` is now a public suffix!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2789",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2789/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2789/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2789/events",
    "html_url": "https://github.com/google/guava/pull/2789",
    "id": 221515718,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE1NzIyNjg1",
    "number": 2789,
    "title": "Add Throwables.propagateIf",
    "user": {
      "login": "rotilho",
      "id": 950510,
      "node_id": "MDQ6VXNlcjk1MDUxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/950510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rotilho",
      "html_url": "https://github.com/rotilho",
      "followers_url": "https://api.github.com/users/rotilho/followers",
      "following_url": "https://api.github.com/users/rotilho/following{/other_user}",
      "gists_url": "https://api.github.com/users/rotilho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rotilho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rotilho/subscriptions",
      "organizations_url": "https://api.github.com/users/rotilho/orgs",
      "repos_url": "https://api.github.com/users/rotilho/repos",
      "events_url": "https://api.github.com/users/rotilho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rotilho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-04-13T10:01:34Z",
    "updated_at": "2017-10-03T12:13:53Z",
    "closed_at": "2017-10-03T12:13:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2789",
      "html_url": "https://github.com/google/guava/pull/2789",
      "diff_url": "https://github.com/google/guava/pull/2789.diff",
      "patch_url": "https://github.com/google/guava/pull/2789.patch"
    },
    "body": "In a normal application is common to throw an exception after eval an expression like\r\n\r\n```\r\nif (balance < amount) {\r\n   throw new InsufficientFundsException();\r\n}\r\n```\r\n\r\n```\r\nif (!optional.isPresent()) {\r\n  throw new NotFoundException();\r\n}\r\n```\r\n\r\nThis PR aims to get rid of those boilerplate code with propagateIf\r\n\r\n```\r\nThrowables.propagateIf(balance < amount, () -> new InsufficientFundsException());\r\nThrowables.propagateIf(!optional.isPresent(), () -> new NotFoundException());\r\n```\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2787",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2787/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2787/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2787/events",
    "html_url": "https://github.com/google/guava/issues/2787",
    "id": 221415104,
    "node_id": "MDU6SXNzdWUyMjE0MTUxMDQ=",
    "number": 2787,
    "title": "NewCollectionTypesExplained should reference MultimapBuilder",
    "user": {
      "login": "jrtom",
      "id": 11969894,
      "node_id": "MDQ6VXNlcjExOTY5ODk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrtom",
      "html_url": "https://github.com/jrtom",
      "followers_url": "https://api.github.com/users/jrtom/followers",
      "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
      "organizations_url": "https://api.github.com/users/jrtom/orgs",
      "repos_url": "https://api.github.com/users/jrtom/repos",
      "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrtom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-12T23:08:15Z",
    "updated_at": "2017-07-24T17:37:07Z",
    "closed_at": "2017-07-24T17:37:04Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap doesn't mention MultimapBuilder anywhere.  It does mention Multimaps.newMultimap() as a means of getting a custom collection type but we should mention MultimapBuilder as well (if not instead of) newMultimap().",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2786",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2786/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2786/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2786/events",
    "html_url": "https://github.com/google/guava/issues/2786",
    "id": 221387431,
    "node_id": "MDU6SXNzdWUyMjEzODc0MzE=",
    "number": 2786,
    "title": "google guava version 21.0 : error java.lang.NoSuchMethodError: com.google.common.base.Platform.systemNanoTime()",
    "user": {
      "login": "revatiy26",
      "id": 8117582,
      "node_id": "MDQ6VXNlcjgxMTc1ODI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8117582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/revatiy26",
      "html_url": "https://github.com/revatiy26",
      "followers_url": "https://api.github.com/users/revatiy26/followers",
      "following_url": "https://api.github.com/users/revatiy26/following{/other_user}",
      "gists_url": "https://api.github.com/users/revatiy26/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/revatiy26/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/revatiy26/subscriptions",
      "organizations_url": "https://api.github.com/users/revatiy26/orgs",
      "repos_url": "https://api.github.com/users/revatiy26/repos",
      "events_url": "https://api.github.com/users/revatiy26/events{/privacy}",
      "received_events_url": "https://api.github.com/users/revatiy26/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-12T20:53:26Z",
    "updated_at": "2018-03-30T20:55:22Z",
    "closed_at": "2017-07-06T20:19:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have included maven dependency in\r\n\r\n`<dependency>\r\n   <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>21.0</version>\r\n </dependency>`\r\n\r\nOther than this I have another google dependency \r\n\r\n`<dependency>\r\n   <groupId>com.google.code.gson</groupId>\r\n    <artifactId>gson</artifactId>\r\n    <version>2.8.0</version>\r\n </dependency>\r\n`\r\n\r\nNot sure why it is throwing this exception \r\n\r\n`google guava version 21.0 : error java.lang.NoSuchMethodError: com.google.common.base.Platform.systemNanoTime()`\r\n\r\non line Stopwatch.createStarted()\r\n\r\n\r\nPlease note this does not work with jetty server but works when executed as java class\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2785",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2785/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2785/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2785/events",
    "html_url": "https://github.com/google/guava/issues/2785",
    "id": 221326159,
    "node_id": "MDU6SXNzdWUyMjEzMjYxNTk=",
    "number": 2785,
    "title": "Lambda-compatible factory methods for more types?",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-04-12T16:54:24Z",
    "updated_at": "2020-05-26T14:22:23Z",
    "closed_at": "2017-04-12T16:54:27Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Or maybe not: I was pretty underwhelmed by what my search turned up:\r\n\r\n    $ grep -rcE '^  (protected|public) .*abstract' . | grep ':1$' | grep -v -e Immutable -e Forwarding -e ImmediateFuture -e Monitor -e ServiceManager -e Abstract -e CacheLoader -e Ordering -e TreeTraverser -e Sets -e LineBuffer -e ArrayBased -e CharMatcher | cut -d : -f 1\r\n    ./com/google/common/base/Ticker.java\r\n    ./com/google/common/util/concurrent/WrappingExecutorService.java\r\n    ./com/google/common/escape/CharEscaper.java\r\n    ./com/google/common/escape/UnicodeEscaper.java\r\n    ./com/google/common/escape/Escaper.java\r\n    ./com/google/common/io/ByteSource.java\r\n    ./com/google/common/io/ByteSink.java\r\n    ./com/google/common/io/CharSource.java\r\n    ./com/google/common/io/CharSink.java\r\n\r\nI looked at the first dozen `ByteSource` implementations turned up by a search of Google's code. Only 2 could have used a hypothetical `ByteSource.from(IoCallable<InputStream>)` (and they'd be giving up `toString()` implementations to do so). And only now that I'm writing this do I realize that we'd need an `IoCallable<InputStream>` :) So the I/O classes are not a good example.\r\n\r\n...OK, I just looked at about a dozen `Ticker` implementations. About 4 of them could have used a `Ticker.from(LongSupplier)`. But that projects out to only a few dozen users in all of Google's codebase. (And some of them are in Android, so they're not going to be able to use it.)\r\n\r\nI think I'm just going to close this. It's looking more like the results of a not very exciting 15-minutes research project than an actual call to action :)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2784",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2784/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2784/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2784/events",
    "html_url": "https://github.com/google/guava/issues/2784",
    "id": 221254064,
    "node_id": "MDU6SXNzdWUyMjEyNTQwNjQ=",
    "number": 2784,
    "title": "use PECS principle in TreeTraverser",
    "user": {
      "login": "HermanBovens",
      "id": 1921923,
      "node_id": "MDQ6VXNlcjE5MjE5MjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1921923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HermanBovens",
      "html_url": "https://github.com/HermanBovens",
      "followers_url": "https://api.github.com/users/HermanBovens/followers",
      "following_url": "https://api.github.com/users/HermanBovens/following{/other_user}",
      "gists_url": "https://api.github.com/users/HermanBovens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HermanBovens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HermanBovens/subscriptions",
      "organizations_url": "https://api.github.com/users/HermanBovens/orgs",
      "repos_url": "https://api.github.com/users/HermanBovens/repos",
      "events_url": "https://api.github.com/users/HermanBovens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HermanBovens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 311498444,
        "node_id": "MDU6TGFiZWwzMTE0OTg0NDQ=",
        "url": "https://api.github.com/repos/google/guava/labels/package=graph",
        "name": "package=graph",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "jrtom",
      "id": 11969894,
      "node_id": "MDQ6VXNlcjExOTY5ODk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrtom",
      "html_url": "https://github.com/jrtom",
      "followers_url": "https://api.github.com/users/jrtom/followers",
      "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
      "organizations_url": "https://api.github.com/users/jrtom/orgs",
      "repos_url": "https://api.github.com/users/jrtom/repos",
      "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrtom/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "jrtom",
        "id": 11969894,
        "node_id": "MDQ6VXNlcjExOTY5ODk0",
        "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrtom",
        "html_url": "https://github.com/jrtom",
        "followers_url": "https://api.github.com/users/jrtom/followers",
        "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
        "organizations_url": "https://api.github.com/users/jrtom/orgs",
        "repos_url": "https://api.github.com/users/jrtom/repos",
        "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrtom/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-04-12T12:59:50Z",
    "updated_at": "2017-10-16T10:19:14Z",
    "closed_at": "2017-10-08T22:28:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, `TreeTraverser<T>` has a method `Iterable<T> children(T root)`.  Since for traversal, the returned `Iterable` is only used as a producer, the return type can be `Iterable<? extends T>` (and the `using()` static function can take a `Function<T, ? extends Iterable<? extends T>>`).\r\n\r\nThe use case is a tree model where at some level only leaf nodes exist, so there is for example a `List<LeafNode>`  (where `LeafNode` extends T).  With the current implementation, this has to be copied into a new list in order to compile (or using some ugly unsafe double-casting).\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2783",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2783/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2783/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2783/events",
    "html_url": "https://github.com/google/guava/issues/2783",
    "id": 220933807,
    "node_id": "MDU6SXNzdWUyMjA5MzM4MDc=",
    "number": 2783,
    "title": "Refactoring StandardSystemProperty",
    "user": {
      "login": "ogregoire",
      "id": 666970,
      "node_id": "MDQ6VXNlcjY2Njk3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/666970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogregoire",
      "html_url": "https://github.com/ogregoire",
      "followers_url": "https://api.github.com/users/ogregoire/followers",
      "following_url": "https://api.github.com/users/ogregoire/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogregoire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogregoire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogregoire/subscriptions",
      "organizations_url": "https://api.github.com/users/ogregoire/orgs",
      "repos_url": "https://api.github.com/users/ogregoire/repos",
      "events_url": "https://api.github.com/users/ogregoire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogregoire/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-11T12:23:32Z",
    "updated_at": "2017-09-13T23:48:30Z",
    "closed_at": "2017-09-13T23:48:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Everytime I wanted to use `StandardSystemProperty`, it was because I was in a testing context, to render the the call to `System.getProperty(String)` abstract. The only reason I see any use to `StandardSystemProperty` is to avoid using hardcoded keys, plus a cherry-on-top access to the real value.\r\n\r\nHowever, when it comes to testing, I was actually stuck with the real value of `System.getProperty(String)` (because that's what `StandardSystemProperty.value()` provides) and had to use an external framework such as [System Rules](http://stefanbirkner.github.io/system-rules/) to change the real values. I couldn't simply \"mock\" them.\r\n\r\nSo I never use this enum because it's either too much or too few.\r\n\r\nI would suggest to replace `StandardSystemProperty` with an injectable, mockable layer, a bit like what exists with `Stopwatch` and `Ticker`.\r\n\r\nMy suggested approach is the following:\r\n\r\n    public class SystemProperties {\r\n      private static SystemProperties defaultInstance = new SystemProperties(System::getProperty);\r\n      public static SystemProperties getInstance() { return defaultInstance; }\r\n      public static SystemProperties getInstance(Function<String,String> mapper) { return new SystemProperties(mapper); }\r\n\r\n      private SystemProperties(Function<String,String> mapper) { this.mapper = mapper; }\r\n      public Optional<String> get(String key) { return Optional.ofNullable(mapper.apply(key)); }\r\n      private String getRequired(String key) {\r\n        String value = mapper.apply(key);\r\n        if (value == null) { throw new RuntimeException(\"Expected property to exist: \" + key); }\r\n        return value;\r\n      }\r\n\r\n      public String fileSeparator() { return getRequired(\"file.separator\"); }\r\n      public String javaClassPath() { return getRequired(\"java.class.path\"); }\r\n      ... // All of the properties accessed through appropriately named methods.\r\n    }\r\n\r\nI see several advantages to this:\r\n\r\n1. The system properties are not hardcoded by the final user (it's already the case with the current enum)\r\n2. The properties accessor becomes injectable (it's not the case with the current enum)\r\n3. The properties accessor isn't hard to mock: just use an existing function. (it's not the case with the current enum)\r\n4. Access to non-standard system properties is also normalized. (it's not the case with the current enum)\r\n5. The properties are accessed by a method to easily change under the hood (it's already the case with the current enum)\r\n\r\n--------\r\n\r\nThe current enum and this suggestion could even live together. If we even add an interface `SystemProperty`, so that custom properties could live with standard ones (and retrofit `StandardSystemProperty` to implement that interface), we could imagine replace the method `getProperty(String)` in the above suggestion with `getProperty(SystemProperty)`.\r\n\r\nThe usage could then become:\r\n\r\n    final SystemProperty CUSTOM_PROPERTY = SystemProperties.define(\"custom.property\");\r\n    @Inject SystemProperties systemProperties;\r\n    ...\r\n    systemProperties.get(CUSTOM_PROPERTY);\r\n\r\nBut this is already going to the next step.\r\n\r\n-----\r\n\r\nI could create this class and suggest a PR, but I'd like to have advice before starting it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2782",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2782/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2782/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2782/events",
    "html_url": "https://github.com/google/guava/issues/2782",
    "id": 220819331,
    "node_id": "MDU6SXNzdWUyMjA4MTkzMzE=",
    "number": 2782,
    "title": "Remove jsr305 dependency",
    "user": {
      "login": "orionll",
      "id": 761899,
      "node_id": "MDQ6VXNlcjc2MTg5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/761899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orionll",
      "html_url": "https://github.com/orionll",
      "followers_url": "https://api.github.com/users/orionll/followers",
      "following_url": "https://api.github.com/users/orionll/following{/other_user}",
      "gists_url": "https://api.github.com/users/orionll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orionll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orionll/subscriptions",
      "organizations_url": "https://api.github.com/users/orionll/orgs",
      "repos_url": "https://api.github.com/users/orionll/repos",
      "events_url": "https://api.github.com/users/orionll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orionll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-11T02:09:24Z",
    "updated_at": "2017-07-24T06:59:17Z",
    "closed_at": "2017-07-24T06:59:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I tried to compile guava with Java 9 and failed. The problem is the jsr305 dependency. It contains a package `javax.annotation` which conflicts with the same package in the `java.base` module (`javax.annotation.PostConstruct` annotation and others). Java 9 forbids split packages.\r\n\r\nJava 9 is not released yet, but we can already start thinking what to do. Is it possible to replace jsr305 annotations with similar annotations?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2781",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2781/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2781/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2781/events",
    "html_url": "https://github.com/google/guava/issues/2781",
    "id": 220583235,
    "node_id": "MDU6SXNzdWUyMjA1ODMyMzU=",
    "number": 2781,
    "title": "Streams.concat() fails with IllegalStateException",
    "user": {
      "login": "orionll",
      "id": 761899,
      "node_id": "MDQ6VXNlcjc2MTg5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/761899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orionll",
      "html_url": "https://github.com/orionll",
      "followers_url": "https://api.github.com/users/orionll/followers",
      "following_url": "https://api.github.com/users/orionll/following{/other_user}",
      "gists_url": "https://api.github.com/users/orionll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orionll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orionll/subscriptions",
      "organizations_url": "https://api.github.com/users/orionll/orgs",
      "repos_url": "https://api.github.com/users/orionll/repos",
      "events_url": "https://api.github.com/users/orionll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orionll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-10T09:16:06Z",
    "updated_at": "2017-04-10T18:48:12Z",
    "closed_at": "2017-04-10T18:36:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The following code snippet fails with IllegalStateException:\r\n```java\r\nStream<Integer> stream = Arrays.asList(1).stream();\r\nStream<Integer> stream2 = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8).stream();\r\nStreams.concat(stream, stream2).parallel().toArray();\r\n```\r\nStack trace:\r\n```\r\nException in thread \"main\" java.lang.IllegalStateException: Accept exceeded fixed size of 5\r\n\tat java.util.stream.Nodes$FixedNodeBuilder.accept(Nodes.java:1224)\r\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\tat com.google.common.collect.CollectSpliterators$1FlatMapSpliterator.lambda$forEachRemaining$1(CollectSpliterators.java:246)\r\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\tat com.google.common.collect.CollectSpliterators$1FlatMapSpliterator.forEachRemaining(CollectSpliterators.java:246)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.Nodes$CollectorTask.doLeaf(Nodes.java:2183)\r\n\tat java.util.stream.Nodes$CollectorTask.doLeaf(Nodes.java:2149)\r\n\tat java.util.stream.AbstractTask.compute(AbstractTask.java:316)\r\n\tat java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinTask.doInvoke(ForkJoinTask.java:401)\r\n\tat java.util.concurrent.ForkJoinTask.invoke(ForkJoinTask.java:734)\r\n\tat java.util.stream.Nodes.collect(Nodes.java:328)\r\n\tat java.util.stream.ReferencePipeline.evaluateToNode(ReferencePipeline.java:109)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:540)\r\n\tat java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)\r\n\tat java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)\r\n\tat java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:444)\r\n\tat org.dive.java.Example.main(Example.java:15)\r\n```\r\n\r\nEverything is fine if `Streams.concat` is changed to `Stream.concat`",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2780",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2780/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2780/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2780/events",
    "html_url": "https://github.com/google/guava/issues/2780",
    "id": 220580900,
    "node_id": "MDU6SXNzdWUyMjA1ODA5MDA=",
    "number": 2780,
    "title": "cache.cleanUp() doesn't work, and cache.invalidateAll() is ok.",
    "user": {
      "login": "pumadong",
      "id": 3498980,
      "node_id": "MDQ6VXNlcjM0OTg5ODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3498980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pumadong",
      "html_url": "https://github.com/pumadong",
      "followers_url": "https://api.github.com/users/pumadong/followers",
      "following_url": "https://api.github.com/users/pumadong/following{/other_user}",
      "gists_url": "https://api.github.com/users/pumadong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pumadong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pumadong/subscriptions",
      "organizations_url": "https://api.github.com/users/pumadong/orgs",
      "repos_url": "https://api.github.com/users/pumadong/repos",
      "events_url": "https://api.github.com/users/pumadong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pumadong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-10T09:06:38Z",
    "updated_at": "2017-05-01T19:36:50Z",
    "closed_at": "2017-05-01T19:36:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I met a case in using GuavaCache.\r\n\r\nI Create GuavaCache like this:\r\n\r\nCache<String, Object> cache = CacheBuilder.newBuilder()\r\n        .maximumSize(guavaCache.size())\r\n        .expireAfterWrite(600, TimeUnit.SECONDS)\r\n        .build();\r\n\r\nWhen use this cache, I have several cache nesting, a method with cache call another method with cache, then when I want to invalidate the cache manually.\r\ncache.cleanUp() doesn't work, and cache.invalidateAll() is ok.\r\n\r\nCan someone provide an explanation?\r\nThanks.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2779",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2779/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2779/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2779/events",
    "html_url": "https://github.com/google/guava/issues/2779",
    "id": 219573035,
    "node_id": "MDU6SXNzdWUyMTk1NzMwMzU=",
    "number": 2779,
    "title": "Absent#equals bugs after serializing / deserializing",
    "user": {
      "login": "cbismuth",
      "id": 21545602,
      "node_id": "MDQ6VXNlcjIxNTQ1NjAy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/21545602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbismuth",
      "html_url": "https://github.com/cbismuth",
      "followers_url": "https://api.github.com/users/cbismuth/followers",
      "following_url": "https://api.github.com/users/cbismuth/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbismuth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbismuth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbismuth/subscriptions",
      "organizations_url": "https://api.github.com/users/cbismuth/orgs",
      "repos_url": "https://api.github.com/users/cbismuth/repos",
      "events_url": "https://api.github.com/users/cbismuth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbismuth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-04-05T12:55:34Z",
    "updated_at": "2017-09-13T23:57:12Z",
    "closed_at": "2017-09-13T23:57:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After serializing / deserializing Absent instances won't be the same (e.g. in an Apache Spark context with Kryo serialization).\r\n\r\nTherefore the implementation below contains a bug. Why not just check if the two instances have the same class definition?\r\n\r\n```\r\n@Override public boolean equals(@Nullable Object object) {\r\n  return object == this;\r\n}\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2777",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2777/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2777/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2777/events",
    "html_url": "https://github.com/google/guava/issues/2777",
    "id": 219362364,
    "node_id": "MDU6SXNzdWUyMTkzNjIzNjQ=",
    "number": 2777,
    "title": "Stopwatch documentation warning to Android gives bad Ticker implementation",
    "user": {
      "login": "schallm",
      "id": 331167,
      "node_id": "MDQ6VXNlcjMzMTE2Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/331167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schallm",
      "html_url": "https://github.com/schallm",
      "followers_url": "https://api.github.com/users/schallm/followers",
      "following_url": "https://api.github.com/users/schallm/following{/other_user}",
      "gists_url": "https://api.github.com/users/schallm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schallm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schallm/subscriptions",
      "organizations_url": "https://api.github.com/users/schallm/orgs",
      "repos_url": "https://api.github.com/users/schallm/repos",
      "events_url": "https://api.github.com/users/schallm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schallm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-04T19:47:43Z",
    "updated_at": "2017-07-06T20:10:51Z",
    "closed_at": "2017-07-06T20:10:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Sample code [provided](https://google.github.io/guava/releases/snapshot/api/docs/com/google/common/base/Stopwatch.html) states to use the following code:\r\n```java\r\n Stopwatch.createStarted(\r\n      new Ticker() {\r\n        public long read() {\r\n          return android.os.SystemClock.elapsedRealtime();\r\n        }\r\n      });\r\n```\r\nHowever Ticker's \"read\" function is supposed to return nanoseconds.  Suggested change:\r\n```java\r\n Stopwatch.createStarted(\r\n      new Ticker() {\r\n        public long read() {\r\n          return android.os.SystemClock.elapsedRealtimeNanos();\r\n        }\r\n      });\r\n```\r\nWithout this change all my times where in μs when logging using:\r\n```\r\nlog.info(\"time: \" + stopwatch);\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2776",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2776/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2776/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2776/events",
    "html_url": "https://github.com/google/guava/pull/2776",
    "id": 219256400,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTE0MTUyNDYx",
    "number": 2776,
    "title": "Promote HostAndPort out of Beta.",
    "user": {
      "login": "swankjesse",
      "id": 133019,
      "node_id": "MDQ6VXNlcjEzMzAxOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/133019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swankjesse",
      "html_url": "https://github.com/swankjesse",
      "followers_url": "https://api.github.com/users/swankjesse/followers",
      "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
      "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
      "organizations_url": "https://api.github.com/users/swankjesse/orgs",
      "repos_url": "https://api.github.com/users/swankjesse/repos",
      "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swankjesse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-04-04T13:47:49Z",
    "updated_at": "2018-10-06T19:16:44Z",
    "closed_at": "2018-10-06T01:56:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2776",
      "html_url": "https://github.com/google/guava/pull/2776",
      "diff_url": "https://github.com/google/guava/pull/2776.diff",
      "patch_url": "https://github.com/google/guava/pull/2776.patch"
    },
    "body": "It's all grown up.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2775",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2775/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2775/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2775/events",
    "html_url": "https://github.com/google/guava/issues/2775",
    "id": 217787756,
    "node_id": "MDU6SXNzdWUyMTc3ODc3NTY=",
    "number": 2775,
    "title": "Evaluate if ForwardingCollection should forward spliterator()",
    "user": {
      "login": "ChristianCiach",
      "id": 19341644,
      "node_id": "MDQ6VXNlcjE5MzQxNjQ0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19341644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChristianCiach",
      "html_url": "https://github.com/ChristianCiach",
      "followers_url": "https://api.github.com/users/ChristianCiach/followers",
      "following_url": "https://api.github.com/users/ChristianCiach/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChristianCiach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChristianCiach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChristianCiach/subscriptions",
      "organizations_url": "https://api.github.com/users/ChristianCiach/orgs",
      "repos_url": "https://api.github.com/users/ChristianCiach/repos",
      "events_url": "https://api.github.com/users/ChristianCiach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChristianCiach/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-29T07:29:25Z",
    "updated_at": "2017-03-29T19:34:12Z",
    "closed_at": "2017-03-29T19:00:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am not entirely sure about this, but shouldn't ForwardingCollection also forward calls to spliterator()?\r\n\r\nThe JavaDoc has a default method method warning that states:\r\n\r\n> This class does not forward calls to default methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the ForwardingCollection. \r\n\r\nWhile this may be true, I think spliterator() could be an exception. Let's assume I want a ForwardingList to delegate its calls to an ArrayList. An ArrayList is easily splittable and overrides spliterator() to use its efficient implementation of Spliterator.\r\n\r\nIn this case, when using a ForwardingList and not overriding spliterator() manually, the default spliterator() implementation of the List interface will be used, which is a slow iterator-based implementation.\r\n\r\nWhat do you think? Am I overlooking something? Or is this by design?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2773",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2773/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2773/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2773/events",
    "html_url": "https://github.com/google/guava/issues/2773",
    "id": 217464308,
    "node_id": "MDU6SXNzdWUyMTc0NjQzMDg=",
    "number": 2773,
    "title": "Issue while using method reference in Optional.transform in version 21.0",
    "user": {
      "login": "HiteshGarg",
      "id": 8066310,
      "node_id": "MDQ6VXNlcjgwNjYzMTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8066310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HiteshGarg",
      "html_url": "https://github.com/HiteshGarg",
      "followers_url": "https://api.github.com/users/HiteshGarg/followers",
      "following_url": "https://api.github.com/users/HiteshGarg/following{/other_user}",
      "gists_url": "https://api.github.com/users/HiteshGarg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HiteshGarg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HiteshGarg/subscriptions",
      "organizations_url": "https://api.github.com/users/HiteshGarg/orgs",
      "repos_url": "https://api.github.com/users/HiteshGarg/repos",
      "events_url": "https://api.github.com/users/HiteshGarg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HiteshGarg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-03-28T06:53:54Z",
    "updated_at": "2017-04-09T11:59:10Z",
    "closed_at": "2017-03-28T16:02:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "From an API I have a com.google.common.base.Optional object i.e. of the guava library and I am running my project against Java 8 version. Now, if I use transform(Optional.transform) method and use Java 8 syntax of method reference to implement a Function in transform method, it throws the error shown below.\r\n\r\n### **Example code -**\r\n\r\n```\r\npackage guava.optional;\r\n\r\nimport com.google.common.base.Function;\r\nimport com.google.common.base.Optional;\r\n\r\npublic class MethodReferenceIssue {\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(getValue());\r\n    }\r\n    static Optional<Long> getValue(){\r\n        final Optional<Test> testOptional = Optional.of(new Test(2L));\r\n        return testOptional.transform(Test::getCode);\r\n    }\r\n}\r\n\r\nclass Test {\r\n    private long code;\r\n\r\n    public Test(long code) {\r\n        this.code = code;\r\n    }\r\n\r\n    public Long getCode() {\r\n        return code;\r\n    }\r\n}\r\n```\r\n```\r\nError\r\n\r\nerror: method transform in class Optional<T> cannot be applied to given types;\r\n[ERROR] ode\r\n[ERROR] reason: cannot infer type-variable(s) V\r\n[ERROR] (argument mismatch; invalid method reference\r\n[ERROR] method getCode in class Test cannot be applied to given types\r\n[ERROR] required: no arguments\r\n[ERROR] found: ? super Test \r\n[ERROR] reason: actual and formal argument lists differ in length)\r\n[ERROR] where V,T are type-variables:\r\n[ERROR] V extends Object declared in method <V>transform(Function<? super T,V>)\r\n[ERROR] T extends Object declared in class Optional\r\n```\r\n\r\nNow I have solved this for now by creating a variable of type Function and then pass it as a parameter then it works fine.\r\n\r\n### **Example code -**\r\n\r\n```\r\npackage guava.optional;\r\n\r\nimport com.google.common.base.Function;\r\nimport com.google.common.base.Optional;\r\n\r\n\r\npublic class MethodReferenceIssue {\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(getValue());\r\n    }\r\n    static Optional<Long> getValue(){\r\n        final Optional<Test> testOptional = Optional.of(new Test(2L));\r\n        Function<Test, Long> testOpt = Test::getCode;\r\n        return testOptional.transform(testOpt);\r\n    }\r\n}\r\n\r\nclass Test {\r\n    private long code;\r\n\r\n    public Test(long code) {\r\n        this.code = code;\r\n    }\r\n\r\n    public Long getCode() {\r\n        return code;\r\n    }\r\n}\r\n```\r\n\r\n**NOTE :-** this occurs with Guava version 21.0 and it works fine with guava version 20.0",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2772",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2772/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2772/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2772/events",
    "html_url": "https://github.com/google/guava/issues/2772",
    "id": 217013462,
    "node_id": "MDU6SXNzdWUyMTcwMTM0NjI=",
    "number": 2772,
    "title": "Unicode version for Utf8.isWellFormed",
    "user": {
      "login": "mmoehring",
      "id": 2975481,
      "node_id": "MDQ6VXNlcjI5NzU0ODE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2975481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmoehring",
      "html_url": "https://github.com/mmoehring",
      "followers_url": "https://api.github.com/users/mmoehring/followers",
      "following_url": "https://api.github.com/users/mmoehring/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmoehring/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmoehring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmoehring/subscriptions",
      "organizations_url": "https://api.github.com/users/mmoehring/orgs",
      "repos_url": "https://api.github.com/users/mmoehring/repos",
      "events_url": "https://api.github.com/users/mmoehring/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmoehring/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-25T23:33:00Z",
    "updated_at": "2018-08-30T08:16:41Z",
    "closed_at": "2018-08-30T08:16:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "According to the java docs 'isWellFormed' returns true for a well-formed byte sequence according to Unicode 6.0 but Java 8 Character is based on Unicode 6.2.0.\r\n\r\nAre there any cases for which the method would need an update to return the correct value or is this just a documentation problem?\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2771",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2771/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2771/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2771/events",
    "html_url": "https://github.com/google/guava/pull/2771",
    "id": 216958736,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyNTc4Mzcz",
    "number": 2771,
    "title": "Merge pull request #1 from google/master",
    "user": {
      "login": "monkeychen",
      "id": 726404,
      "node_id": "MDQ6VXNlcjcyNjQwNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/726404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/monkeychen",
      "html_url": "https://github.com/monkeychen",
      "followers_url": "https://api.github.com/users/monkeychen/followers",
      "following_url": "https://api.github.com/users/monkeychen/following{/other_user}",
      "gists_url": "https://api.github.com/users/monkeychen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/monkeychen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/monkeychen/subscriptions",
      "organizations_url": "https://api.github.com/users/monkeychen/orgs",
      "repos_url": "https://api.github.com/users/monkeychen/repos",
      "events_url": "https://api.github.com/users/monkeychen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/monkeychen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-03-25T08:06:10Z",
    "updated_at": "2018-08-27T15:35:44Z",
    "closed_at": "2018-08-27T15:35:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2771",
      "html_url": "https://github.com/google/guava/pull/2771",
      "diff_url": "https://github.com/google/guava/pull/2771.diff",
      "patch_url": "https://github.com/google/guava/pull/2771.patch"
    },
    "body": "合并官方版本",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2770",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2770/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2770/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2770/events",
    "html_url": "https://github.com/google/guava/issues/2770",
    "id": 216948436,
    "node_id": "MDU6SXNzdWUyMTY5NDg0MzY=",
    "number": 2770,
    "title": "confusing about Streams.mapWithIndex",
    "user": {
      "login": "hzzz823",
      "id": 22743137,
      "node_id": "MDQ6VXNlcjIyNzQzMTM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22743137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hzzz823",
      "html_url": "https://github.com/hzzz823",
      "followers_url": "https://api.github.com/users/hzzz823/followers",
      "following_url": "https://api.github.com/users/hzzz823/following{/other_user}",
      "gists_url": "https://api.github.com/users/hzzz823/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hzzz823/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hzzz823/subscriptions",
      "organizations_url": "https://api.github.com/users/hzzz823/orgs",
      "repos_url": "https://api.github.com/users/hzzz823/repos",
      "events_url": "https://api.github.com/users/hzzz823/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hzzz823/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 307275428,
        "node_id": "MDU6TGFiZWwzMDcyNzU0Mjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=java8",
        "name": "platform=java8",
        "color": "ff9560",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-25T04:18:40Z",
    "updated_at": "2017-03-25T06:10:27Z",
    "closed_at": "2017-03-25T06:03:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\nList<String> lst = ImmutableList.of(\"str\");\r\nStreams.mapWithIndex(lst.stream(), (c, i) -> {\r\n    System.out.println(c);\r\n    return c;\r\n}).collect(toImmutableList());\r\n```\r\nits print: str\r\nthat's ok\r\n\r\nbut\r\n```\r\nList<String> lst = ImmutableList.of(\"str\");\r\nStreams.mapWithIndex(lst.stream(), (c, i) -> {\r\n    System.out.println(c);\r\n    return c;\r\n});\r\n```\r\nthis print nothing.\r\n\r\n\r\nwhy that, is this a bug? or just i am a stupid😂",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2769",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2769/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2769/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2769/events",
    "html_url": "https://github.com/google/guava/issues/2769",
    "id": 216486397,
    "node_id": "MDU6SXNzdWUyMTY0ODYzOTc=",
    "number": 2769,
    "title": "API change suggestion, replace the runtime exception for Ints/Floats etc min/max with a compile time error",
    "user": {
      "login": "westonal",
      "id": 6041352,
      "node_id": "MDQ6VXNlcjYwNDEzNTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6041352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/westonal",
      "html_url": "https://github.com/westonal",
      "followers_url": "https://api.github.com/users/westonal/followers",
      "following_url": "https://api.github.com/users/westonal/following{/other_user}",
      "gists_url": "https://api.github.com/users/westonal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/westonal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/westonal/subscriptions",
      "organizations_url": "https://api.github.com/users/westonal/orgs",
      "repos_url": "https://api.github.com/users/westonal/repos",
      "events_url": "https://api.github.com/users/westonal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/westonal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-03-23T16:16:25Z",
    "updated_at": "2017-03-23T17:32:23Z",
    "closed_at": "2017-03-23T16:27:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I can currently write:\r\n\r\n```\r\n    int max = Ints.max();\r\n```\r\n\r\nAnd I will get an exception at runtime. There is a way to enforce at least one argument while keeping the existing version for back compat if they have supplied an actual array.\r\n\r\nThe existing one changes signature to `public static int min(int[] array)`. Then a new overload would be coded as so, so that `Ints.max()` yields a compile time error.\r\n\r\n    /**\r\n    * Returns the greatest value present in {@code head}, {@code tail}.\r\n    *\r\n    * @param head an int {@code int} value\r\n    * @param tail an array of {@code int} values\r\n    * @return the value present in {@code tail} or {@code head} that is greater than or equal to every other value\r\n    *     in the parameters\r\n    */\r\n    public static int max(int head, int... tail) {\r\n      int max = head;\r\n      for (int i = 1; i < tail.length; i++) {\r\n        if (tail[i] > max) {\r\n          max = tail[i];\r\n        }\r\n      }\r\n      return max;\r\n    }",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2768",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2768/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2768/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2768/events",
    "html_url": "https://github.com/google/guava/issues/2768",
    "id": 216311659,
    "node_id": "MDU6SXNzdWUyMTYzMTE2NTk=",
    "number": 2768,
    "title": "Why both method invoked？V20",
    "user": {
      "login": "chxiaowu",
      "id": 3086363,
      "node_id": "MDQ6VXNlcjMwODYzNjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3086363?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chxiaowu",
      "html_url": "https://github.com/chxiaowu",
      "followers_url": "https://api.github.com/users/chxiaowu/followers",
      "following_url": "https://api.github.com/users/chxiaowu/following{/other_user}",
      "gists_url": "https://api.github.com/users/chxiaowu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chxiaowu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chxiaowu/subscriptions",
      "organizations_url": "https://api.github.com/users/chxiaowu/orgs",
      "repos_url": "https://api.github.com/users/chxiaowu/repos",
      "events_url": "https://api.github.com/users/chxiaowu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chxiaowu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-23T06:00:30Z",
    "updated_at": "2017-03-23T16:31:43Z",
    "closed_at": "2017-03-23T16:31:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`public class Consumer {\r\n\r\n\t@Subscribe\r\n\tpublic void test1(List<Event1> list) {\r\n\t\tSystem.out.println(\"in event 1 list...\");\r\n\r\n\t}\r\n\r\n\t@Subscribe\r\n\tpublic void test2(List<Event2> list) {\r\n\t\tSystem.out.println(\"in event 2 list...\");\r\n\r\n\t}\r\n}`\r\n\r\n`public class MainTest {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tList<Event1> list = new ArrayList<>();\r\n\t\tlist.add(new Event1());\r\n\t\tEventBus eventBus = new EventBus();\r\n\r\n\t\tConsumer consumer = new Consumer();\r\n\t\teventBus.register(consumer);\r\n\t\teventBus.post(list);\r\n\t}\r\n\r\n}`",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2765",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2765/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2765/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2765/events",
    "html_url": "https://github.com/google/guava/issues/2765",
    "id": 215731946,
    "node_id": "MDU6SXNzdWUyMTU3MzE5NDY=",
    "number": 2765,
    "title": "Multimap clear()ing its internal collection upon remove()",
    "user": {
      "login": "JanecekPetr",
      "id": 1746404,
      "node_id": "MDQ6VXNlcjE3NDY0MDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1746404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JanecekPetr",
      "html_url": "https://github.com/JanecekPetr",
      "followers_url": "https://api.github.com/users/JanecekPetr/followers",
      "following_url": "https://api.github.com/users/JanecekPetr/following{/other_user}",
      "gists_url": "https://api.github.com/users/JanecekPetr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JanecekPetr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JanecekPetr/subscriptions",
      "organizations_url": "https://api.github.com/users/JanecekPetr/orgs",
      "repos_url": "https://api.github.com/users/JanecekPetr/repos",
      "events_url": "https://api.github.com/users/JanecekPetr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JanecekPetr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-21T13:02:02Z",
    "updated_at": "2017-03-21T14:28:55Z",
    "closed_at": "2017-03-21T14:28:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Our use-case\r\n```\r\nListMultimap<String, Foo> foosByName = ...;\r\n// First, Foos get added to the map. Then:\r\nList<Foo> foos = foosByName.get(\"foo\");\r\n// this actually hands the object over to another thread which eventually sends it over the wire\r\noutput.send(foo);\r\n...\r\n// later\r\nfoosByName.removeAll(\"foo\"); // internally calls clear() on the backing collection\r\n```\r\n\r\n...which throws this from another thread:\r\n```\r\njava.util.ConcurrentModificationException\r\n    at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:901)\r\n    at java.util.ArrayList$Itr.next(ArrayList.java:851)\r\n    at com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator.next(AbstractMapBasedMultimap.java:486)\r\n    ...\r\n```\r\n\r\n# Rationale\r\nWe're aggregating data into a `ListMultimap<String, Foo>`. Then, when the time is right and all data for a specific foo name has been collected, we want to send it out. This is done via handing the `List<Foo>` returned by `foosByName.get(\"foo\")` to another thread which then _iterates_ over the list's contents and does the actual sending. While this is in progress, we can sometimes observe a `ConcurrentModificationException` being thrown because the original aggregator thread has called `foosByName.removeAll(\"foo\")` in the meantime.\r\n\r\nThe original aggregator thread cannot instead call `List<Foo> foos = foosByName.remove(\"foo\")` and then send the list out because its actually being sent out multiple times, to multiple destinations, upon multiple signals. But we're sure we're not mutating it in any way anymore.\r\n\r\n# Expected behaviour\r\n`foosByName.removeAll(\"foo\")` should not call `clear()` on the underlying collection as it might have been handed out to someone else already. Is there any real-world reason for the call?\r\n\r\nP.S. Obviously we changed our design as it was iffy at best. Still, the unexpected `clear()` seems to be unnecessary?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2764",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2764/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2764/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2764/events",
    "html_url": "https://github.com/google/guava/issues/2764",
    "id": 215123334,
    "node_id": "MDU6SXNzdWUyMTUxMjMzMzQ=",
    "number": 2764,
    "title": "get bloomfilter approximate population ",
    "user": {
      "login": "peluo",
      "id": 26492612,
      "node_id": "MDQ6VXNlcjI2NDkyNjEy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/26492612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peluo",
      "html_url": "https://github.com/peluo",
      "followers_url": "https://api.github.com/users/peluo/followers",
      "following_url": "https://api.github.com/users/peluo/following{/other_user}",
      "gists_url": "https://api.github.com/users/peluo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peluo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peluo/subscriptions",
      "organizations_url": "https://api.github.com/users/peluo/orgs",
      "repos_url": "https://api.github.com/users/peluo/repos",
      "events_url": "https://api.github.com/users/peluo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peluo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-03-17T21:10:59Z",
    "updated_at": "2017-03-17T21:52:57Z",
    "closed_at": "2017-03-17T21:52:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to count the number of elements in bloomfilter.\r\nHere is the solution discussed in stackoverflow:\r\n\r\nhttp://cstheory.stackexchange.com/questions/10023/computing-the-approximate-population-of-a-bloom-filter\r\n\r\nand here is my implementation.    \r\npublic int getPopulationApprox() {\r\n        double proportionOf0s = 1 - bits.bitCount / (double)bitSize() ;\r\n        return Convert.toInteger(Math.log(proportionOf0s) / (numHashFunctions * Math.log(1 - 1.0 / bitSize())) ) ;\r\n    }\r\n\r\nCould any one take a look? Should I push a change?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2763",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2763/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2763/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2763/events",
    "html_url": "https://github.com/google/guava/issues/2763",
    "id": 214806791,
    "node_id": "MDU6SXNzdWUyMTQ4MDY3OTE=",
    "number": 2763,
    "title": "InternetDomainName.isPublicSuffix() fails for compute.amazonaws.com",
    "user": {
      "login": "p8a",
      "id": 2385530,
      "node_id": "MDQ6VXNlcjIzODU1MzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2385530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/p8a",
      "html_url": "https://github.com/p8a",
      "followers_url": "https://api.github.com/users/p8a/followers",
      "following_url": "https://api.github.com/users/p8a/following{/other_user}",
      "gists_url": "https://api.github.com/users/p8a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/p8a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p8a/subscriptions",
      "organizations_url": "https://api.github.com/users/p8a/orgs",
      "repos_url": "https://api.github.com/users/p8a/repos",
      "events_url": "https://api.github.com/users/p8a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/p8a/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-03-16T19:02:12Z",
    "updated_at": "2017-03-28T16:38:28Z",
    "closed_at": "2017-03-28T16:38:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\"compute.amazonaws.com\" is not recognized as a public suffix. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2762",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2762/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2762/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2762/events",
    "html_url": "https://github.com/google/guava/issues/2762",
    "id": 214318181,
    "node_id": "MDU6SXNzdWUyMTQzMTgxODE=",
    "number": 2762,
    "title": "ImmutableEnumMap should create defensive copy when deserializing",
    "user": {
      "login": "HaasJona",
      "id": 4310707,
      "node_id": "MDQ6VXNlcjQzMTA3MDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4310707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HaasJona",
      "html_url": "https://github.com/HaasJona",
      "followers_url": "https://api.github.com/users/HaasJona/followers",
      "following_url": "https://api.github.com/users/HaasJona/following{/other_user}",
      "gists_url": "https://api.github.com/users/HaasJona/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HaasJona/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HaasJona/subscriptions",
      "organizations_url": "https://api.github.com/users/HaasJona/orgs",
      "repos_url": "https://api.github.com/users/HaasJona/repos",
      "events_url": "https://api.github.com/users/HaasJona/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HaasJona/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-15T08:37:35Z",
    "updated_at": "2017-03-15T14:07:53Z",
    "closed_at": "2017-03-15T14:07:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, the `delegate` is put directly into the instance, violating Effective Java 2nd Edition, Item 76.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2761",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2761/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2761/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2761/events",
    "html_url": "https://github.com/google/guava/pull/2761",
    "id": 213917717,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTEwNTEyNzIx",
    "number": 2761,
    "title": "Making the BloomFilter thread-safe & lock-free",
    "user": {
      "login": "Valloric",
      "id": 919444,
      "node_id": "MDQ6VXNlcjkxOTQ0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/919444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Valloric",
      "html_url": "https://github.com/Valloric",
      "followers_url": "https://api.github.com/users/Valloric/followers",
      "following_url": "https://api.github.com/users/Valloric/following{/other_user}",
      "gists_url": "https://api.github.com/users/Valloric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Valloric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Valloric/subscriptions",
      "organizations_url": "https://api.github.com/users/Valloric/orgs",
      "repos_url": "https://api.github.com/users/Valloric/repos",
      "events_url": "https://api.github.com/users/Valloric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Valloric/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      },
      {
        "id": 143505309,
        "node_id": "MDU6TGFiZWwxNDM1MDUzMDk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=hash",
        "name": "package=hash",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 25,
    "created_at": "2017-03-13T22:36:48Z",
    "updated_at": "2017-05-04T14:10:13Z",
    "closed_at": "2017-05-04T14:10:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2761",
      "html_url": "https://github.com/google/guava/pull/2761",
      "diff_url": "https://github.com/google/guava/pull/2761.diff",
      "patch_url": "https://github.com/google/guava/pull/2761.patch"
    },
    "body": "Previously, the BloomFilter wasn't thread-safe and required external locking to ensure safety. Now, it's thread-safe and lock-free through the use of atomics and compare-and-swap.\r\n\r\nThis PR introduces **no** API changes beyond an extra `@ThreadSafe` annotation on the BloomFilter class. It should also be entirely backwards (and forwards) compatible with the serialization format because that too isn't being changed. \r\n\r\nPlease extend extra scrutiny to the `LockFreeBitArray.putAll()` method because it's not present in our internal fork of the BloomFilter class and has thus not gone through our integ tests or has seen prod (I wrote it for this PR).\r\n\r\nFixes #2748.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2760",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2760/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2760/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2760/events",
    "html_url": "https://github.com/google/guava/issues/2760",
    "id": 213254572,
    "node_id": "MDU6SXNzdWUyMTMyNTQ1NzI=",
    "number": 2760,
    "title": "https://github.com/google/guava/issues/2757 .... closed without resolution",
    "user": {
      "login": "bmekewar",
      "id": 16722513,
      "node_id": "MDQ6VXNlcjE2NzIyNTEz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16722513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmekewar",
      "html_url": "https://github.com/bmekewar",
      "followers_url": "https://api.github.com/users/bmekewar/followers",
      "following_url": "https://api.github.com/users/bmekewar/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmekewar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmekewar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmekewar/subscriptions",
      "organizations_url": "https://api.github.com/users/bmekewar/orgs",
      "repos_url": "https://api.github.com/users/bmekewar/repos",
      "events_url": "https://api.github.com/users/bmekewar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmekewar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-10T06:16:51Z",
    "updated_at": "2017-03-10T16:19:45Z",
    "closed_at": "2017-03-10T16:19:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi \r\nPlease reopen this issue.\r\nhttps://github.com/google/guava/issues/2757.\r\n\r\nGiven further updates on same. \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2759",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2759/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2759/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2759/events",
    "html_url": "https://github.com/google/guava/issues/2759",
    "id": 213150363,
    "node_id": "MDU6SXNzdWUyMTMxNTAzNjM=",
    "number": 2759,
    "title": "Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.XXX",
    "user": {
      "login": "piotrek1543",
      "id": 11292212,
      "node_id": "MDQ6VXNlcjExMjkyMjEy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11292212?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piotrek1543",
      "html_url": "https://github.com/piotrek1543",
      "followers_url": "https://api.github.com/users/piotrek1543/followers",
      "following_url": "https://api.github.com/users/piotrek1543/following{/other_user}",
      "gists_url": "https://api.github.com/users/piotrek1543/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piotrek1543/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piotrek1543/subscriptions",
      "organizations_url": "https://api.github.com/users/piotrek1543/orgs",
      "repos_url": "https://api.github.com/users/piotrek1543/repos",
      "events_url": "https://api.github.com/users/piotrek1543/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piotrek1543/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-03-09T20:09:28Z",
    "updated_at": "2017-05-24T19:16:27Z",
    "closed_at": "2017-03-28T16:41:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nafter adding `compile 'com.google.guava:guava:21.0'` to my Android project Gradle's dependencies, I got this build error:\r\n\r\n> \r\n> Information:Gradle tasks [:app:assembleBrandAFastBuildDebug]\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Function\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Consumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.BiConsumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Supplier\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.BiConsumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Supplier\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.BinaryOperator\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.BiConsumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.BinaryOperator\r\n>...\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Consumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Consumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.BiPredicate\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Consumer\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.Function\r\n> Error:Lambda coming from jar file need their interfaces on the classpath to be compiled, unknown interfaces are java.util.function.IntFunction\r\n> Error:Default method void addAll(java.lang.Iterable ranges) not supported in Android API level less than 24\r\n> Error:Default method boolean enclosesAll(java.lang.Iterable other) not supported in Android API level less than 24\r\n> Error:Default method void removeAll(java.lang.Iterable ranges) not supported in Android API level less than 24\r\n> Error:Default method boolean test(java.lang.Object input) not supported in Android API level less than 24\r\n> Error:Default method void forEachEntry(java.util.function.ObjIntConsumer action) not supported in Android API level less than 24\r\n> Error:Default method void forEach(java.util.function.Consumer action) not supported in Android API level less than 24\r\n> Error:Default method java.util.Spliterator spliterator() not supported in Android API level less than 24\r\n> Error:Static method void com_google_common_collect_Multiset_lambda$forEach$1(java.util.function.Consumer action, com.google.common.collect.Multiset$Entry entry) not supported in Android API level less than 24\r\n> Error:Static method void com_google_common_collect_Multiset_lambda$forEachEntry$0(java.util.function.ObjIntConsumer action, com.google.common.collect.Multiset$Entry entry) not supported in Android API level less than 24\r\n> Error:Default method void forEach(java.util.function.BiConsumer action) not supported in Android API level less than 24\r\n> Error:Static method void com_google_common_collect_Multimap_lambda$forEach$0(java.util.function.BiConsumer action, java.util.Map$Entry entry) not supported in Android API level less than 24\r\n> Error:Execution failed for task ':app:transformClassesWithPreJackPackagedLibrariesForBrandAFastBuildDebug'.\r\n> > com.android.build.api.transform.TransformException: com.android.builder.core.JackToolchain$ToolchainException: Jack compilation exception\r\n> Information:BUILD FAILED\r\n> Information:Total time: 1 mins 15.703 secs\r\n> Information:190 errors\r\n> Information:0 warnings\r\n> Information:See complete output in console\r\n\r\nI'm already using:\r\n\r\n```\r\nandroid {\r\n    compileSdkVersion 25\r\n    buildToolsVersion \"25.0.2\"\r\n...\r\n jackOptions {\r\n            enabled true\r\n        }\r\n\r\ncompileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n```\r\n\r\nGradle's project configuration snippet:\r\n         \r\n         classpath 'com.android.tools.build:gradle:2.5.0-alpha-preview-01'\r\n         classpath 'me.tatarka:gradle-retrolambda:3.2.5'\r\n\r\nIn `gradle-wrapper.properties` I have:\r\n\r\n         distributionUrl=https://services.gradle.org/distributions-snapshots/gradle-3.5-20170213202653+0000-all.zip\r\n\r\nCould you provide any resolution to this problem?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2757",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2757/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2757/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2757/events",
    "html_url": "https://github.com/google/guava/issues/2757",
    "id": 212795674,
    "node_id": "MDU6SXNzdWUyMTI3OTU2NzQ=",
    "number": 2757,
    "title": "java.lang.NoClassDefFoundError: Could not initialize class com.google.common.io.BaseEncoding",
    "user": {
      "login": "bmekewar",
      "id": 16722513,
      "node_id": "MDQ6VXNlcjE2NzIyNTEz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16722513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmekewar",
      "html_url": "https://github.com/bmekewar",
      "followers_url": "https://api.github.com/users/bmekewar/followers",
      "following_url": "https://api.github.com/users/bmekewar/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmekewar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmekewar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmekewar/subscriptions",
      "organizations_url": "https://api.github.com/users/bmekewar/orgs",
      "repos_url": "https://api.github.com/users/bmekewar/repos",
      "events_url": "https://api.github.com/users/bmekewar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmekewar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-08T17:05:55Z",
    "updated_at": "2017-03-09T10:13:10Z",
    "closed_at": "2017-03-08T17:57:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am getting following exception while referencing guava latest 21.0 jar.\r\njava.lang.NoClassDefFoundError: Could not initialize class com.google.common.io.BaseEncoding \r\n\r\n        return BaseEncoding.base64Url().omitPadding().encode(buffer); // or base32()\r\n\r\nrecently upgraded my local jar of guava from 15.0 to 21.0; but facing issues with encoding.\r\n\r\nPlease do the needful.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2756",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2756/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2756/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2756/events",
    "html_url": "https://github.com/google/guava/issues/2756",
    "id": 212713123,
    "node_id": "MDU6SXNzdWUyMTI3MTMxMjM=",
    "number": 2756,
    "title": "org.sonatype.oss-parents deprecated",
    "user": {
      "login": "hcoona",
      "id": 712433,
      "node_id": "MDQ6VXNlcjcxMjQzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/712433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcoona",
      "html_url": "https://github.com/hcoona",
      "followers_url": "https://api.github.com/users/hcoona/followers",
      "following_url": "https://api.github.com/users/hcoona/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcoona/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcoona/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcoona/subscriptions",
      "organizations_url": "https://api.github.com/users/hcoona/orgs",
      "repos_url": "https://api.github.com/users/hcoona/repos",
      "events_url": "https://api.github.com/users/hcoona/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcoona/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "ronshapiro",
      "id": 792797,
      "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronshapiro",
      "html_url": "https://github.com/ronshapiro",
      "followers_url": "https://api.github.com/users/ronshapiro/followers",
      "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
      "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
      "repos_url": "https://api.github.com/users/ronshapiro/repos",
      "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ronshapiro",
        "id": 792797,
        "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ronshapiro",
        "html_url": "https://github.com/ronshapiro",
        "followers_url": "https://api.github.com/users/ronshapiro/followers",
        "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
        "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
        "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
        "repos_url": "https://api.github.com/users/ronshapiro/repos",
        "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-03-08T11:50:03Z",
    "updated_at": "2019-04-16T21:59:15Z",
    "closed_at": "2019-04-16T21:59:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I notice the `org.sonatype.oss-parents` is deprecated. Is there any action planed for it?\r\n\r\n> Sonatype OSS Parent poms - oss-parents\r\n> DEPRECATION WARNING:\r\n> This project is no longer active or supported. We suggest to manage parent POM files for your own organization as needed. The POM files from this project no longer work with latest Maven and/or Java versions.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2755",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2755/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2755/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2755/events",
    "html_url": "https://github.com/google/guava/issues/2755",
    "id": 212358626,
    "node_id": "MDU6SXNzdWUyMTIzNTg2MjY=",
    "number": 2755,
    "title": "Feature Request: BloomFilter.approximateSize()",
    "user": {
      "login": "tcbeutler",
      "id": 3911368,
      "node_id": "MDQ6VXNlcjM5MTEzNjg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3911368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcbeutler",
      "html_url": "https://github.com/tcbeutler",
      "followers_url": "https://api.github.com/users/tcbeutler/followers",
      "following_url": "https://api.github.com/users/tcbeutler/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcbeutler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcbeutler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcbeutler/subscriptions",
      "organizations_url": "https://api.github.com/users/tcbeutler/orgs",
      "repos_url": "https://api.github.com/users/tcbeutler/repos",
      "events_url": "https://api.github.com/users/tcbeutler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcbeutler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505309,
        "node_id": "MDU6TGFiZWwxNDM1MDUzMDk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=hash",
        "name": "package=hash",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2017-03-07T08:08:07Z",
    "updated_at": "2017-03-27T23:13:09Z",
    "closed_at": "2017-03-27T19:55:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "From a ten year old paper, there's a [function that approximates the number of items in a bloom filter](https://en.wikipedia.org/wiki/Bloom_filter#Approximating_the_number_of_items_in_a_Bloom_filter). \r\n\r\nAll it needs is Bloomfilter's `bits.bitSize()`, `bits.bitCount()`, and `numHashFunctions`. I played around with it and found it to be remarkably accurate for large and small, empty and full filters alike. I was seeing accuracy between 2 and 5 9's based on the size of the filters.\r\n\r\nI'd be happy to implement it (properly) if needed. I think there is value in this addition, and since it's just a calculation with some internal values, I don't see any major downsides. I suppose there isn't a way to quantify the accuracy of the results, but between Javadoc and a descriptive method name (like in \"mightContain\") the approximate nature of the result could be clear.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2753",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2753/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2753/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2753/events",
    "html_url": "https://github.com/google/guava/issues/2753",
    "id": 211948172,
    "node_id": "MDU6SXNzdWUyMTE5NDgxNzI=",
    "number": 2753,
    "title": "Cannot use guava 21 with GWT",
    "user": {
      "login": "7circles",
      "id": 26199851,
      "node_id": "MDQ6VXNlcjI2MTk5ODUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/26199851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/7circles",
      "html_url": "https://github.com/7circles",
      "followers_url": "https://api.github.com/users/7circles/followers",
      "following_url": "https://api.github.com/users/7circles/following{/other_user}",
      "gists_url": "https://api.github.com/users/7circles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/7circles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/7circles/subscriptions",
      "organizations_url": "https://api.github.com/users/7circles/orgs",
      "repos_url": "https://api.github.com/users/7circles/repos",
      "events_url": "https://api.github.com/users/7circles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/7circles/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-05T12:01:20Z",
    "updated_at": "2017-03-28T16:38:33Z",
    "closed_at": "2017-03-28T16:38:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Upgrading Guava to v21 with GWT 2.8, i'm getting the following errors on ImmutableMap recent evolutions while compiling GWT project :\r\n\r\n```\r\n[ERROR] Errors in 'com/google/common/collect/super/com/google/common/collect/ImmutableMap.java'\r\n[INFO]       [ERROR] Line 91: Type mismatch: cannot convert from Collector<capture#35-of ? super T & capture#37-of ? super T,capture#39-of ?,Object> to Collector<T,?,ImmutableMap<K,V>>\r\n[INFO]    Tracing compile failure path for type 'com.google.common.collect.ImmutableMap'\r\n[INFO]       [ERROR] Errors in 'com/google/common/collect/super/com/google/common/collect/ImmutableMap.java'\r\n[INFO]          [ERROR] Line 91: Type mismatch: cannot convert from Collector<capture#35-of ? super T & capture#37-of ? super T,capture#39-of ?,Object> to Collector<T,?,ImmutableMap<K,V>>\r\n[INFO]       [ERROR] Errors in 'com/google/common/collect/ImmutableSetMultimap.java'\r\n[INFO]          [ERROR] com.google.common.collect.ImmutableMap cannot be resolved to a type\r\n[INFO]       [ERROR] Errors in 'com/google/common/collect/ImmutableMultimap.java'\r\n[INFO]          [ERROR] com.google.common.collect.ImmutableMap cannot be resolved to a type\r\n[INFO]       [ERROR] Errors in 'com/google/common/collect/AbstractMultimap.java'\r\n[INFO]          [ERROR] com.google.common.collect.Multimaps.Entries cannot be resolved to a type\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n```\r\n\r\nAny ideas to solve this ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2752",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2752/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2752/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2752/events",
    "html_url": "https://github.com/google/guava/issues/2752",
    "id": 211512011,
    "node_id": "MDU6SXNzdWUyMTE1MTIwMTE=",
    "number": 2752,
    "title": "Stopwatch: add getStartTime()",
    "user": {
      "login": "alb-i986",
      "id": 2717169,
      "node_id": "MDQ6VXNlcjI3MTcxNjk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2717169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alb-i986",
      "html_url": "https://github.com/alb-i986",
      "followers_url": "https://api.github.com/users/alb-i986/followers",
      "following_url": "https://api.github.com/users/alb-i986/following{/other_user}",
      "gists_url": "https://api.github.com/users/alb-i986/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alb-i986/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alb-i986/subscriptions",
      "organizations_url": "https://api.github.com/users/alb-i986/orgs",
      "repos_url": "https://api.github.com/users/alb-i986/repos",
      "events_url": "https://api.github.com/users/alb-i986/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alb-i986/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-03-02T20:46:05Z",
    "updated_at": "2017-03-06T06:08:05Z",
    "closed_at": "2017-03-06T06:08:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Stopwatch is missing a getter for the start time.\r\nIf you're happy with the API change, I can submit a PR.\r\n\r\nCheers",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2751",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2751/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2751/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2751/events",
    "html_url": "https://github.com/google/guava/issues/2751",
    "id": 210840335,
    "node_id": "MDU6SXNzdWUyMTA4NDAzMzU=",
    "number": 2751,
    "title": "TypeToken.isSubTypeOf() should consider declared bounds for type variables",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "fluentfuture",
      "id": 3457808,
      "node_id": "MDQ6VXNlcjM0NTc4MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluentfuture",
      "html_url": "https://github.com/fluentfuture",
      "followers_url": "https://api.github.com/users/fluentfuture/followers",
      "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
      "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
      "repos_url": "https://api.github.com/users/fluentfuture/repos",
      "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "fluentfuture",
        "id": 3457808,
        "node_id": "MDQ6VXNlcjM0NTc4MDg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluentfuture",
        "html_url": "https://github.com/fluentfuture",
        "followers_url": "https://api.github.com/users/fluentfuture/followers",
        "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
        "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
        "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
        "repos_url": "https://api.github.com/users/fluentfuture/repos",
        "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 3,
    "created_at": "2017-02-28T16:36:07Z",
    "updated_at": "2017-03-28T16:44:23Z",
    "closed_at": "2017-03-28T16:38:39Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "    private interface Foo<T extends Number> {}\r\n\r\n    public void testUnboundedAndBounded() {\r\n      TypeToken<Foo<?>> a = new TypeToken<Foo<?>>() {};\r\n      TypeToken<Foo<? extends Number>> b = new TypeToken<Foo<? extends Number>>() {};\r\n      assertTrue(a.isSubtypeOf(b)); // fails\r\n      assertTrue(b.isSubtypeOf(a));\r\n    }\r\n\r\nI think that we want that to pass. In our `isSubtypeOf()` docs, we claim to implement [a section of the JLS](http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.5.1). That section mentions \"capture conversion,\" which sounds like maybe something that `isSubtypeOf()` should be doing but isn't (or isn't doing completely)? But I'm in over my head.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2750",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2750/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2750/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2750/events",
    "html_url": "https://github.com/google/guava/issues/2750",
    "id": 210238917,
    "node_id": "MDU6SXNzdWUyMTAyMzg5MTc=",
    "number": 2750,
    "title": "ImmutableRange{Map,Set} collectors",
    "user": {
      "login": "Stephan202",
      "id": 513280,
      "node_id": "MDQ6VXNlcjUxMzI4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/513280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stephan202",
      "html_url": "https://github.com/Stephan202",
      "followers_url": "https://api.github.com/users/Stephan202/followers",
      "following_url": "https://api.github.com/users/Stephan202/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stephan202/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stephan202/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stephan202/subscriptions",
      "organizations_url": "https://api.github.com/users/Stephan202/orgs",
      "repos_url": "https://api.github.com/users/Stephan202/repos",
      "events_url": "https://api.github.com/users/Stephan202/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stephan202/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 307275428,
        "node_id": "MDU6TGFiZWwzMDcyNzU0Mjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=java8",
        "name": "platform=java8",
        "color": "ff9560",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/22",
      "html_url": "https://github.com/google/guava/milestone/22",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/22/labels",
      "id": 2815677,
      "node_id": "MDk6TWlsZXN0b25lMjgxNTY3Nw==",
      "number": 22,
      "title": "23.1",
      "description": "",
      "creator": {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 3,
      "state": "closed",
      "created_at": "2017-10-04T20:36:38Z",
      "updated_at": "2017-10-11T15:08:46Z",
      "due_on": null,
      "closed_at": "2017-10-09T16:56:37Z"
    },
    "comments": 4,
    "created_at": "2017-02-25T14:49:32Z",
    "updated_at": "2017-10-04T20:36:58Z",
    "closed_at": "2017-08-15T13:45:46Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Similar to #2667, could you please consider adding convenience `Collector` implementations for `ImmutableRangeMap` and `ImmutableRangeSet`?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2749",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2749/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2749/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2749/events",
    "html_url": "https://github.com/google/guava/issues/2749",
    "id": 210029431,
    "node_id": "MDU6SXNzdWUyMTAwMjk0MzE=",
    "number": 2749,
    "title": "AbstractTable.Values doesn't override spliterator() method",
    "user": {
      "login": "Xfel",
      "id": 2306230,
      "node_id": "MDQ6VXNlcjIzMDYyMzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2306230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xfel",
      "html_url": "https://github.com/Xfel",
      "followers_url": "https://api.github.com/users/Xfel/followers",
      "following_url": "https://api.github.com/users/Xfel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xfel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xfel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xfel/subscriptions",
      "organizations_url": "https://api.github.com/users/Xfel/orgs",
      "repos_url": "https://api.github.com/users/Xfel/repos",
      "events_url": "https://api.github.com/users/Xfel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xfel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 307275428,
        "node_id": "MDU6TGFiZWwzMDcyNzU0Mjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=java8",
        "name": "platform=java8",
        "color": "ff9560",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-24T11:50:25Z",
    "updated_at": "2017-03-17T22:37:44Z",
    "closed_at": "2017-03-17T22:37:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "While AbstractTable defines a method valuesSpliterator(), that method does not get called. Instead, the default implementation from AbstractCollection is used.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2748",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2748/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2748/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2748/events",
    "html_url": "https://github.com/google/guava/issues/2748",
    "id": 209850979,
    "node_id": "MDU6SXNzdWUyMDk4NTA5Nzk=",
    "number": 2748,
    "title": "Any interest in a PR making BloomFilter lock-free?",
    "user": {
      "login": "Valloric",
      "id": 919444,
      "node_id": "MDQ6VXNlcjkxOTQ0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/919444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Valloric",
      "html_url": "https://github.com/Valloric",
      "followers_url": "https://api.github.com/users/Valloric/followers",
      "following_url": "https://api.github.com/users/Valloric/following{/other_user}",
      "gists_url": "https://api.github.com/users/Valloric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Valloric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Valloric/subscriptions",
      "organizations_url": "https://api.github.com/users/Valloric/orgs",
      "repos_url": "https://api.github.com/users/Valloric/repos",
      "events_url": "https://api.github.com/users/Valloric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Valloric/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505309,
        "node_id": "MDU6TGFiZWwxNDM1MDUzMDk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=hash",
        "name": "package=hash",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-02-23T18:54:35Z",
    "updated_at": "2018-03-31T04:26:42Z",
    "closed_at": "2018-03-31T04:26:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As part of my work at LinkedIn, I've created a lock-free version of Guava's `BloomFilter` class (technically, a lock-free version of the `BitArray` class inside `BloomFilterStrategies`). **Would Guava upstream be interested in seeing a PR for this change?** The PR would naturally come with extra tests.\r\n\r\n### Short overview\r\n\r\nOur use-case involves a hundred+ threads doing a total of millions of read QPS on the bloom filter with ~20 QPS of writes. So I wrapped the bloom filter with a read-write lock. This wasn't performant enough though on the read side; after lots of benchmarks and analysis, the root cause was the write lock; even removing the read locks (which of course introduces race conditions, but was done for the sake of a benchmark) made no difference for read path perf... but removing both read _and_ write locks improved read perf greatly (but it would of course be terribly unsafe). My guess is that it was exclusive access to the cache line that stored the lock data that caused excessive CPU cache bus traffic, but I don't have data to back that up.\r\n\r\nReplacing the internals of the BitArray so that it used an `AtomicLongArray` for the `data` member along with compare-and-swap usage (plus an `AtomicLong` for the `bitcount` member) improved perf substantially.\r\n\r\nThis is all on a modern server CPU with 24 logical CPUs (12 cores) + HotSpot Java 8 JVM.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2747",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2747/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2747/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2747/events",
    "html_url": "https://github.com/google/guava/issues/2747",
    "id": 208851275,
    "node_id": "MDU6SXNzdWUyMDg4NTEyNzU=",
    "number": 2747,
    "title": "Guava / Spring GuavaCacheManager - CacheBuilder RemovalListener ClassCastException Possibility",
    "user": {
      "login": "erdarun",
      "id": 20439221,
      "node_id": "MDQ6VXNlcjIwNDM5MjIx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20439221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erdarun",
      "html_url": "https://github.com/erdarun",
      "followers_url": "https://api.github.com/users/erdarun/followers",
      "following_url": "https://api.github.com/users/erdarun/following{/other_user}",
      "gists_url": "https://api.github.com/users/erdarun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erdarun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erdarun/subscriptions",
      "organizations_url": "https://api.github.com/users/erdarun/orgs",
      "repos_url": "https://api.github.com/users/erdarun/repos",
      "events_url": "https://api.github.com/users/erdarun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erdarun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 691862394,
        "node_id": "MDU6TGFiZWw2OTE4NjIzOTQ=",
        "url": "https://api.github.com/repos/google/guava/labels/P3",
        "name": "P3",
        "color": "c5c5c5",
        "default": false,
        "description": null
      },
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-02-20T11:19:34Z",
    "updated_at": "2019-07-30T19:07:33Z",
    "closed_at": "2019-07-30T19:07:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have been using Guava version 20.0 and Spring GuavaCacheManager version 4.3.3.RELEASE for caching in my application.\r\n\r\nI'm initialising guava cache builder in spring configuration file and using cacheable annotation in cache file. \r\n\r\nAs per Guava CacheBuilder RemovalListener docs,\r\n\r\n> Warning: after invoking this method, do not continue to use this cache\r\n> builder reference; instead use the reference this method returns. At\r\n> runtime, these point to the same instance, but only the returned\r\n> reference has the correct generic type information so as to ensure\r\n> type safety. For best results, use the standard method-chaining idiom\r\n> illustrated in the class documentation above, configuring a builder\r\n> and building your cache in a single statement. Failure to heed this\r\n> advice can result in a ClassCastException being thrown by a cache\r\n> operation at some undefined point in the future.\r\n\r\n*I'm using the reference returned by removal listener in spring configuration file.*\r\n\r\n*But still is there any possibility of ClassCastException being thrown by a cache operation at some undefined point in the future for the below code?*\r\n\r\n***Since here CacheBuilder is created/initialised with removal listener in a single step then at later point Cache build will be lazily initialised at Spring GuavaCacheManager getCache***\r\n\r\nSpring configuration file\r\n\r\n    @configuration\r\n    @EnableCaching\r\n    public class SpringConfig {\r\n\t\r\n\t@Bean\r\n\tpublic CacheBuilder<Object, Object> cacheBuilder() {\r\n\t    CacheBuilder<Object, Object> cacheBuilder = CacheBuilder.from(\"maximumSize=1000,expireAfterAccess=1d\").removalListener(addRemovalListener());\r\n\t    \r\n\t    return cacheBuilder;\r\n\t}\r\n\t\r\n\t@Autowired\r\n\tprivate CacheBuilder<Object, Object> cacheBuilder;\r\n\t\r\n\t@Bean\r\n\tpublic CacheManager cacheManager() {\r\n\t    GuavaCacheManager cacheManager = new GuavaCacheManager();\r\n\t    cacheManager.setCacheBuilder(cacheBuilder);\r\n\t    cacheManager.setAllowNullValues(false);\r\n\t    return cacheManager;\r\n\t}\r\n    \r\n    private RemovalListener<Object, Object> addRemovalListener() {\r\n\t\treturn new RemovalListener<Object, Object>() {\r\n\t\t\tpublic void onRemoval(RemovalNotification<Object, Object> removal) {\r\n\r\n\t\t\t\tif(RemovalCause.EXPLICIT != removal.getCause()) {\r\n\r\n    \t\t\t\ttry {\r\n    \t\t\t\t\tString key = (String) removal.getKey();\r\n    \t\t\t\t\tString val = (String) removal.getValue();\r\n    \t\t\t\t\t......\r\n                        ......\r\n\t\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\t\tlogger.error(\"Cache RemovalListener Exception [{}]\", e.getMessage(), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n    }\r\n\r\n\r\nSpring Cache File\r\n\r\n\r\n    @Service\r\n    public class SpringCache {\r\n\r\n\t@Autowired\r\n\tprivate CacheManager cacheManager;\r\n\r\n    @Cacheable(cacheManager=\"cacheManager\", key=\"#p0\", cacheNames=\"cacheKeysMap\", sync=true)\r\n\tpublic String getKeyFromCache(String key) {\r\n        ......\r\n        ......\r\n        return value;\r\n    }\r\n\r\n    @CacheEvict(cacheManager=\"cacheManager\", key=\"#p0\", cacheNames=\"cacheKeysMap\")\r\n\tpublic void deleteFromCache(String key) {\r\n\t\t\r\n\t}\r\n\r\n    }",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2746",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2746/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2746/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2746/events",
    "html_url": "https://github.com/google/guava/issues/2746",
    "id": 208758227,
    "node_id": "MDU6SXNzdWUyMDg3NTgyMjc=",
    "number": 2746,
    "title": "Feature request: method to check whether (Loading)Cache is currently loading a given key",
    "user": {
      "login": "rrobby86",
      "id": 22968875,
      "node_id": "MDQ6VXNlcjIyOTY4ODc1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22968875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rrobby86",
      "html_url": "https://github.com/rrobby86",
      "followers_url": "https://api.github.com/users/rrobby86/followers",
      "following_url": "https://api.github.com/users/rrobby86/following{/other_user}",
      "gists_url": "https://api.github.com/users/rrobby86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rrobby86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rrobby86/subscriptions",
      "organizations_url": "https://api.github.com/users/rrobby86/orgs",
      "repos_url": "https://api.github.com/users/rrobby86/repos",
      "events_url": "https://api.github.com/users/rrobby86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rrobby86/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-02-20T00:03:35Z",
    "updated_at": "2017-10-04T14:01:18Z",
    "closed_at": "2017-10-04T14:01:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to propose the addition to the `LoadingCache` API (or more generally to `Cache`, if appropriate) of a method like `boolean isLoading(K)`, which would allow one thread to check whether the value for the given key is currently being loaded by another thread, returning immediately in any case.\r\n\r\nThe use case I encountered for this hypothetical feature is the usage of a `LoadingCache` within tasks in a Java `ForkJoinPool`. In order to maintain a target parallelism level, the pool attempts to spawn or resume threads when other threads block, as long as such block is *managed* by the pool by means of a `ManagedBlocker`. In order to implement this, seems to be needed some way to check whether the current thread will be blocked *before* actually blocking it. (I do not have much experience with `ForkJoinPool`s, I hope what I wrote here is correct)\r\n\r\nAt the moment I resolved this issue by tracking keys being loaded in an external data structure. However, I'm trying to propose such feature as I think it would be relatively unobtrusive (but I may be wrong about this, I don't know about the internals of `LoadingCache`) and it would provide a more efficient solution to the use case above; other cases could also exist, although I can't figure them out at the moment.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2745",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2745/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2745/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2745/events",
    "html_url": "https://github.com/google/guava/issues/2745",
    "id": 208743378,
    "node_id": "MDU6SXNzdWUyMDg3NDMzNzg=",
    "number": 2745,
    "title": "Provide overloaded MoreCollectors.toOptional which allows passing exception",
    "user": {
      "login": "Diagoras",
      "id": 1823098,
      "node_id": "MDQ6VXNlcjE4MjMwOTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1823098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diagoras",
      "html_url": "https://github.com/Diagoras",
      "followers_url": "https://api.github.com/users/Diagoras/followers",
      "following_url": "https://api.github.com/users/Diagoras/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diagoras/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diagoras/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diagoras/subscriptions",
      "organizations_url": "https://api.github.com/users/Diagoras/orgs",
      "repos_url": "https://api.github.com/users/Diagoras/repos",
      "events_url": "https://api.github.com/users/Diagoras/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diagoras/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1420524006,
        "node_id": "MDU6TGFiZWwxNDIwNTI0MDA2",
        "url": "https://api.github.com/repos/google/guava/labels/P4",
        "name": "P4",
        "color": "8581e8",
        "default": false,
        "description": ""
      },
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-19T20:21:13Z",
    "updated_at": "2019-07-30T19:11:57Z",
    "closed_at": "2019-07-30T19:11:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey, thanks for this great library. MoreCollectors.toOptional is great, since I've found myself craving a Collector that makes it easy to assert that only one (or zero) elements exists in a Stream. Thing is, most of the time I also want to throw a custom exception (or a regular one with a custom message) describing the violation when this condition is failed, as opposed to a more general IllegalArgumentException.\r\n\r\nSo, how do you feel about an overload for MoreCollectors.toOptional - one that takes a supplier for an exception to throw when there is more than one element in a Stream?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2744",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2744/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2744/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2744/events",
    "html_url": "https://github.com/google/guava/issues/2744",
    "id": 208337196,
    "node_id": "MDU6SXNzdWUyMDgzMzcxOTY=",
    "number": 2744,
    "title": "Is Ordering deprecated or not?",
    "user": {
      "login": "jbosboom",
      "id": 7757340,
      "node_id": "MDQ6VXNlcjc3NTczNDA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7757340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbosboom",
      "html_url": "https://github.com/jbosboom",
      "followers_url": "https://api.github.com/users/jbosboom/followers",
      "following_url": "https://api.github.com/users/jbosboom/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbosboom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbosboom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbosboom/subscriptions",
      "organizations_url": "https://api.github.com/users/jbosboom/orgs",
      "repos_url": "https://api.github.com/users/jbosboom/repos",
      "events_url": "https://api.github.com/users/jbosboom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbosboom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-02-17T05:02:05Z",
    "updated_at": "2017-09-14T20:57:59Z",
    "closed_at": "2017-09-14T18:30:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The Ordering Javadoc says:\r\n\r\n> If you are using Java 8, this class is now obsolete (pending a few August 2016 updates). [...] However, at this time we have no plan to deprecate this class.\r\n\r\nBut the Comparators Javadoc says:\r\n\r\n> In light of the significant enhancements to Comparator in Java 8, the overwhelming majority of usages of Ordering can be written using only built-in JDK APIs.  Because of this, and because it's awkward to have to convert comparators into Ordering instances, Ordering and its methods are planned for deletion.\r\n\r\nSo, is Ordering deprecated or not?  How urgent is migrating from Ordering to Comparator?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2743",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2743/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2743/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2743/events",
    "html_url": "https://github.com/google/guava/issues/2743",
    "id": 208298295,
    "node_id": "MDU6SXNzdWUyMDgyOTgyOTU=",
    "number": 2743,
    "title": "LocalManualCache deadlock in guava 21",
    "user": {
      "login": "epavlov1",
      "id": 25833224,
      "node_id": "MDQ6VXNlcjI1ODMzMjI0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25833224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/epavlov1",
      "html_url": "https://github.com/epavlov1",
      "followers_url": "https://api.github.com/users/epavlov1/followers",
      "following_url": "https://api.github.com/users/epavlov1/following{/other_user}",
      "gists_url": "https://api.github.com/users/epavlov1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/epavlov1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/epavlov1/subscriptions",
      "organizations_url": "https://api.github.com/users/epavlov1/orgs",
      "repos_url": "https://api.github.com/users/epavlov1/repos",
      "events_url": "https://api.github.com/users/epavlov1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/epavlov1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 9,
    "created_at": "2017-02-17T00:53:01Z",
    "updated_at": "2017-07-06T17:21:38Z",
    "closed_at": "2017-03-28T16:39:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Unit test testCache works with guava 20, locks up in 21 (LocalCache.java,line 2392):\r\n\r\n    @Test\r\n    public void testCache()\r\n    {\r\n        String key = \"test\";\r\n        int count  = 1000;\r\n        Cache<String, String> cache = CacheBuilder.newBuilder().expireAfterAccess(500000, TimeUnit.MILLISECONDS).maximumSize(1000).build();\r\n\r\n        IntStream.range(0, count).parallel().forEach((n) -> {\r\n            String val = cache.asMap().computeIfAbsent(key, k->\"testv\" + n);\r\n            logger.info(\"Val=\" + val);\r\n\r\n        });\r\n    }\r\n    @Test\r\n    public void testConcurrentMap()\r\n    {\r\n        String key = \"test\";\r\n        int count  = 1000;\r\n        Map<String, String> cache = new ConcurrentHashMap<>();\r\n\r\n        IntStream.range(0, count).parallel().forEach((n) -> {\r\n            String val = cache.computeIfAbsent(key, k->\"testv\" + n);\r\n            logger.info(\"Val:\", val );\r\n\r\n        });\r\n    }\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2742",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2742/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2742/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2742/events",
    "html_url": "https://github.com/google/guava/issues/2742",
    "id": 208051999,
    "node_id": "MDU6SXNzdWUyMDgwNTE5OTk=",
    "number": 2742,
    "title": "com.google.common.cache.LongAddables",
    "user": {
      "login": "magicsun198910",
      "id": 5829434,
      "node_id": "MDQ6VXNlcjU4Mjk0MzQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5829434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magicsun198910",
      "html_url": "https://github.com/magicsun198910",
      "followers_url": "https://api.github.com/users/magicsun198910/followers",
      "following_url": "https://api.github.com/users/magicsun198910/following{/other_user}",
      "gists_url": "https://api.github.com/users/magicsun198910/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magicsun198910/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magicsun198910/subscriptions",
      "organizations_url": "https://api.github.com/users/magicsun198910/orgs",
      "repos_url": "https://api.github.com/users/magicsun198910/repos",
      "events_url": "https://api.github.com/users/magicsun198910/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magicsun198910/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-02-16T08:25:33Z",
    "updated_at": "2017-02-16T20:06:53Z",
    "closed_at": "2017-02-16T15:10:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hello. i found like this code.\r\n`static {\r\n    Supplier<LongAddable> supplier;\r\n    try {\r\n      new LongAdder();\r\n      supplier = new Supplier<LongAddable>() {\r\n        @Override\r\n        public LongAddable get() {\r\n          return new LongAdder();\r\n        }\r\n      };\r\n    } catch (Throwable t) { // we really want to catch *everything*\r\n      supplier = new Supplier<LongAddable>() {\r\n        @Override\r\n        public LongAddable get() {\r\n          return new PureJavaLongAddable();\r\n        }\r\n      };\r\n    }\r\n    SUPPLIER = supplier;\r\n  }`\r\n\r\nwhy there is have \r\n`new LongAdder();`\r\ni feel useless.......\r\n\r\nmaven version\r\n            <dependency>\r\n                <groupId>com.google.guava</groupId>\r\n                <artifactId>guava</artifactId>\r\n                <version>18.0</version>\r\n            </dependency>",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2741",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2741/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2741/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2741/events",
    "html_url": "https://github.com/google/guava/issues/2741",
    "id": 207818553,
    "node_id": "MDU6SXNzdWUyMDc4MTg1NTM=",
    "number": 2741,
    "title": "CaseFormat does not appear in the Wiki's TOC",
    "user": {
      "login": "omega09",
      "id": 20368441,
      "node_id": "MDQ6VXNlcjIwMzY4NDQx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20368441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omega09",
      "html_url": "https://github.com/omega09",
      "followers_url": "https://api.github.com/users/omega09/followers",
      "following_url": "https://api.github.com/users/omega09/following{/other_user}",
      "gists_url": "https://api.github.com/users/omega09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omega09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omega09/subscriptions",
      "organizations_url": "https://api.github.com/users/omega09/orgs",
      "repos_url": "https://api.github.com/users/omega09/repos",
      "events_url": "https://api.github.com/users/omega09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omega09/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-15T14:26:55Z",
    "updated_at": "2017-02-15T15:26:18Z",
    "closed_at": "2017-02-15T15:24:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The TOC displayed on all the [Wiki](https://github.com/google/guava/wiki) pages is missing `CaseFormat` under `Strings`:\r\n\r\n- [Strings](https://github.com/google/guava/wiki/StringsExplained)\r\n  - Joiner\r\n  - Splitter\r\n  - CharMatcher\r\n  - Charsets\r\n\r\nThe linked page contains an entry `CaseFormat` which isn't shown.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2740",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2740/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2740/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2740/events",
    "html_url": "https://github.com/google/guava/issues/2740",
    "id": 207608048,
    "node_id": "MDU6SXNzdWUyMDc2MDgwNDg=",
    "number": 2740,
    "title": "Equivalence Javadoc comments still reference pre-Java 8 functionality",
    "user": {
      "login": "mjustin",
      "id": 1580571,
      "node_id": "MDQ6VXNlcjE1ODA1NzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1580571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjustin",
      "html_url": "https://github.com/mjustin",
      "followers_url": "https://api.github.com/users/mjustin/followers",
      "following_url": "https://api.github.com/users/mjustin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjustin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjustin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjustin/subscriptions",
      "organizations_url": "https://api.github.com/users/mjustin/orgs",
      "repos_url": "https://api.github.com/users/mjustin/repos",
      "events_url": "https://api.github.com/users/mjustin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjustin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 1,
    "created_at": "2017-02-14T19:11:00Z",
    "updated_at": "2017-03-28T16:40:00Z",
    "closed_at": "2017-03-28T16:40:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The [doc comments](https://google.github.io/guava/releases/21.0/api/docs/com/google/common/base/Equivalence.html) for Equivalence state that \"A future version of this class will implement BiPredicate<T, T>. In the meantime, to use an equivalence (say, named equivalence) as a bi-predicate, use the method reference equivalence::equivalent.\"  However, as of Guava 21.0, Equivalence does implement that method.  This section should therefore go away.\r\n\r\nI'm not sure whether this was a one-off miss when converting to Java 8, or if there are other similar misses in updating the doc comments.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2739",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2739/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2739/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2739/events",
    "html_url": "https://github.com/google/guava/issues/2739",
    "id": 207282994,
    "node_id": "MDU6SXNzdWUyMDcyODI5OTQ=",
    "number": 2739,
    "title": "MutableGraph removeEdge throws ConcurrentModificationException if iterating through adjacentNodes()",
    "user": {
      "login": "sudharsannr",
      "id": 1926301,
      "node_id": "MDQ6VXNlcjE5MjYzMDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1926301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sudharsannr",
      "html_url": "https://github.com/sudharsannr",
      "followers_url": "https://api.github.com/users/sudharsannr/followers",
      "following_url": "https://api.github.com/users/sudharsannr/following{/other_user}",
      "gists_url": "https://api.github.com/users/sudharsannr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sudharsannr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sudharsannr/subscriptions",
      "organizations_url": "https://api.github.com/users/sudharsannr/orgs",
      "repos_url": "https://api.github.com/users/sudharsannr/repos",
      "events_url": "https://api.github.com/users/sudharsannr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sudharsannr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 311498444,
        "node_id": "MDU6TGFiZWwzMTE0OTg0NDQ=",
        "url": "https://api.github.com/repos/google/guava/labels/package=graph",
        "name": "package=graph",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "jrtom",
      "id": 11969894,
      "node_id": "MDQ6VXNlcjExOTY5ODk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrtom",
      "html_url": "https://github.com/jrtom",
      "followers_url": "https://api.github.com/users/jrtom/followers",
      "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
      "organizations_url": "https://api.github.com/users/jrtom/orgs",
      "repos_url": "https://api.github.com/users/jrtom/repos",
      "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrtom/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "jrtom",
        "id": 11969894,
        "node_id": "MDQ6VXNlcjExOTY5ODk0",
        "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrtom",
        "html_url": "https://github.com/jrtom",
        "followers_url": "https://api.github.com/users/jrtom/followers",
        "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
        "organizations_url": "https://api.github.com/users/jrtom/orgs",
        "repos_url": "https://api.github.com/users/jrtom/repos",
        "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrtom/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-02-13T17:19:25Z",
    "updated_at": "2017-02-13T19:20:40Z",
    "closed_at": "2017-02-13T18:55:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have seen that the documentation suggests that the accessor methods on mutable graph throws `ConcurrentModificationException` while iterating through `adjacentNodes()`. I have a sample dfs that removes edges while performing dfs:\r\n```\r\nprivate Set<EndpointPair<String>> backEdges(MutableGraph<String> g, String root, String current, Set<String> visited,\r\n\t\t\tSet<EndpointPair<String>> backEdges)\r\n\t{\r\n\t\tvisited.add(current);\r\n\r\n\t\tfor (String n : g.adjacentNodes(current))\r\n\t\t{\r\n\t\t\tif (!visited.contains(n))\r\n\t\t\t{\r\n\t\t\t\tbackEdges(g, current, n, visited, backEdges);\r\n\t\t\t}\r\n\t\t\telse if (!n.equals(root))\r\n\t\t\t{\r\n\t\t\t\t// Found a back-edge\r\n\t\t\t\tEndpointPair<String> edge1 = EndpointPair.ordered(current, n);\r\n\t\t\t\tEndpointPair<String> edge2 = EndpointPair.ordered(n, current);\r\n\r\n\t\t\t\tlogger.info(\"Removing edge {} {}\", edge1.nodeU(), edge1.nodeV());\r\n\t\t\t\t// Remove from graph\r\n\t\t\t\tg.removeEdge(edge1.nodeU(), edge1.nodeV());\r\n\t\t\t\tg.removeEdge(edge2.nodeU(), edge2.nodeV());\r\n\r\n\t\t\t\t// Add to result set\r\n\t\t\t\tbackEdges.add(edge1);\r\n\t\t\t\tbackEdges.add(edge2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn backEdges;\r\n\t}\r\n```\r\n\r\nA node is removed and immediately the iterator throws exception. Is there a way that this could be avoided though only `removeEdge()` is applied here?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2738",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2738/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2738/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2738/events",
    "html_url": "https://github.com/google/guava/issues/2738",
    "id": 207264035,
    "node_id": "MDU6SXNzdWUyMDcyNjQwMzU=",
    "number": 2738,
    "title": "Sets.difference should accept general Collection as second argument",
    "user": {
      "login": "tomaszalusky",
      "id": 1046849,
      "node_id": "MDQ6VXNlcjEwNDY4NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1046849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomaszalusky",
      "html_url": "https://github.com/tomaszalusky",
      "followers_url": "https://api.github.com/users/tomaszalusky/followers",
      "following_url": "https://api.github.com/users/tomaszalusky/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomaszalusky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomaszalusky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomaszalusky/subscriptions",
      "organizations_url": "https://api.github.com/users/tomaszalusky/orgs",
      "repos_url": "https://api.github.com/users/tomaszalusky/repos",
      "events_url": "https://api.github.com/users/tomaszalusky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomaszalusky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1420524006,
        "node_id": "MDU6TGFiZWwxNDIwNTI0MDA2",
        "url": "https://api.github.com/repos/google/guava/labels/P4",
        "name": "P4",
        "color": "8581e8",
        "default": false,
        "description": ""
      },
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-02-13T16:14:08Z",
    "updated_at": "2019-07-30T19:16:38Z",
    "closed_at": "2019-07-30T19:16:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Current signature of `Sets.difference` method is\r\n\r\n    SetView<E> difference(final Set<E> set1, final Set<?> set2)\r\n\r\nhowever, for all usages of `set2` argument everything would work as well if argument was of type `Collection<?>`, without impact on performance for current usages. Why not to make signature less strict?\r\n\r\nIn my use case, I do following manipulation:\r\n\r\n    BiMap<Foo,Foo> specialFoos = ...\r\n    Set<Foo> nonspecialLeftFoos  = Sets.difference(leftFoos ,specialFoos.keySet());\r\n    Set<Foo> nonspecialRightFoos = Sets.difference(rightFoos,specialFoos.values());\r\n\r\nwhere this issue is the only reason why `specialFoos` is a `BiMap`.\r\nThanks for response.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2737",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2737/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2737/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2737/events",
    "html_url": "https://github.com/google/guava/issues/2737",
    "id": 207153887,
    "node_id": "MDU6SXNzdWUyMDcxNTM4ODc=",
    "number": 2737,
    "title": "LoadingCache: return expired value while recalculating",
    "user": {
      "login": "errandir",
      "id": 527775,
      "node_id": "MDQ6VXNlcjUyNzc3NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/527775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/errandir",
      "html_url": "https://github.com/errandir",
      "followers_url": "https://api.github.com/users/errandir/followers",
      "following_url": "https://api.github.com/users/errandir/following{/other_user}",
      "gists_url": "https://api.github.com/users/errandir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/errandir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/errandir/subscriptions",
      "organizations_url": "https://api.github.com/users/errandir/orgs",
      "repos_url": "https://api.github.com/users/errandir/repos",
      "events_url": "https://api.github.com/users/errandir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/errandir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-02-13T08:49:45Z",
    "updated_at": "2017-02-13T21:51:24Z",
    "closed_at": "2017-02-13T21:51:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "E.g. there are:\r\n\r\n<pre lang=\"java\">\r\nLoadingCache<K, V> cache = CacheBuilder.newBuilder()\r\n        .refreshAfterWrite(w, MINUTES)\r\n        .build(new CacheLoader<K, V>() {\r\n            public V load(K key) throws Exception {\r\n                // long running IO;\r\n            }\r\n        });\r\n</pre>\r\n\r\nIt would be great if it will be possible to make `cache` return expired value while recalculating.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2735",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2735/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2735/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2735/events",
    "html_url": "https://github.com/google/guava/issues/2735",
    "id": 206833643,
    "node_id": "MDU6SXNzdWUyMDY4MzM2NDM=",
    "number": 2735,
    "title": "Make some improvements to Stopwatch",
    "user": {
      "login": "pi555",
      "id": 16069471,
      "node_id": "MDQ6VXNlcjE2MDY5NDcx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16069471?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pi555",
      "html_url": "https://github.com/pi555",
      "followers_url": "https://api.github.com/users/pi555/followers",
      "following_url": "https://api.github.com/users/pi555/following{/other_user}",
      "gists_url": "https://api.github.com/users/pi555/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pi555/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pi555/subscriptions",
      "organizations_url": "https://api.github.com/users/pi555/orgs",
      "repos_url": "https://api.github.com/users/pi555/repos",
      "events_url": "https://api.github.com/users/pi555/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pi555/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-02-10T16:00:55Z",
    "updated_at": "2017-04-19T19:02:20Z",
    "closed_at": "2017-03-05T12:01:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I think the current implementation of `Stopwatch` could be improved.\r\nIn particular:\r\n\r\n- <strike>Concurrent manipulation of its state should be supported.</strike>\r\n- If multiple stopwatch instances are being used, it might be difficult to identify which one the output belongs to. This could be easily addressed by adding an identifier to the stopwatch.\r\n- The logic to implement the \"smart\" behavior of automatically choosing the most appropriate time unit based on the scale of the result is a bit cumbersome. I think that just using `TimeUnit.toString()` is perfectly acceptable in this case.\r\n- A stopwatch that, once constructed, is not in the running state by default is of no value. The same thing can be achieved by delaying the construction of the object itself.\r\n\r\nI often had to develop my own \"profiler\" utility, so I'd like to contribute my code to this issue.\r\n\r\nI've written a [simple draft](https://gist.github.com/MrSystem/579b16a472c756e5d77918bff1714f66) of what I think could qualify as a good API & implementation.\r\nPlease note that documentation is missing and that I've used my own code style. Proper backward compatibility support has to be implemented, too. I will commit a new and improved version once the issue has been discussed.\r\nNote that the following issues are being addressed as well: #2593 #2729 #2007.\r\n\r\nHere's an example of how I'd use it (a meaningful identifier is passed to the constructor):\r\n\r\n```\r\nStopwatch stopwatch = new Stopwatch(\"ID Generator\");\r\nfor (int i = 0; i < 10; i++) {\r\n    UUID.randomUUID();\r\n}\r\nstopwatch.report();\r\n```\r\n\r\nThe output generated by the previous example is the following:\r\n\r\n```\r\n[ID Generator] Elapsed time: 73 milliseconds\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2731",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2731/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2731/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2731/events",
    "html_url": "https://github.com/google/guava/pull/2731",
    "id": 204757772,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTA0MjU5MzU0",
    "number": 2731,
    "title": "make NullPointerTester.isNullable() use @CheckForNull too",
    "user": {
      "login": "bdworth",
      "id": 13633550,
      "node_id": "MDQ6VXNlcjEzNjMzNTUw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13633550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bdworth",
      "html_url": "https://github.com/bdworth",
      "followers_url": "https://api.github.com/users/bdworth/followers",
      "following_url": "https://api.github.com/users/bdworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/bdworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bdworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bdworth/subscriptions",
      "organizations_url": "https://api.github.com/users/bdworth/orgs",
      "repos_url": "https://api.github.com/users/bdworth/repos",
      "events_url": "https://api.github.com/users/bdworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bdworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2017-02-02T01:29:56Z",
    "updated_at": "2017-03-23T15:26:21Z",
    "closed_at": "2017-03-23T15:26:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2731",
      "html_url": "https://github.com/google/guava/pull/2731",
      "diff_url": "https://github.com/google/guava/pull/2731.diff",
      "patch_url": "https://github.com/google/guava/pull/2731.patch"
    },
    "body": "i.e., returns true if a parameter is annotated with @Nullable\r\n*or* @CheckForNull. Both annotations mean \"this can be null\".\r\n\r\nfixes #2656",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2729",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2729/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2729/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2729/events",
    "html_url": "https://github.com/google/guava/issues/2729",
    "id": 203923362,
    "node_id": "MDU6SXNzdWUyMDM5MjMzNjI=",
    "number": 2729,
    "title": "Non final `Stopwatch`",
    "user": {
      "login": "mar-kolya",
      "id": 1003102,
      "node_id": "MDQ6VXNlcjEwMDMxMDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1003102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mar-kolya",
      "html_url": "https://github.com/mar-kolya",
      "followers_url": "https://api.github.com/users/mar-kolya/followers",
      "following_url": "https://api.github.com/users/mar-kolya/following{/other_user}",
      "gists_url": "https://api.github.com/users/mar-kolya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mar-kolya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mar-kolya/subscriptions",
      "organizations_url": "https://api.github.com/users/mar-kolya/orgs",
      "repos_url": "https://api.github.com/users/mar-kolya/repos",
      "events_url": "https://api.github.com/users/mar-kolya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mar-kolya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-01-30T03:56:42Z",
    "updated_at": "2017-09-13T23:58:43Z",
    "closed_at": "2017-09-13T23:58:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently `Stopwatch` is final which makes it impossible to mock it with mockito to unit test classes using it.\r\nIt would be great to make `Stopwatch` non final to avoid this problem.\r\n\r\nThanks!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2728",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2728/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2728/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2728/events",
    "html_url": "https://github.com/google/guava/pull/2728",
    "id": 203805295,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzNjEwNDk3",
    "number": 2728,
    "title": "Allow ignoring Constructors in NullPointerTester",
    "user": {
      "login": "kartoffelsup",
      "id": 1819197,
      "node_id": "MDQ6VXNlcjE4MTkxOTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1819197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kartoffelsup",
      "html_url": "https://github.com/kartoffelsup",
      "followers_url": "https://api.github.com/users/kartoffelsup/followers",
      "following_url": "https://api.github.com/users/kartoffelsup/following{/other_user}",
      "gists_url": "https://api.github.com/users/kartoffelsup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kartoffelsup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kartoffelsup/subscriptions",
      "organizations_url": "https://api.github.com/users/kartoffelsup/orgs",
      "repos_url": "https://api.github.com/users/kartoffelsup/repos",
      "events_url": "https://api.github.com/users/kartoffelsup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kartoffelsup/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-28T12:39:36Z",
    "updated_at": "2017-01-30T21:57:25Z",
    "closed_at": "2017-01-30T21:57:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2728",
      "html_url": "https://github.com/google/guava/pull/2728",
      "diff_url": "https://github.com/google/guava/pull/2728.diff",
      "patch_url": "https://github.com/google/guava/pull/2728.patch"
    },
    "body": "Fixes: gh-2726",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2727",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2727/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2727/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2727/events",
    "html_url": "https://github.com/google/guava/issues/2727",
    "id": 203591023,
    "node_id": "MDU6SXNzdWUyMDM1OTEwMjM=",
    "number": 2727,
    "title": "Allow injection of clock into ExpiringMemoizationSupplier to allow for testing",
    "user": {
      "login": "mokah",
      "id": 2933137,
      "node_id": "MDQ6VXNlcjI5MzMxMzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2933137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mokah",
      "html_url": "https://github.com/mokah",
      "followers_url": "https://api.github.com/users/mokah/followers",
      "following_url": "https://api.github.com/users/mokah/following{/other_user}",
      "gists_url": "https://api.github.com/users/mokah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mokah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mokah/subscriptions",
      "organizations_url": "https://api.github.com/users/mokah/orgs",
      "repos_url": "https://api.github.com/users/mokah/repos",
      "events_url": "https://api.github.com/users/mokah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mokah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1420524006,
        "node_id": "MDU6TGFiZWwxNDIwNTI0MDA2",
        "url": "https://api.github.com/repos/google/guava/labels/P4",
        "name": "P4",
        "color": "8581e8",
        "default": false,
        "description": ""
      },
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-27T09:34:34Z",
    "updated_at": "2019-07-30T19:45:08Z",
    "closed_at": "2019-07-30T19:44:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "To allow testing of ExpiringMemoizationSupplier, a second constructor with `@VisibleForTesting` should be added that allows the injection of a clock. \r\n\r\nRight now it is being tested by calling `Thread.sleep(x) `but an injection of a clock would be a better way to test, I believe. Thoughts?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2726",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2726/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2726/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2726/events",
    "html_url": "https://github.com/google/guava/issues/2726",
    "id": 203196348,
    "node_id": "MDU6SXNzdWUyMDMxOTYzNDg=",
    "number": 2726,
    "title": "NullPointerTester: add method to ignore constructor",
    "user": {
      "login": "bdworth",
      "id": 13633550,
      "node_id": "MDQ6VXNlcjEzNjMzNTUw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13633550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bdworth",
      "html_url": "https://github.com/bdworth",
      "followers_url": "https://api.github.com/users/bdworth/followers",
      "following_url": "https://api.github.com/users/bdworth/following{/other_user}",
      "gists_url": "https://api.github.com/users/bdworth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bdworth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bdworth/subscriptions",
      "organizations_url": "https://api.github.com/users/bdworth/orgs",
      "repos_url": "https://api.github.com/users/bdworth/repos",
      "events_url": "https://api.github.com/users/bdworth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bdworth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504641,
        "node_id": "MDU6TGFiZWwxNDM1MDQ2NDE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=testing",
        "name": "package=testing",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 2,
    "created_at": "2017-01-25T19:18:47Z",
    "updated_at": "2017-03-28T16:44:36Z",
    "closed_at": "2017-03-28T16:44:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "`NullPointerTester` has `ignore()` to ignore methods, but there's no equivalent method for ignoring constructors.\r\n\r\nThis is easy to work around by calling `testConstructor()` on a set of filtered constructors. But it would be nice if core Guava included a way to ignore constructors before calling `testAllPublicConstructors()` or `testConstructors()`.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2724",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2724/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2724/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2724/events",
    "html_url": "https://github.com/google/guava/issues/2724",
    "id": 202789776,
    "node_id": "MDU6SXNzdWUyMDI3ODk3NzY=",
    "number": 2724,
    "title": "Sets.cartesianProduct(Set<? extends B>... sets) is missing @SafeVarargs annotation",
    "user": {
      "login": "arlampin",
      "id": 1737104,
      "node_id": "MDQ6VXNlcjE3MzcxMDQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1737104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arlampin",
      "html_url": "https://github.com/arlampin",
      "followers_url": "https://api.github.com/users/arlampin/followers",
      "following_url": "https://api.github.com/users/arlampin/following{/other_user}",
      "gists_url": "https://api.github.com/users/arlampin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arlampin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arlampin/subscriptions",
      "organizations_url": "https://api.github.com/users/arlampin/orgs",
      "repos_url": "https://api.github.com/users/arlampin/repos",
      "events_url": "https://api.github.com/users/arlampin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arlampin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-24T11:15:45Z",
    "updated_at": "2018-04-30T16:30:02Z",
    "closed_at": "2018-04-30T16:30:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`Lists.cartesianProduct(List<? extends B>... lists)` has it, so I assume Sets version should also have it.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2723",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2723/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2723/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2723/events",
    "html_url": "https://github.com/google/guava/issues/2723",
    "id": 202622075,
    "node_id": "MDU6SXNzdWUyMDI2MjIwNzU=",
    "number": 2723,
    "title": "inheritableThreadLocals won't be accessible under Java 9",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "eamonnmcmanus",
      "id": 5246810,
      "node_id": "MDQ6VXNlcjUyNDY4MTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5246810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eamonnmcmanus",
      "html_url": "https://github.com/eamonnmcmanus",
      "followers_url": "https://api.github.com/users/eamonnmcmanus/followers",
      "following_url": "https://api.github.com/users/eamonnmcmanus/following{/other_user}",
      "gists_url": "https://api.github.com/users/eamonnmcmanus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eamonnmcmanus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eamonnmcmanus/subscriptions",
      "organizations_url": "https://api.github.com/users/eamonnmcmanus/orgs",
      "repos_url": "https://api.github.com/users/eamonnmcmanus/repos",
      "events_url": "https://api.github.com/users/eamonnmcmanus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eamonnmcmanus/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "eamonnmcmanus",
        "id": 5246810,
        "node_id": "MDQ6VXNlcjUyNDY4MTA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/5246810?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eamonnmcmanus",
        "html_url": "https://github.com/eamonnmcmanus",
        "followers_url": "https://api.github.com/users/eamonnmcmanus/followers",
        "following_url": "https://api.github.com/users/eamonnmcmanus/following{/other_user}",
        "gists_url": "https://api.github.com/users/eamonnmcmanus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eamonnmcmanus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eamonnmcmanus/subscriptions",
        "organizations_url": "https://api.github.com/users/eamonnmcmanus/orgs",
        "repos_url": "https://api.github.com/users/eamonnmcmanus/repos",
        "events_url": "https://api.github.com/users/eamonnmcmanus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eamonnmcmanus/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-23T19:06:19Z",
    "updated_at": "2017-10-06T17:03:22Z",
    "closed_at": "2017-10-06T17:03:22Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "https://github.com/google/guava/issues/2571#issuecomment-273750815\r\n\r\nWe access it here: https://github.com/google/guava/blob/3def13f60ae4a72e59a8426aab6e3568613fe9e4/guava/src/com/google/common/base/internal/Finalizer.java#L195",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2722",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2722/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2722/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2722/events",
    "html_url": "https://github.com/google/guava/issues/2722",
    "id": 202473734,
    "node_id": "MDU6SXNzdWUyMDI0NzM3MzQ=",
    "number": 2722,
    "title": "Error:Execution failed for task ':testapp:transformClassesWithPreJackPackagedLibrariesForDebug'. > com.android.build.api.transform.TransformException: com.android.jack.api.v01.CompilationException",
    "user": {
      "login": "SmileToMe",
      "id": 13011111,
      "node_id": "MDQ6VXNlcjEzMDExMTEx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13011111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SmileToMe",
      "html_url": "https://github.com/SmileToMe",
      "followers_url": "https://api.github.com/users/SmileToMe/followers",
      "following_url": "https://api.github.com/users/SmileToMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/SmileToMe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SmileToMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SmileToMe/subscriptions",
      "organizations_url": "https://api.github.com/users/SmileToMe/orgs",
      "repos_url": "https://api.github.com/users/SmileToMe/repos",
      "events_url": "https://api.github.com/users/SmileToMe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SmileToMe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 691862394,
        "node_id": "MDU6TGFiZWw2OTE4NjIzOTQ=",
        "url": "https://api.github.com/repos/google/guava/labels/P3",
        "name": "P3",
        "color": "c5c5c5",
        "default": false,
        "description": null
      },
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143534295,
        "node_id": "MDU6TGFiZWwxNDM1MzQyOTU=",
        "url": "https://api.github.com/repos/google/guava/labels/status=obsolete",
        "name": "status=obsolete",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-23T08:41:03Z",
    "updated_at": "2019-07-30T19:52:25Z",
    "closed_at": "2019-07-30T19:52:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "how to solve this error？？？\r\n\r\nError:Execution failed for task ':testapp:transformClassesWithPreJackPackagedLibrariesForDebug'.\r\n> com.android.build.api.transform.TransformException: com.android.jack.api.v01.CompilationException",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2721",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2721/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2721/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2721/events",
    "html_url": "https://github.com/google/guava/issues/2721",
    "id": 202233097,
    "node_id": "MDU6SXNzdWUyMDIyMzMwOTc=",
    "number": 2721,
    "title": "Many warning messages related to errorprone \"CompatibleWith\"",
    "user": {
      "login": "enwired",
      "id": 2030338,
      "node_id": "MDQ6VXNlcjIwMzAzMzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2030338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enwired",
      "html_url": "https://github.com/enwired",
      "followers_url": "https://api.github.com/users/enwired/followers",
      "following_url": "https://api.github.com/users/enwired/following{/other_user}",
      "gists_url": "https://api.github.com/users/enwired/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enwired/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enwired/subscriptions",
      "organizations_url": "https://api.github.com/users/enwired/orgs",
      "repos_url": "https://api.github.com/users/enwired/repos",
      "events_url": "https://api.github.com/users/enwired/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enwired/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/19",
      "html_url": "https://github.com/google/guava/milestone/19",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/19/labels",
      "id": 2361946,
      "node_id": "MDk6TWlsZXN0b25lMjM2MTk0Ng==",
      "number": 19,
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2017-03-03T19:44:28Z",
      "updated_at": "2017-05-23T19:34:13Z",
      "due_on": null,
      "closed_at": "2017-05-23T19:34:13Z"
    },
    "comments": 34,
    "created_at": "2017-01-20T20:20:45Z",
    "updated_at": "2017-11-06T16:02:22Z",
    "closed_at": "2017-01-31T18:28:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When compiling code that depends on Guava 21.0, [Edit: I mistakenly said 20.0 originally] using Maven, I get many warning messages like this:\r\n\r\n> Cannot find annotation method 'value()' in type 'com.google.errorprone.annotations.CompatibleWith': class file for com.google.errorprone.annotations.CompatibleWith not found\r\n\r\nI do not use the errorprone library in my code, so this error message is due to its use by Guava.\r\n\r\nObviously, these are only warning messages and are not critical.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2720",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2720/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2720/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2720/events",
    "html_url": "https://github.com/google/guava/issues/2720",
    "id": 202095469,
    "node_id": "MDU6SXNzdWUyMDIwOTU0Njk=",
    "number": 2720,
    "title": "TreeMultiSet clear is not working",
    "user": {
      "login": "rohit5ram",
      "id": 7732595,
      "node_id": "MDQ6VXNlcjc3MzI1OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7732595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rohit5ram",
      "html_url": "https://github.com/rohit5ram",
      "followers_url": "https://api.github.com/users/rohit5ram/followers",
      "following_url": "https://api.github.com/users/rohit5ram/following{/other_user}",
      "gists_url": "https://api.github.com/users/rohit5ram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rohit5ram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rohit5ram/subscriptions",
      "organizations_url": "https://api.github.com/users/rohit5ram/orgs",
      "repos_url": "https://api.github.com/users/rohit5ram/repos",
      "events_url": "https://api.github.com/users/rohit5ram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rohit5ram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2017-01-20T09:42:12Z",
    "updated_at": "2017-02-03T10:22:22Z",
    "closed_at": "2017-02-03T10:22:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a TreeMultiSet as a member of the singleton object. When I clear the set using clear(), it doesn't clear any.\r\n```\r\nclass Campaign {\r\n   private static Campaign singleton;\r\n   private TreeMultiset<Item> items;\r\n  \r\n   public Campaign() {\r\n        items = TreeMultiSet.create();\r\n   }\r\n   public void destroy() {\r\n      items.clear();\r\n   }\r\n   public void setItem(Item item) {\r\n      items.add(item);\r\n   }\r\n   public static Campaign getSingleton() {\r\n     if (singleton == null) {\r\n            synchronized (Campaign.class) {\r\n                if (singleton == null) {\r\n                    singleton = new Campaign();\r\n                }\r\n            }\r\n        }\r\n        return singleton;\r\n   }\r\n}\r\n\r\nItem item = new Item();\r\nCampaign.getSingleton().setItem(item);\r\nCampaign.getSingleton().destroy(); //its not clearing the set. no errors either.\r\n\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2719",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2719/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2719/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2719/events",
    "html_url": "https://github.com/google/guava/issues/2719",
    "id": 202004049,
    "node_id": "MDU6SXNzdWUyMDIwMDQwNDk=",
    "number": 2719,
    "title": "Multiple strings in Strings.isNullOrEmpty method",
    "user": {
      "login": "cunhazera",
      "id": 8171351,
      "node_id": "MDQ6VXNlcjgxNzEzNTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8171351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cunhazera",
      "html_url": "https://github.com/cunhazera",
      "followers_url": "https://api.github.com/users/cunhazera/followers",
      "following_url": "https://api.github.com/users/cunhazera/following{/other_user}",
      "gists_url": "https://api.github.com/users/cunhazera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cunhazera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cunhazera/subscriptions",
      "organizations_url": "https://api.github.com/users/cunhazera/orgs",
      "repos_url": "https://api.github.com/users/cunhazera/repos",
      "events_url": "https://api.github.com/users/cunhazera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cunhazera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-01-19T23:16:34Z",
    "updated_at": "2017-01-20T17:11:42Z",
    "closed_at": "2017-01-20T12:29:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Sometimes I want to check if more than one String is null or empty, but the method in the API only allows one String as argument.\r\n\r\nTell me what you guys think about it:\r\n``` java\r\nstatic boolean stringIsNullOrEmpty(@Nullable String... string) {\r\n\tfor (int i = 0; i < string.length; i++) {\r\n\t\tif (string[i] == null || string[i].length() == 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2718",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2718/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2718/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2718/events",
    "html_url": "https://github.com/google/guava/pull/2718",
    "id": 201779087,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTAyMjExMTUy",
    "number": 2718,
    "title": "Update COPYING",
    "user": {
      "login": "bepahol",
      "id": 19847809,
      "node_id": "MDQ6VXNlcjE5ODQ3ODA5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/19847809?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bepahol",
      "html_url": "https://github.com/bepahol",
      "followers_url": "https://api.github.com/users/bepahol/followers",
      "following_url": "https://api.github.com/users/bepahol/following{/other_user}",
      "gists_url": "https://api.github.com/users/bepahol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bepahol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bepahol/subscriptions",
      "organizations_url": "https://api.github.com/users/bepahol/orgs",
      "repos_url": "https://api.github.com/users/bepahol/repos",
      "events_url": "https://api.github.com/users/bepahol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bepahol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-19T06:56:42Z",
    "updated_at": "2017-01-19T15:15:33Z",
    "closed_at": "2017-01-19T15:15:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2718",
      "html_url": "https://github.com/google/guava/pull/2718",
      "diff_url": "https://github.com/google/guava/pull/2718.diff",
      "patch_url": "https://github.com/google/guava/pull/2718.patch"
    },
    "body": "updated copyright - filled in template",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2717",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2717/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2717/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2717/events",
    "html_url": "https://github.com/google/guava/issues/2717",
    "id": 201467546,
    "node_id": "MDU6SXNzdWUyMDE0Njc1NDY=",
    "number": 2717,
    "title": "E-mail addresses from Google Code exposed in GitHub issues",
    "user": {
      "login": "homeworkprod",
      "id": 95277,
      "node_id": "MDQ6VXNlcjk1Mjc3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/95277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/homeworkprod",
      "html_url": "https://github.com/homeworkprod",
      "followers_url": "https://api.github.com/users/homeworkprod/followers",
      "following_url": "https://api.github.com/users/homeworkprod/following{/other_user}",
      "gists_url": "https://api.github.com/users/homeworkprod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/homeworkprod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/homeworkprod/subscriptions",
      "organizations_url": "https://api.github.com/users/homeworkprod/orgs",
      "repos_url": "https://api.github.com/users/homeworkprod/repos",
      "events_url": "https://api.github.com/users/homeworkprod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/homeworkprod/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-18T03:05:23Z",
    "updated_at": "2017-01-26T20:42:33Z",
    "closed_at": "2017-01-26T20:31:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is kind of a meta issue.\r\n\r\nProject contributors' e-mail addresses, which were originally displayed in an incomplete/\"obfuscated\" form in Google Code issues as per the authors' privacy settings, have become fully visible after migration of the issues to GitHub ([random example](https://github.com/google/guava/issues/6)).\r\n\r\n> Original issue created by [FULL E-MAIL ADDRESS] on [TIMESTAMP]\r\n\r\nThis does not affect authors who had their username displayed instead (though it might be simple to derive their e-mail addresses from that, but that's not the point here).\r\n\r\nWhy did this happen? Why did anyone think it would be a good idea to expose people's e-mail addresses, and against their accounts' privacy settings stating otherwise?\r\n\r\nWhile damange has been done already (Hello, spam!), I request the full addresses (or at least mine) to be removed from GitHub issues. (People can't do this on their own as the comments were posted by @gissuebot.)\r\n\r\nDue to this alarming incident I feel I should refrain from contributing to Google projects for the time being. I consider this a serious breach of trust.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2716",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2716/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2716/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2716/events",
    "html_url": "https://github.com/google/guava/issues/2716",
    "id": 201164659,
    "node_id": "MDU6SXNzdWUyMDExNjQ2NTk=",
    "number": 2716,
    "title": "Add addRow, moveRow, addColumn, moveColumn, deleteRow, deleteColumn functions to TreeBasedTable class.",
    "user": {
      "login": "TimYi",
      "id": 7494892,
      "node_id": "MDQ6VXNlcjc0OTQ4OTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7494892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimYi",
      "html_url": "https://github.com/TimYi",
      "followers_url": "https://api.github.com/users/TimYi/followers",
      "following_url": "https://api.github.com/users/TimYi/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimYi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimYi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimYi/subscriptions",
      "organizations_url": "https://api.github.com/users/TimYi/orgs",
      "repos_url": "https://api.github.com/users/TimYi/repos",
      "events_url": "https://api.github.com/users/TimYi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimYi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-17T03:02:32Z",
    "updated_at": "2017-01-17T03:28:03Z",
    "closed_at": "2017-01-17T03:27:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "com.google.common.collect.TreeBasedTable represents a real table data structure. Rows and columns are sorted.\r\nThen add, remove, move row(s), column(s) is common functions to a table. Our project needs these functions. I think this is a common need.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2715",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2715/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2715/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2715/events",
    "html_url": "https://github.com/google/guava/pull/2715",
    "id": 200885993,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTAxNjA1MDg4",
    "number": 2715,
    "title": "Fix for Issue 2714: https://github.com/google/guava/issues/2714",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-01-15T18:42:38Z",
    "updated_at": "2017-01-15T19:00:37Z",
    "closed_at": "2017-01-15T19:00:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2715",
      "html_url": "https://github.com/google/guava/pull/2715",
      "diff_url": "https://github.com/google/guava/pull/2715.diff",
      "patch_url": "https://github.com/google/guava/pull/2715.patch"
    },
    "body": "ReverseConverter, ConverterComposition, & FunctionBasedConverter classes implement Serializable without transient/serialized member variables",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2714",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2714/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2714/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2714/events",
    "html_url": "https://github.com/google/guava/issues/2714",
    "id": 200885766,
    "node_id": "MDU6SXNzdWUyMDA4ODU3NjY=",
    "number": 2714,
    "title": "ReverseConverter, ConverterComposition, & FunctionBasedConverter classes implement Serializable without transient/serialized member variables",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-15T18:38:54Z",
    "updated_at": "2017-01-15T19:47:17Z",
    "closed_at": "2017-01-15T19:47:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For example, line 146 of com.google.common.base.Converter:\r\n\r\nfinal Converter<A, B> original;\r\n\r\nShould be:\r\n\r\nfinal transient Converter<A, B> original;",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2713",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2713/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2713/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2713/events",
    "html_url": "https://github.com/google/guava/issues/2713",
    "id": 200874784,
    "node_id": "MDU6SXNzdWUyMDA4NzQ3ODQ=",
    "number": 2713,
    "title": "Add CharSource.readToCharArray()",
    "user": {
      "login": "PhilippWendler",
      "id": 2545335,
      "node_id": "MDQ6VXNlcjI1NDUzMzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2545335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhilippWendler",
      "html_url": "https://github.com/PhilippWendler",
      "followers_url": "https://api.github.com/users/PhilippWendler/followers",
      "following_url": "https://api.github.com/users/PhilippWendler/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhilippWendler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhilippWendler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhilippWendler/subscriptions",
      "organizations_url": "https://api.github.com/users/PhilippWendler/orgs",
      "repos_url": "https://api.github.com/users/PhilippWendler/repos",
      "events_url": "https://api.github.com/users/PhilippWendler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhilippWendler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 691862394,
        "node_id": "MDU6TGFiZWw2OTE4NjIzOTQ=",
        "url": "https://api.github.com/repos/google/guava/labels/P3",
        "name": "P3",
        "color": "c5c5c5",
        "default": false,
        "description": null
      },
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-15T15:25:46Z",
    "updated_at": "2019-07-30T20:05:19Z",
    "closed_at": "2019-07-30T20:05:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently there is no easy way in Java to read a complete file into a single `char` array with the minimal amount of copies in memory. Of course using a `String` instead is usually much better, but sometimes there are legacy APIs that only accept `char[]`. In this case I currently have to do one of the following:\r\n\r\n- `MoreFiles.asCharSource(file, encoding).read().toCharArray();`:\r\n  Copies the file content first to a `StringBuilder`, then to a `String` and finally to the `char[]`.\r\n- \r\n      StringBuilder sb = new StringBuilder();\r\n      MoreFiles.asCharSource(file, encoding).copyTo(sb);\r\n      char[] result = new char[sb.length()];\r\n      sb.getChars(0, sb.length(), result, 0);\r\n   Verbose, non-obvious to write and read, especially because of `getChars` modifying its parameter.\r\n\r\nBy adding a method `char[] readToCharArray()` to `CharSource` this would be nicely solved. Other implementations of `CharSource` such as `CharSequenceCharSource` could even provide optimized versions of this method.",
    "performed_via_github_app": null
  }
]
