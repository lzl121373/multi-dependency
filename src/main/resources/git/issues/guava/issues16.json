[
  {
    "url": "https://api.github.com/repos/google/guava/issues/1996",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1996/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1996/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1996/events",
    "html_url": "https://github.com/google/guava/issues/1996",
    "id": 60645946,
    "node_id": "MDU6SXNzdWU2MDY0NTk0Ng==",
    "number": 1996,
    "title": "AtomicDouble post-jdk5 optimization",
    "user": {
      "login": "talkingscott",
      "id": 10813557,
      "node_id": "MDQ6VXNlcjEwODEzNTU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10813557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/talkingscott",
      "html_url": "https://github.com/talkingscott",
      "followers_url": "https://api.github.com/users/talkingscott/followers",
      "following_url": "https://api.github.com/users/talkingscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/talkingscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/talkingscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/talkingscott/subscriptions",
      "organizations_url": "https://api.github.com/users/talkingscott/orgs",
      "repos_url": "https://api.github.com/users/talkingscott/repos",
      "events_url": "https://api.github.com/users/talkingscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/talkingscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143586672,
        "node_id": "MDU6TGFiZWwxNDM1ODY2NzI=",
        "url": "https://api.github.com/repos/google/guava/labels/status=in-progress",
        "name": "status=in-progress",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "ronshapiro",
      "id": 792797,
      "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronshapiro",
      "html_url": "https://github.com/ronshapiro",
      "followers_url": "https://api.github.com/users/ronshapiro/followers",
      "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
      "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
      "repos_url": "https://api.github.com/users/ronshapiro/repos",
      "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ronshapiro",
        "id": 792797,
        "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ronshapiro",
        "html_url": "https://github.com/ronshapiro",
        "followers_url": "https://api.github.com/users/ronshapiro/followers",
        "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
        "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
        "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
        "repos_url": "https://api.github.com/users/ronshapiro/repos",
        "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-11T11:41:20Z",
    "updated_at": "2017-10-09T17:41:00Z",
    "closed_at": "2017-10-09T17:41:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "AtomicDouble has the following code, including comment.  It is my understanding that guava has dropped JDK 1.5 support, so the code optimization in comments can be applied.\n\n``` java\n  public final void lazySet(double newValue) {\n    set(newValue);\n    // TODO(user): replace with code below when jdk5 support is dropped.\n    // long next = doubleToRawLongBits(newValue);\n    // updater.lazySet(this, next);\n  }\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1995",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1995/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1995/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1995/events",
    "html_url": "https://github.com/google/guava/issues/1995",
    "id": 60575098,
    "node_id": "MDU6SXNzdWU2MDU3NTA5OA==",
    "number": 1995,
    "title": "Reduce object creation in Futures?",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143507427,
        "node_id": "MDU6TGFiZWwxNDM1MDc0Mjc=",
        "url": "https://api.github.com/repos/google/guava/labels/type=performance",
        "name": "type=performance",
        "color": "f4d75f",
        "default": false,
        "description": "Related to performance"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-10T21:48:30Z",
    "updated_at": "2015-06-02T22:40:01Z",
    "closed_at": "2015-06-02T22:40:01Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "- Avoid allocating `rejectionPropagatingRunnable` when given an explicit `directExecutor()`? This would just be an `if()`.\n- Avoid allocating `asAsyncFunction` wrapper when given a `Function`? We could parameterize `ChainingListenableFuture` and `CatchingFuture` on the actual type, and we could have a subclass for each actual type to invoke `set`/`setFuture`. (I think we have to do that or something similarly ugly, since we need for the function to be available during the constructor.)\n- anything else?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1994",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1994/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1994/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1994/events",
    "html_url": "https://github.com/google/guava/issues/1994",
    "id": 60486011,
    "node_id": "MDU6SXNzdWU2MDQ4NjAxMQ==",
    "number": 1994,
    "title": "Make it easier to implement Cache with similar functionality to LocalCache",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-10T11:33:21Z",
    "updated_at": "2020-01-13T21:18:34Z",
    "closed_at": "2020-01-13T21:18:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm implementing my own `Cache`, and there are several features of `LocalCache` that I would like to copy that I currently can't because the relevant methods are package-access:\n1. `RemovalNotification` constructor is package-private, meaning `RemovalListener` can't be used in custom caches\n2. `CacheLoader.UnsupportedLoadingOperationException` is package-private, so custom caches cannot replicate the LocalCache behaviour of falling back on `load` if `loadAll` is not implemented.\n\nAlso, `AbstractCache` could do a bit more with default implementations of the `Cache` methods. For example, `get(K, Callable)` could have a basic body using `getIfPresent` and `put`, and `AbstractLoadingCache` could check for and throw `InvalidCacheLoadException` or `ExecutionException` itself when loading. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1993",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1993/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1993/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1993/events",
    "html_url": "https://github.com/google/guava/issues/1993",
    "id": 60483577,
    "node_id": "MDU6SXNzdWU2MDQ4MzU3Nw==",
    "number": 1993,
    "title": "Generic args of CacheLoader.from can be variant",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-10T11:12:01Z",
    "updated_at": "2015-03-10T14:25:58Z",
    "closed_at": "2015-03-10T14:25:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The two CacheLoader.from methods can be variant in their generic arguments like so:\n\n```\npublic static <K, V> CacheLoader<K, V> from(Function<? super K, ? extends V> function);\npublic static <V> CacheLoader<Object, V> from(Supplier<? extends V> supplier);\n```\n\nI also think that `from(Supplier)` should take a `K` parameter, so it can be used for any variable taking a `CacheLoader<K, V>`:\n\n```\npublic static <K, V> CacheLoader<K, V> from(Supplier<? extends V> supplier);\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1992",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1992/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1992/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1992/events",
    "html_url": "https://github.com/google/guava/issues/1992",
    "id": 60446235,
    "node_id": "MDU6SXNzdWU2MDQ0NjIzNQ==",
    "number": 1992,
    "title": "Resources.getResources() not finding resources on certain devices.",
    "user": {
      "login": "srutib",
      "id": 5317387,
      "node_id": "MDQ6VXNlcjUzMTczODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5317387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srutib",
      "html_url": "https://github.com/srutib",
      "followers_url": "https://api.github.com/users/srutib/followers",
      "following_url": "https://api.github.com/users/srutib/following{/other_user}",
      "gists_url": "https://api.github.com/users/srutib/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srutib/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srutib/subscriptions",
      "organizations_url": "https://api.github.com/users/srutib/orgs",
      "repos_url": "https://api.github.com/users/srutib/repos",
      "events_url": "https://api.github.com/users/srutib/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srutib/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-10T03:32:24Z",
    "updated_at": "2015-03-11T02:54:08Z",
    "closed_at": "2015-03-11T02:54:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an Android app for our team at work that in one of the source files, loads another source file by doing Resources.getResource(\"js/file.js\") where the folder 'js' is under the src/ directory.\n\nOn all devices below Android 5.0, this resource is found easily. However on certain devices of 5.0 (Lollipop) and above it says that the resource is not found. It throws an IllegalArgumentException in that case. I had to switch it to putting everything I need to access in the assets folder and use the Android libraries to fetch them.\n\nPlease fix this ASAP as we almost used this is production code and could be a major potential problem for future Android projects.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1990",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1990/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1990/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1990/events",
    "html_url": "https://github.com/google/guava/pull/1990",
    "id": 60209854,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA3MDM5MzY=",
    "number": 1990,
    "title": "Created a Changelog",
    "user": {
      "login": "silentmoose",
      "id": 11335792,
      "node_id": "MDQ6VXNlcjExMzM1Nzky",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11335792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silentmoose",
      "html_url": "https://github.com/silentmoose",
      "followers_url": "https://api.github.com/users/silentmoose/followers",
      "following_url": "https://api.github.com/users/silentmoose/following{/other_user}",
      "gists_url": "https://api.github.com/users/silentmoose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silentmoose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silentmoose/subscriptions",
      "organizations_url": "https://api.github.com/users/silentmoose/orgs",
      "repos_url": "https://api.github.com/users/silentmoose/repos",
      "events_url": "https://api.github.com/users/silentmoose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silentmoose/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-03-07T15:09:03Z",
    "updated_at": "2017-01-30T22:38:18Z",
    "closed_at": "2017-01-30T22:38:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1990",
      "html_url": "https://github.com/google/guava/pull/1990",
      "diff_url": "https://github.com/google/guava/pull/1990.diff",
      "patch_url": "https://github.com/google/guava/pull/1990.patch"
    },
    "body": "Created a CHANGELOG in the root directory. With proper formatting the app could also read from this file and view the changes within the app. Changelog should be updated with each pull accept. Also, as main developers release updates to the code other contributors will now be able to see the change in the changelog.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1987",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1987/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1987/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1987/events",
    "html_url": "https://github.com/google/guava/issues/1987",
    "id": 60006028,
    "node_id": "MDU6SXNzdWU2MDAwNjAyOA==",
    "number": 1987,
    "title": "Observable collections",
    "user": {
      "login": "beradrian",
      "id": 3028579,
      "node_id": "MDQ6VXNlcjMwMjg1Nzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3028579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beradrian",
      "html_url": "https://github.com/beradrian",
      "followers_url": "https://api.github.com/users/beradrian/followers",
      "following_url": "https://api.github.com/users/beradrian/following{/other_user}",
      "gists_url": "https://api.github.com/users/beradrian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beradrian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beradrian/subscriptions",
      "organizations_url": "https://api.github.com/users/beradrian/orgs",
      "repos_url": "https://api.github.com/users/beradrian/repos",
      "events_url": "https://api.github.com/users/beradrian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beradrian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-05T19:52:16Z",
    "updated_at": "2015-03-06T08:34:40Z",
    "closed_at": "2015-03-06T08:34:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Wouldn't be useful to have collections that can fire events every time an element is added or removed? I can contribute code for generic collections and lists.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1986",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1986/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1986/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1986/events",
    "html_url": "https://github.com/google/guava/issues/1986",
    "id": 59955251,
    "node_id": "MDU6SXNzdWU1OTk1NTI1MQ==",
    "number": 1986,
    "title": "Support collection tests of arbitrary sizes",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504641,
        "node_id": "MDU6TGFiZWwxNDM1MDQ2NDE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=testing",
        "name": "package=testing",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-05T14:02:13Z",
    "updated_at": "2017-10-10T08:23:14Z",
    "closed_at": "2017-10-09T16:34:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, guava-testlib only tests collections using ZERO(0), ONE(1), and SEVERAL(3) collection sizes. I have a collection implementation that switches its internal representation at 10 elements. I would like to use testlib to test my collection around that switching point, but I can't at the moment.\n\nIt would be great if one could specify arbitrary sizes to test collections with.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1985",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1985/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1985/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1985/events",
    "html_url": "https://github.com/google/guava/issues/1985",
    "id": 59788171,
    "node_id": "MDU6SXNzdWU1OTc4ODE3MQ==",
    "number": 1985,
    "title": "Add methods to Preconditions without varags - with 1 and 2 message parameters",
    "user": {
      "login": "ljubove",
      "id": 11311552,
      "node_id": "MDQ6VXNlcjExMzExNTUy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11311552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ljubove",
      "html_url": "https://github.com/ljubove",
      "followers_url": "https://api.github.com/users/ljubove/followers",
      "following_url": "https://api.github.com/users/ljubove/following{/other_user}",
      "gists_url": "https://api.github.com/users/ljubove/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ljubove/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ljubove/subscriptions",
      "organizations_url": "https://api.github.com/users/ljubove/orgs",
      "repos_url": "https://api.github.com/users/ljubove/repos",
      "events_url": "https://api.github.com/users/ljubove/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ljubove/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143507427,
        "node_id": "MDU6TGFiZWwxNDM1MDc0Mjc=",
        "url": "https://api.github.com/repos/google/guava/labels/type=performance",
        "name": "type=performance",
        "color": "f4d75f",
        "default": false,
        "description": "Related to performance"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-04T11:57:29Z",
    "updated_at": "2016-11-02T17:22:47Z",
    "closed_at": "2016-11-02T17:22:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it planned to add to Preconditions methods checkNotNull, checkState, checkArgument with 1 or 2 arguments for string template instead of using varargs only?\nfor example:\npublic static void checkState(boolean expression, String template, Object arg1) {\n        if(!expression) {\n            ...\n        }\n    }\nSo new Object[] will be created only if expression is false but not each time method is called.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1984",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1984/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1984/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1984/events",
    "html_url": "https://github.com/google/guava/pull/1984",
    "id": 59579420,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAzMzc3MDY=",
    "number": 1984,
    "title": "Add a weight() method to Cache",
    "user": {
      "login": "cheddar",
      "id": 216778,
      "node_id": "MDQ6VXNlcjIxNjc3OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/216778?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cheddar",
      "html_url": "https://github.com/cheddar",
      "followers_url": "https://api.github.com/users/cheddar/followers",
      "following_url": "https://api.github.com/users/cheddar/following{/other_user}",
      "gists_url": "https://api.github.com/users/cheddar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cheddar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cheddar/subscriptions",
      "organizations_url": "https://api.github.com/users/cheddar/orgs",
      "repos_url": "https://api.github.com/users/cheddar/repos",
      "events_url": "https://api.github.com/users/cheddar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cheddar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-03-03T01:05:37Z",
    "updated_at": "2017-01-09T20:04:52Z",
    "closed_at": "2017-01-09T20:04:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1984",
      "html_url": "https://github.com/google/guava/pull/1984",
      "diff_url": "https://github.com/google/guava/pull/1984.diff",
      "patch_url": "https://github.com/google/guava/pull/1984.patch"
    },
    "body": "Cache objects currently do not have a method of introspecting on the current \"weight\" value.  I am replacing an implementation of a cache that is just a synchronized LinkedHashMap.  In my current implementation of the cache, I'm keeping track of the weights of things being stored and exposing that as a metric about my cache.  This is the _only_ feature of my current implementation that is not covered by Guava's Cache.\n\nFrom looking at the code, it seemed relatively easy to just create another method parallel to `size()` to handle this case so I just went ahead and did it.  The guidelines do state that API changes should start as an issue, but I didn't realize that until I had already done this and it is such a simple fix, it doesn't bother me if it gets thrown away (as long as I do get some method of introspecting on the current weight value ;) ).\n\nI do realize that this is a public API change, it is only an addition, but it does mean that if anyone else is implementing the Cache interface from scratch, their code will have to be updated before it can work with this.  I'm not sure what level of API compatibility is maintained with Guava, but as long as people are only using Guava-built cache objects, it should be a forward-compatible change.\n\nAlso, I updated unit tests as I could find ones that seemed relevant, but I will admit that I didn't read and comprehend all tests, so I might've missed a good place to add some more verification of the weight computation.  Let me know if there are other tests to update and I'll be happy to.\n\nIf you think this is going to work, let me know and I'll make sure to get a CLA.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1983",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1983/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1983/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1983/events",
    "html_url": "https://github.com/google/guava/issues/1983",
    "id": 59500946,
    "node_id": "MDU6SXNzdWU1OTUwMDk0Ng==",
    "number": 1983,
    "title": "Ordering.onResultOf should respect nullsFirst/nullsLast",
    "user": {
      "login": "jkstrauss",
      "id": 9956588,
      "node_id": "MDQ6VXNlcjk5NTY1ODg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9956588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkstrauss",
      "html_url": "https://github.com/jkstrauss",
      "followers_url": "https://api.github.com/users/jkstrauss/followers",
      "following_url": "https://api.github.com/users/jkstrauss/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkstrauss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkstrauss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkstrauss/subscriptions",
      "organizations_url": "https://api.github.com/users/jkstrauss/orgs",
      "repos_url": "https://api.github.com/users/jkstrauss/repos",
      "events_url": "https://api.github.com/users/jkstrauss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkstrauss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-03-02T16:02:40Z",
    "updated_at": "2015-03-04T18:26:55Z",
    "closed_at": "2015-03-04T18:26:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When creating a Guava Ordering object using `onResultOf`, a `NullPointerException` in most situations where the function returns `null` even if the object in the collection is not. (This can only be prevented by writing a specialized comparator that checks for null or wrapping the comparator with a comparator that catches `NullPointerException`s, neither of which is optimal.)\n\nWould it be possible to have Guava respect `nullsFirst()`/`nullLast()` with regard to the result of `onResultOf` in addition to the actual object being sorted?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1982",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1982/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1982/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1982/events",
    "html_url": "https://github.com/google/guava/issues/1982",
    "id": 59239258,
    "node_id": "MDU6SXNzdWU1OTIzOTI1OA==",
    "number": 1982,
    "title": "AbstractScheduledService.Scheduler.newFixedDelaySchedule & AbstractScheduledService.Scheduler.newFixedRateSchedule should fail fast",
    "user": {
      "login": "ogregoire",
      "id": 666970,
      "node_id": "MDQ6VXNlcjY2Njk3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/666970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogregoire",
      "html_url": "https://github.com/ogregoire",
      "followers_url": "https://api.github.com/users/ogregoire/followers",
      "following_url": "https://api.github.com/users/ogregoire/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogregoire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogregoire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogregoire/subscriptions",
      "organizations_url": "https://api.github.com/users/ogregoire/orgs",
      "repos_url": "https://api.github.com/users/ogregoire/repos",
      "events_url": "https://api.github.com/users/ogregoire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogregoire/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-27T13:59:44Z",
    "updated_at": "2015-03-03T19:55:04Z",
    "closed_at": "2015-03-03T16:30:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Creating a Scheduler using the two existing factory methods doesn't fail fast as I've had this example of stack trace where I was extremely surprised to see none of my classes.\n\n```\njava.lang.IllegalArgumentException\n    at java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(ScheduledThreadPoolExecutor.java:589)\n    at java.util.concurrent.Executors$DelegatedScheduledExecutorService.scheduleWithFixedDelay(Executors.java:738)\n    at com.google.common.util.concurrent.WrappingScheduledExecutorService.scheduleWithFixedDelay(WrappingScheduledExecutorService.java:59)\n    at com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1.schedule(AbstractScheduledService.java:127)\n    at com.google.common.util.concurrent.AbstractScheduledService$1$3.run(AbstractScheduledService.java:201)\n    at com.google.common.util.concurrent.Callables$3.run(Callables.java:95)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nSo please add a quick fail to those factory methods so people can properly understand what exactly is going on and why it fails. \n\nMore comprehensively, the two factory methods should fail fast despite mentioning the  `ScheduledExecutorService.scheduleAtXxxxxRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)` note. I guess they should at least throw IllegalArgumentException like the delegated method does.\n\nHere is the code I used to find the issue and which left me pondering this for a long time.\n\n``` javascript\npublic class AbstractScheduledServiceFastFailTest {\n    @Test public void test() {\n        class MyService extends AbstractScheduledService {\n            int iteration = 1;\n            @Override protected void runOneIteration() { iteration++; }\n            @Override protected Scheduler scheduler() {\n                return Scheduler.newFixedDelaySchedule(0, 0, TimeUnit.MILLISECONDS);\n            }\n        }\n        MyService service = new MyService();\n        service.addListener(new Service.Listener() {\n            @Override\n            public void failed(Service.State from, Throwable failure) {\n                failure.printStackTrace(System.err);\n            }\n        }, MoreExecutors.directExecutor());\n        service.startAsync();\n        try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { }\n        Assert.assertNotEquals(1, service.iteration);\n        service.stopAsync();\n    }\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1981",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1981/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1981/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1981/events",
    "html_url": "https://github.com/google/guava/issues/1981",
    "id": 58598262,
    "node_id": "MDU6SXNzdWU1ODU5ODI2Mg==",
    "number": 1981,
    "title": "New ClassPathTest methods fail in open-source build",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507384,
        "node_id": "MDU6TGFiZWwxNDM1MDczODQ=",
        "url": "https://api.github.com/repos/google/guava/labels/package=reflect",
        "name": "package=reflect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "fluentfuture",
        "id": 3457808,
        "node_id": "MDQ6VXNlcjM0NTc4MDg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluentfuture",
        "html_url": "https://github.com/fluentfuture",
        "followers_url": "https://api.github.com/users/fluentfuture/followers",
        "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
        "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
        "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
        "repos_url": "https://api.github.com/users/fluentfuture/repos",
        "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2015-02-23T15:08:52Z",
    "updated_at": "2017-10-09T16:47:21Z",
    "closed_at": "2017-10-09T16:47:21Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Is this #1926 again? @cgdecker @fluentfuture @lukesandberg \n\nI won't paste the full failure log, but:\n\n```\ntestGetAllClasses(com.google.common.reflect.ClassPathTest): Not true that <[com.google.common.reflect.TypeToken$TypeSet, com.google.common.reflect.ClassPath$ResourceInfo, com.google.common.reflect.Types$ParameterizedTypeImpl, com.google.common.reflect.TypeToken$TypeCollector, com.google.common.reflect.TypeResolver$1, com.google.common.reflect.Types$TypeVariableInvocationHandler, com.google.common.reflect.Types$GenericArrayTypeImpl, com.google.common.reflect.Invokable$ConstructorInvokable, com.google.common.reflect.Invokable, com.google.common.reflect.ClassPath, com.google.common.reflect.Types$ClassOwnership$1, com.google.common.reflect.TypeToken$TypeFilter$1, com.google.common.reflect.TypeToken$TypeFilter$2, com.google.common.reflect.Types$ClassOwnership$3, com.google.common.reflect.ImmutableTypeToInstanceMap$1, com.google.common.reflect.Types$ClassOwnership$2, com.google.common.reflect.ImmutableTypeToInstanceMap$Builder, com.google.common.reflect.ClassPath$Scanner, com.google.common.reflect.TypeToken$InterfaceSet, com.google.common.reflect.TypeToken$SimpleTypeToken, com.google.common.reflect.TypeToken$ClassSet, com.google.common.reflect.Types$JavaVersion$2, com.google.common.reflect.TypeResolver$WildcardCapturer, com.google.common.reflect.Types$JavaVersion$1, com.google.common.reflect.Reflection, com.google.common.reflect.MutableTypeToInstanceMap$1, com.google.common.reflect.Types$JavaVersion$4, com.google.common.reflect.TypeToken$InterfaceSet$1, com.google.common.reflect.Types$JavaVersion$3, com.google.common.reflect.TypeToInstanceMap, com.google.common.reflect.AbstractInvocationHandler, com.google.common.reflect.Types, com.google.common.reflect.TypeResolver$TypeTable, com.google.common.reflect.MutableTypeToInstanceMap, com.google.common.reflect.Parameter, com.google.common.reflect.ClassPath$1, com.google.common.reflect.TypeToken$TypeFilter, com.google.common.reflect.TypeToken, com.google.common.reflect.Types$ClassOwnership, com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2, com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1, com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector, com.google.common.reflect.TypeToken$Bounds, com.google.common.reflect.ClassPath$ClassInfo, com.google.common.reflect.Invokable$MethodInvokable, com.google.common.reflect.package-info, com.google.common.reflect.Element, com.google.common.reflect.Types$TypeVariableImpl, com.google.common.reflect.TypeResolver$TypeTable$1, com.google.common.reflect.Types$NativeTypeVariableEquals, com.google.common.reflect.TypeVisitor, com.google.common.reflect.TypeCapture, com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry, com.google.common.reflect.TypeToken$3, com.google.common.reflect.TypeToken$4, com.google.common.reflect.TypeToken$1, com.google.common.reflect.Types$WildcardTypeImpl, com.google.common.reflect.TypeToken$2, com.google.common.reflect.TypeParameter, com.google.common.reflect.ImmutableTypeToInstanceMap, com.google.common.reflect.Types$JavaVersion, com.google.common.reflect.TypeResolver, com.google.common.reflect.TypeToken$TypeCollector$1, com.google.common.reflect.Types$2, com.google.common.reflect.Types$1, com.google.common.reflect.Types$ClassOwnership$1LocalClass, com.google.common.reflect.TypeResolver$TypeMappingIntrospector, com.google.common.reflect.TypeToken$TypeCollector$2, com.google.common.reflect.TypeToken$TypeCollector$3, com.google.common.reflect.TypeToken$TypeCollector$4, com.google.common.reflect.TypeResolver$TypeVariableKey]> contains all of <[com.google.common.reflect.ClassPathTest$1, com.google.common.reflect.ClassPathTest$1LocalClass, com.google.common.reflect.ClassPath, com.google.common.reflect.ClassPathTest]>. It is missing <[com.google.common.reflect.ClassPathTest$1, com.google.common.reflect.ClassPathTest$1LocalClass, com.google.common.reflect.ClassPathTest]>\ntestGetTopLevelClasses(com.google.common.reflect.ClassPathTest): Not true that <[com.google.common.reflect.ImmutableTypeToInstanceMap, com.google.common.reflect.TypeParameter, com.google.common.reflect.TypeResolver, com.google.common.reflect.Reflection, com.google.common.reflect.package-info, com.google.common.reflect.Element, com.google.common.reflect.TypeVisitor, com.google.common.reflect.TypeCapture, com.google.common.reflect.TypeToInstanceMap, com.google.common.reflect.AbstractInvocationHandler, com.google.common.reflect.Types, com.google.common.reflect.Invokable, com.google.common.reflect.MutableTypeToInstanceMap, com.google.common.reflect.ClassPath, com.google.common.reflect.Parameter, com.google.common.reflect.TypeToken]> contains all of <[com.google.common.reflect.ClassPath, com.google.common.reflect.ClassPathTest]>. It is missing <[com.google.common.reflect.ClassPathTest]>\ntestGetTopLevelClassesRecursive(com.google.common.reflect.ClassPathTest): Not true that <[interface com.google.common.reflect.package-info, class com.google.common.reflect.ImmutableTypeToInstanceMap, interface com.google.common.reflect.TypeToInstanceMap, class com.google.common.reflect.TypeCapture, class com.google.common.reflect.Reflection, class com.google.common.reflect.Element, class com.google.common.reflect.TypeParameter, class com.google.common.reflect.ClassPath, class com.google.common.reflect.Parameter, class com.google.common.reflect.TypeResolver, class com.google.common.reflect.TypeToken, class com.google.common.reflect.AbstractInvocationHandler, class com.google.common.reflect.MutableTypeToInstanceMap, class com.google.common.reflect.Types, class com.google.common.reflect.Invokable, class com.google.common.reflect.TypeVisitor]> contains all of <[class com.google.common.reflect.ClassPathTest, class com.google.common.reflect.subpackage.ClassInSubPackage]>. It is missing <[class com.google.common.reflect.ClassPathTest, class com.google.common.reflect.subpackage.ClassInSubPackage]>\ntestGetTopLevelClasses_diamond(com.google.common.reflect.ClassPathTest): failed to find class com.google.common.reflect.ClassPathTest\n```\n\nThe bottom line seems to be things like:\n\n```\nIt is missing <[com.google.common.reflect.ClassPathTest]>\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1980",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1980/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1980/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1980/events",
    "html_url": "https://github.com/google/guava/issues/1980",
    "id": 58476900,
    "node_id": "MDU6SXNzdWU1ODQ3NjkwMA==",
    "number": 1980,
    "title": "Can different Cache eviction strategies be combined?",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-21T22:01:28Z",
    "updated_at": "2015-02-28T19:02:21Z",
    "closed_at": "2015-02-27T14:27:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Just making sure, is it documented somewhere whether for time based and size based eviction can be combined? Or are they mutual exclusive? So far, I haven't found anything saying whether it should be possible or not, but maybe I've just missed it?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1979",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1979/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1979/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1979/events",
    "html_url": "https://github.com/google/guava/pull/1979",
    "id": 58461259,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk3NTQzNDM=",
    "number": 1979,
    "title": "Builder to create ThreadPoolExecutor and ScheduledThreadPoolExecutor",
    "user": {
      "login": "yanglifan",
      "id": 11075372,
      "node_id": "MDQ6VXNlcjExMDc1Mzcy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11075372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yanglifan",
      "html_url": "https://github.com/yanglifan",
      "followers_url": "https://api.github.com/users/yanglifan/followers",
      "following_url": "https://api.github.com/users/yanglifan/following{/other_user}",
      "gists_url": "https://api.github.com/users/yanglifan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yanglifan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yanglifan/subscriptions",
      "organizations_url": "https://api.github.com/users/yanglifan/orgs",
      "repos_url": "https://api.github.com/users/yanglifan/repos",
      "events_url": "https://api.github.com/users/yanglifan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yanglifan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-21T14:34:58Z",
    "updated_at": "2017-01-09T20:04:51Z",
    "closed_at": "2017-01-09T20:04:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1979",
      "html_url": "https://github.com/google/guava/pull/1979",
      "diff_url": "https://github.com/google/guava/pull/1979.diff",
      "patch_url": "https://github.com/google/guava/pull/1979.patch"
    },
    "body": "JDK `Executors` provides several tool methods to create `ThreadPoolExecutor` and `ScheduledThreadPoolExecutor`. But these methods are not flexible. But if build up `ThreadPoolExecutor` and `ScheduledThreadPoolExecutor` from nothing, it will be a little complex. \n\nApache Camel has a `ThreadPoolBuilder` but it is complex since bind with `CamelContext`.\n\nSo I create a simple builder to create `ThreadPoolExecutor` and `ScheduledThreadPoolExecutor`.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1978",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1978/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1978/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1978/events",
    "html_url": "https://github.com/google/guava/issues/1978",
    "id": 58291861,
    "node_id": "MDU6SXNzdWU1ODI5MTg2MQ==",
    "number": 1978,
    "title": " Present.or should \"short circuit\"",
    "user": {
      "login": "yhartanto",
      "id": 8889488,
      "node_id": "MDQ6VXNlcjg4ODk0ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8889488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yhartanto",
      "html_url": "https://github.com/yhartanto",
      "followers_url": "https://api.github.com/users/yhartanto/followers",
      "following_url": "https://api.github.com/users/yhartanto/following{/other_user}",
      "gists_url": "https://api.github.com/users/yhartanto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yhartanto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yhartanto/subscriptions",
      "organizations_url": "https://api.github.com/users/yhartanto/orgs",
      "repos_url": "https://api.github.com/users/yhartanto/repos",
      "events_url": "https://api.github.com/users/yhartanto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yhartanto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-20T00:12:25Z",
    "updated_at": "2015-02-21T21:37:26Z",
    "closed_at": "2015-02-21T21:37:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently Present.or(argument) does null check on argument causing it not to \"short circuit\" the or. So if a.or(b()) is called, b() will always be executed even though a isPresent(). This is not consistent to Java's standard or operator.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1977",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1977/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1977/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1977/events",
    "html_url": "https://github.com/google/guava/issues/1977",
    "id": 58226358,
    "node_id": "MDU6SXNzdWU1ODIyNjM1OA==",
    "number": 1977,
    "title": "Possible deadlock in ImmutableList ",
    "user": {
      "login": "kronar",
      "id": 399832,
      "node_id": "MDQ6VXNlcjM5OTgzMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/399832?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kronar",
      "html_url": "https://github.com/kronar",
      "followers_url": "https://api.github.com/users/kronar/followers",
      "following_url": "https://api.github.com/users/kronar/following{/other_user}",
      "gists_url": "https://api.github.com/users/kronar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kronar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kronar/subscriptions",
      "organizations_url": "https://api.github.com/users/kronar/orgs",
      "repos_url": "https://api.github.com/users/kronar/repos",
      "events_url": "https://api.github.com/users/kronar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kronar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 5,
    "created_at": "2015-02-19T15:54:48Z",
    "updated_at": "2015-10-08T19:14:23Z",
    "closed_at": "2015-06-23T04:42:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "ImmutableList contains following code since version 15.0\n\n private static final ImmutableList<Object> EMPTY =\n      new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1974",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1974/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1974/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1974/events",
    "html_url": "https://github.com/google/guava/issues/1974",
    "id": 57613573,
    "node_id": "MDU6SXNzdWU1NzYxMzU3Mw==",
    "number": 1974,
    "title": "Allow greater access to the SmoothBursty rate limiter",
    "user": {
      "login": "wjam",
      "id": 3914751,
      "node_id": "MDQ6VXNlcjM5MTQ3NTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3914751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wjam",
      "html_url": "https://github.com/wjam",
      "followers_url": "https://api.github.com/users/wjam/followers",
      "following_url": "https://api.github.com/users/wjam/following{/other_user}",
      "gists_url": "https://api.github.com/users/wjam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wjam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wjam/subscriptions",
      "organizations_url": "https://api.github.com/users/wjam/orgs",
      "repos_url": "https://api.github.com/users/wjam/repos",
      "events_url": "https://api.github.com/users/wjam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wjam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-02-13T15:42:04Z",
    "updated_at": "2019-07-24T17:50:15Z",
    "closed_at": "2019-07-24T17:50:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Create a method, such as `create(permitsPerSecond, maxBurst, timeUnit)` so that the full functionality of the `SmoothBursty` class can be utilised.\n\n**Use case**\nUse a `RateLimiter` when the rate is applied on a wider timescale than just a single second. An example of this would be the GitHub API which has a rate limit of 5,000 per hour.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1973",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1973/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1973/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1973/events",
    "html_url": "https://github.com/google/guava/issues/1973",
    "id": 57596309,
    "node_id": "MDU6SXNzdWU1NzU5NjMwOQ==",
    "number": 1973,
    "title": "Javadoc of HashBiMap#containsValue #inverse",
    "user": {
      "login": "Louis-Cyphre",
      "id": 8995585,
      "node_id": "MDQ6VXNlcjg5OTU1ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8995585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Louis-Cyphre",
      "html_url": "https://github.com/Louis-Cyphre",
      "followers_url": "https://api.github.com/users/Louis-Cyphre/followers",
      "following_url": "https://api.github.com/users/Louis-Cyphre/following{/other_user}",
      "gists_url": "https://api.github.com/users/Louis-Cyphre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Louis-Cyphre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Louis-Cyphre/subscriptions",
      "organizations_url": "https://api.github.com/users/Louis-Cyphre/orgs",
      "repos_url": "https://api.github.com/users/Louis-Cyphre/repos",
      "events_url": "https://api.github.com/users/Louis-Cyphre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Louis-Cyphre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-13T13:05:00Z",
    "updated_at": "2019-08-16T17:24:22Z",
    "closed_at": "2019-08-16T17:24:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The inherited doc should be overridden and mentioned that containsValue works in O(1) time in contrast to O(N) with a normal HashMap.\n\nThe javadoc for #inverse should mention that it always returns the same Inverse instance and thus saving the Inverse as a separate instance variable is not mandatory to reduce overhead.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1972",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1972/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1972/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1972/events",
    "html_url": "https://github.com/google/guava/pull/1972",
    "id": 57447158,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkxNzA1NTA=",
    "number": 1972,
    "title": "google code conventions",
    "user": {
      "login": "rpau",
      "id": 1483433,
      "node_id": "MDQ6VXNlcjE0ODM0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1483433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rpau",
      "html_url": "https://github.com/rpau",
      "followers_url": "https://api.github.com/users/rpau/followers",
      "following_url": "https://api.github.com/users/rpau/following{/other_user}",
      "gists_url": "https://api.github.com/users/rpau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rpau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rpau/subscriptions",
      "organizations_url": "https://api.github.com/users/rpau/orgs",
      "repos_url": "https://api.github.com/users/rpau/repos",
      "events_url": "https://api.github.com/users/rpau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rpau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-12T11:16:06Z",
    "updated_at": "2015-02-12T19:14:47Z",
    "closed_at": "2015-02-12T19:14:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1972",
      "html_url": "https://github.com/google/guava/pull/1972",
      "diff_url": "https://github.com/google/guava/pull/1972.diff",
      "patch_url": "https://github.com/google/guava/pull/1972.patch"
    },
    "body": "Thi is an updated version with the CLA email that updates the whole codebase with the eclipse formatter that Google provides.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1971",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1971/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1971/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1971/events",
    "html_url": "https://github.com/google/guava/pull/1971",
    "id": 57444587,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkxNjg4OTQ=",
    "number": 1971,
    "title": "google code conventions",
    "user": {
      "login": "rpau",
      "id": 1483433,
      "node_id": "MDQ6VXNlcjE0ODM0MzM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1483433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rpau",
      "html_url": "https://github.com/rpau",
      "followers_url": "https://api.github.com/users/rpau/followers",
      "following_url": "https://api.github.com/users/rpau/following{/other_user}",
      "gists_url": "https://api.github.com/users/rpau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rpau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rpau/subscriptions",
      "organizations_url": "https://api.github.com/users/rpau/orgs",
      "repos_url": "https://api.github.com/users/rpau/repos",
      "events_url": "https://api.github.com/users/rpau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rpau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-02-12T10:50:14Z",
    "updated_at": "2015-02-12T20:58:33Z",
    "closed_at": "2015-02-12T19:12:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1971",
      "html_url": "https://github.com/google/guava/pull/1971",
      "diff_url": "https://github.com/google/guava/pull/1971.diff",
      "patch_url": "https://github.com/google/guava/pull/1971.patch"
    },
    "body": "Hi,\n\nI have applied the eclipse formatter using the Google configuration for Java projects available at https://code.google.com/p/google-styleguide/source/browse/trunk/eclipse-java-google-style.xml\nIs there another formatter configuration for this project?\n\nThanks!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1970",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1970/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1970/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1970/events",
    "html_url": "https://github.com/google/guava/pull/1970",
    "id": 57326141,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkwOTY5MzU=",
    "number": 1970,
    "title": "Jdk5 backport v17.0 compatibility",
    "user": {
      "login": "paulduffin",
      "id": 4938819,
      "node_id": "MDQ6VXNlcjQ5Mzg4MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4938819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulduffin",
      "html_url": "https://github.com/paulduffin",
      "followers_url": "https://api.github.com/users/paulduffin/followers",
      "following_url": "https://api.github.com/users/paulduffin/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulduffin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulduffin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulduffin/subscriptions",
      "organizations_url": "https://api.github.com/users/paulduffin/orgs",
      "repos_url": "https://api.github.com/users/paulduffin/repos",
      "events_url": "https://api.github.com/users/paulduffin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulduffin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-11T14:58:21Z",
    "updated_at": "2015-02-12T19:03:20Z",
    "closed_at": "2015-02-12T18:44:28Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1970",
      "html_url": "https://github.com/google/guava/pull/1970",
      "diff_url": "https://github.com/google/guava/pull/1970.diff",
      "patch_url": "https://github.com/google/guava/pull/1970.patch"
    },
    "body": "Reverts (at least in part) a number of changes made to jdk5-backport-v17.0-post to make it more compatible with code built against jdk5-backport-v14.0.1-post, specifically AOSP code. The reverted changes added back methods that had been present in v14 (deprecated and not) and since been removed. The intent is to allow AOSP code that built against v14.0.1 to also build against the compatibility version of v17.0 without modification (or with minimal atomic modifications). That will make upgrading itself easier and will allow other changes such as removing usages of deprecated methods to be done in stages.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1969",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1969/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1969/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1969/events",
    "html_url": "https://github.com/google/guava/pull/1969",
    "id": 57324668,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkwOTYwNjk=",
    "number": 1969,
    "title": "Jdk5 backport v17.0 compatibility",
    "user": {
      "login": "paulduffin",
      "id": 4938819,
      "node_id": "MDQ6VXNlcjQ5Mzg4MTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4938819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulduffin",
      "html_url": "https://github.com/paulduffin",
      "followers_url": "https://api.github.com/users/paulduffin/followers",
      "following_url": "https://api.github.com/users/paulduffin/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulduffin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulduffin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulduffin/subscriptions",
      "organizations_url": "https://api.github.com/users/paulduffin/orgs",
      "repos_url": "https://api.github.com/users/paulduffin/repos",
      "events_url": "https://api.github.com/users/paulduffin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulduffin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-11T14:48:10Z",
    "updated_at": "2015-02-12T19:03:20Z",
    "closed_at": "2015-02-11T14:49:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1969",
      "html_url": "https://github.com/google/guava/pull/1969",
      "diff_url": "https://github.com/google/guava/pull/1969.diff",
      "patch_url": "https://github.com/google/guava/pull/1969.patch"
    },
    "body": "Reverts (at least in part) a number of changes made to jdk5-backport-v17.0-post to make it more compatible with code built against jdk5-backport-v14.0.1-post, specifically AOSP code. The reverted changes added back methods that had been present in v14 (deprecated and not) and since been removed. The intent is to allow AOSP code that built against v14.0.1 to also build against the compatibility version of v17.0 without modification (or with minimal atomic modifications). That will make upgrading itself easier and will allow other changes such as removing usages of deprecated methods to be done in stages.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1968",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1968/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1968/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1968/events",
    "html_url": "https://github.com/google/guava/issues/1968",
    "id": 57094359,
    "node_id": "MDU6SXNzdWU1NzA5NDM1OQ==",
    "number": 1968,
    "title": "Functions.forMap should accept Map<? extends K, ? extends V>, like Collections.unmodifiableMap",
    "user": {
      "login": "fleaflicker",
      "id": 682081,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjY4MjA4MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/682081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fleaflicker",
      "html_url": "https://github.com/fleaflicker",
      "followers_url": "https://api.github.com/users/fleaflicker/followers",
      "following_url": "https://api.github.com/users/fleaflicker/following{/other_user}",
      "gists_url": "https://api.github.com/users/fleaflicker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fleaflicker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fleaflicker/subscriptions",
      "organizations_url": "https://api.github.com/users/fleaflicker/orgs",
      "repos_url": "https://api.github.com/users/fleaflicker/repos",
      "events_url": "https://api.github.com/users/fleaflicker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fleaflicker/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-09T21:42:48Z",
    "updated_at": "2015-02-09T22:33:28Z",
    "closed_at": "2015-02-09T22:18:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The function returned by Functions.forMap is like a limited read-only map. So it should be able to accept more inputs.\n\nThis is similar to `java.util.Collections.unmodifiableMap`, which has the following signature:\n\n`public static <K,V> Map<K,V> unmodifiableMap(Map<? extends K, ? extends V> m)`\n\nFor example, the following is only possible by wrapping the input map:\n\n``` java\nMap<Integer,String> map = ...;\nFunction<Number,CharSequence> f = \n    Functions.forMap(Collections.<Number,CharSequence>unmodifiableMap(map));\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1967",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1967/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1967/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1967/events",
    "html_url": "https://github.com/google/guava/issues/1967",
    "id": 56981314,
    "node_id": "MDU6SXNzdWU1Njk4MTMxNA==",
    "number": 1967,
    "title": "Android issue",
    "user": {
      "login": "santosh2015",
      "id": 10915565,
      "node_id": "MDQ6VXNlcjEwOTE1NTY1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10915565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/santosh2015",
      "html_url": "https://github.com/santosh2015",
      "followers_url": "https://api.github.com/users/santosh2015/followers",
      "following_url": "https://api.github.com/users/santosh2015/following{/other_user}",
      "gists_url": "https://api.github.com/users/santosh2015/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/santosh2015/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/santosh2015/subscriptions",
      "organizations_url": "https://api.github.com/users/santosh2015/orgs",
      "repos_url": "https://api.github.com/users/santosh2015/repos",
      "events_url": "https://api.github.com/users/santosh2015/events{/privacy}",
      "received_events_url": "https://api.github.com/users/santosh2015/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-09T02:21:31Z",
    "updated_at": "2015-02-09T02:26:09Z",
    "closed_at": "2015-02-09T02:26:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n   We are trying to use the library on Android for TimedEviction. The items in the cache are expiring as soon as we overwrite an existing item.\n\nWe are building the cache as follows,\n\n private Cache<BluetoothDevice, Integer> rssiMap;\n\nRemovalListener<BluetoothDevice, Integer> removalListener = new RemovalListener<BluetoothDevice, Integer>() {  \n        @Override\n        public void onRemoval(RemovalNotification<BluetoothDevice, Integer> removal) {\n\n```\n    }\n    };\n\n    rssiMap = CacheBuilder.newBuilder()\n               .expireAfterWrite(1, TimeUnit.MINUTES)\n               .removalListener(removalListener)\n               .build();\n```\n\n   rssiMap.put(device, rssi);\n\nIs there something wrong we are doing with the code or is this a know issue. \n\nThanks\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1965",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1965/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1965/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1965/events",
    "html_url": "https://github.com/google/guava/issues/1965",
    "id": 56803568,
    "node_id": "MDU6SXNzdWU1NjgwMzU2OA==",
    "number": 1965,
    "title": "Add Maps.asMap and toMap overloads that don't take a transform function",
    "user": {
      "login": "bacar",
      "id": 3057510,
      "node_id": "MDQ6VXNlcjMwNTc1MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3057510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bacar",
      "html_url": "https://github.com/bacar",
      "followers_url": "https://api.github.com/users/bacar/followers",
      "following_url": "https://api.github.com/users/bacar/following{/other_user}",
      "gists_url": "https://api.github.com/users/bacar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bacar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bacar/subscriptions",
      "organizations_url": "https://api.github.com/users/bacar/orgs",
      "repos_url": "https://api.github.com/users/bacar/repos",
      "events_url": "https://api.github.com/users/bacar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bacar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-02-06T11:57:28Z",
    "updated_at": "2015-02-06T21:29:21Z",
    "closed_at": "2015-02-06T17:26:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "...and assume the identify function.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1964",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1964/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1964/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1964/events",
    "html_url": "https://github.com/google/guava/issues/1964",
    "id": 56803270,
    "node_id": "MDU6SXNzdWU1NjgwMzI3MA==",
    "number": 1964,
    "title": "De-@Beta Splitter.withKeyValueSeparator",
    "user": {
      "login": "bacar",
      "id": 3057510,
      "node_id": "MDQ6VXNlcjMwNTc1MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3057510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bacar",
      "html_url": "https://github.com/bacar",
      "followers_url": "https://api.github.com/users/bacar/followers",
      "following_url": "https://api.github.com/users/bacar/following{/other_user}",
      "gists_url": "https://api.github.com/users/bacar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bacar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bacar/subscriptions",
      "organizations_url": "https://api.github.com/users/bacar/orgs",
      "repos_url": "https://api.github.com/users/bacar/repos",
      "events_url": "https://api.github.com/users/bacar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bacar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-06T11:54:18Z",
    "updated_at": "2015-04-09T17:45:17Z",
    "closed_at": "2015-04-09T17:45:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Any plans to take this out of beta?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1963",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1963/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1963/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1963/events",
    "html_url": "https://github.com/google/guava/issues/1963",
    "id": 56803198,
    "node_id": "MDU6SXNzdWU1NjgwMzE5OA==",
    "number": 1963,
    "title": "De-@Beta Maps.asMap and toMap",
    "user": {
      "login": "bacar",
      "id": 3057510,
      "node_id": "MDQ6VXNlcjMwNTc1MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3057510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bacar",
      "html_url": "https://github.com/bacar",
      "followers_url": "https://api.github.com/users/bacar/followers",
      "following_url": "https://api.github.com/users/bacar/following{/other_user}",
      "gists_url": "https://api.github.com/users/bacar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bacar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bacar/subscriptions",
      "organizations_url": "https://api.github.com/users/bacar/orgs",
      "repos_url": "https://api.github.com/users/bacar/repos",
      "events_url": "https://api.github.com/users/bacar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bacar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2015-02-06T11:53:26Z",
    "updated_at": "2015-03-12T21:46:56Z",
    "closed_at": "2015-03-12T21:46:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would be keen to use these in non-`@Beta`. Are there any plans?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1962",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1962/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1962/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1962/events",
    "html_url": "https://github.com/google/guava/issues/1962",
    "id": 56552301,
    "node_id": "MDU6SXNzdWU1NjU1MjMwMQ==",
    "number": 1962,
    "title": ".technology needs to be added under TLD",
    "user": {
      "login": "venuag",
      "id": 10851872,
      "node_id": "MDQ6VXNlcjEwODUxODcy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10851872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/venuag",
      "html_url": "https://github.com/venuag",
      "followers_url": "https://api.github.com/users/venuag/followers",
      "following_url": "https://api.github.com/users/venuag/following{/other_user}",
      "gists_url": "https://api.github.com/users/venuag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/venuag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/venuag/subscriptions",
      "organizations_url": "https://api.github.com/users/venuag/orgs",
      "repos_url": "https://api.github.com/users/venuag/repos",
      "events_url": "https://api.github.com/users/venuag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/venuag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 1,
    "created_at": "2015-02-04T16:43:15Z",
    "updated_at": "2015-02-04T17:34:45Z",
    "closed_at": "2015-02-04T17:34:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1961",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1961/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1961/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1961/events",
    "html_url": "https://github.com/google/guava/issues/1961",
    "id": 56298285,
    "node_id": "MDU6SXNzdWU1NjI5ODI4NQ==",
    "number": 1961,
    "title": "Make immediateFailedFuture and immediateCancelledFuture return a TrustedFuture?",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/17",
      "html_url": "https://github.com/google/guava/milestone/17",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/17/labels",
      "id": 1313983,
      "node_id": "MDk6TWlsZXN0b25lMTMxMzk4Mw==",
      "number": 17,
      "title": "20.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 36,
      "state": "closed",
      "created_at": "2015-09-18T19:55:48Z",
      "updated_at": "2017-09-12T19:44:04Z",
      "due_on": null,
      "closed_at": "2016-10-28T21:21:39Z"
    },
    "comments": 2,
    "created_at": "2015-02-02T21:48:58Z",
    "updated_at": "2016-03-14T13:52:57Z",
    "closed_at": "2016-03-14T13:52:57Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "On the theory that most things should be a `TrustedFuture` :)\n\nWe would probably skip `immediateFuture` because there's little to optimize there: We'd basically be replacing one field access with another.\n\nBut why not do `immediateFuture` anyway? `TrustedFuture` is a bit larger than `immediateFuture`, since it stores listeners and waiters (\"would increase the size of the immediateFuture implementations by a least 8 bytes a piece (+ padding),\" per Luke).\n\nWe care about that less with failed and cancelled futures, since they have large `Exception` objects associated with them already.\n\nAlternatively, we could special-case `ImmediateFuture` in the same way that we special-case `TrustedFuture` -- either with a separate `instanceof` branch or with an interface. Then we could do all the whole `immediate*Future` family with no cost... unless the branch/interface has a performance cost.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1960",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1960/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1960/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1960/events",
    "html_url": "https://github.com/google/guava/issues/1960",
    "id": 56284246,
    "node_id": "MDU6SXNzdWU1NjI4NDI0Ng==",
    "number": 1960,
    "title": "ImmutableList.iterator() shouldn't retain a reference to the ImmutableList",
    "user": {
      "login": "dbentley",
      "id": 159980,
      "node_id": "MDQ6VXNlcjE1OTk4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/159980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbentley",
      "html_url": "https://github.com/dbentley",
      "followers_url": "https://api.github.com/users/dbentley/followers",
      "following_url": "https://api.github.com/users/dbentley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbentley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbentley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbentley/subscriptions",
      "organizations_url": "https://api.github.com/users/dbentley/orgs",
      "repos_url": "https://api.github.com/users/dbentley/repos",
      "events_url": "https://api.github.com/users/dbentley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbentley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143507427,
        "node_id": "MDU6TGFiZWwxNDM1MDc0Mjc=",
        "url": "https://api.github.com/repos/google/guava/labels/type=performance",
        "name": "type=performance",
        "color": "f4d75f",
        "default": false,
        "description": "Related to performance"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-02-02T19:52:02Z",
    "updated_at": "2019-07-31T15:56:31Z",
    "closed_at": "2019-07-31T15:56:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is a feature request where the cost may far outweigh the benefit, and I understand that, but I ran into it and think it would be right in principle, if difficult in practice.\n\nConsider the following code:\n\nIterator<Bar> deserialize(DatabaseConnection conn) {\n  return Iterators.transform(conn.fetch(), new Function<Foo, Bar>() {\n    @override public Bar apply(Foo foo) {\n      Bar.deserialize(foo);\n    }});\n}\n\nContext:\n1) conn.fetch() returns an ImmutableList<Foo>\n2) Foo is the serialized form (perhaps a protobuf) of a record, and Bar is the POJO form.\n3) A Foo is smaller than a Bar, so you can keep ImmutableList<Foo> in memory, but you can't keep an ImmutableList<Foo> in memory while you operate on each Bar.\n\nThe result is that, instead, we copy the ImmutableList into an array and then create an Iterator that in each call to next() nulls out that slot in the array.\n\nIt would be awesome if ImmutableList's Iterator allowed earlier elements in the list to be garbage.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1959",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1959/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1959/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1959/events",
    "html_url": "https://github.com/google/guava/issues/1959",
    "id": 55997430,
    "node_id": "MDU6SXNzdWU1NTk5NzQzMA==",
    "number": 1959,
    "title": "EventBus does not like generic events",
    "user": {
      "login": "thomasnield",
      "id": 7420801,
      "node_id": "MDQ6VXNlcjc0MjA4MDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7420801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasnield",
      "html_url": "https://github.com/thomasnield",
      "followers_url": "https://api.github.com/users/thomasnield/followers",
      "following_url": "https://api.github.com/users/thomasnield/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasnield/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasnield/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasnield/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasnield/orgs",
      "repos_url": "https://api.github.com/users/thomasnield/repos",
      "events_url": "https://api.github.com/users/thomasnield/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasnield/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-30T05:51:05Z",
    "updated_at": "2019-07-24T17:57:42Z",
    "closed_at": "2019-07-24T17:57:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I utilize generic methods that infer an event type off a generic, and pass it as a parameter in a @Subscribe method inside an anonymous object, it seems to break the EventBus. It no longer is able to distinguish event types resulting in class casting errors. Reflection issue maybe?\n\nhttp://stackoverflow.com/questions/28229374/passing-generic-event-to-guava-eventbus?noredirect=1#comment44821654_28229374\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1958",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1958/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1958/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1958/events",
    "html_url": "https://github.com/google/guava/issues/1958",
    "id": 55965815,
    "node_id": "MDU6SXNzdWU1NTk2NTgxNQ==",
    "number": 1958,
    "title": "Do we need an onCancelled method for setFuture(cancelledFuture) to invoke?",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-29T22:18:33Z",
    "updated_at": "2015-03-25T16:11:04Z",
    "closed_at": "2015-03-25T16:11:04Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "(Not a high priority, just something I realized recently.)\n\n`myFuture.setFuture(cancelledFuture);`\n\nThis causes `myFuture` to be cancelled. But under the current `AbstractFuture` implementation, the cancellation doesn't invoke `myFuture.cancel`.\n\nThat seems fine on the face of it, but it got me thinking: Don't we rely on `myFuture.cancel` for cleanup in some cases? Investigating, I found that the only classes that both call `setFuture` and override `cancel` are those in `Futures`. (Hopefully I got my search right. The results sound sane enough.) Here's my analysis:\n- `FallbackFuture`: `cancel` merely cancels the original `Future`, which is unnecessary in all the cases that we call `setFuture` (namely, cases in which the original `Future` is already done and, specifically, has failed)\n- `TimeoutFuture`: `cancel` (a) cancels the input `Future` and (b) cancels the timeout timer. But no worries: We don't call `setFuture` until the input `Future` is done, and at that point, we don't need to do (a), and we also take care of doing (b) manually.\n- `ChainingListenableFuture`: `cancel` cancels only the _original_ `Future`. If we've called `setFuture`, though, that means that the original `Future` is already done, so the cancellation would be a no-op.\n\nWhat does this mean for adding `onCancel`? Mainly, it doesn't appear to be necessary at present: Things already seem to work right. The most I see is an opportunity for code reuse. But I also see that many of our cancel/done methods call many of our other cancel/done methods, and any change has the chance to introduce infinite loops, unexpected nulling out of fields, and other problems. Our tests might catch these (we hope), but I point it out also to say that the change here likely wouldn't be trivial.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1955",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1955/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1955/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1955/events",
    "html_url": "https://github.com/google/guava/issues/1955",
    "id": 55906882,
    "node_id": "MDU6SXNzdWU1NTkwNjg4Mg==",
    "number": 1955,
    "title": "InternetDomainName toString() method unexpected behavior",
    "user": {
      "login": "ffr4nz",
      "id": 1634830,
      "node_id": "MDQ6VXNlcjE2MzQ4MzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1634830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ffr4nz",
      "html_url": "https://github.com/ffr4nz",
      "followers_url": "https://api.github.com/users/ffr4nz/followers",
      "following_url": "https://api.github.com/users/ffr4nz/following{/other_user}",
      "gists_url": "https://api.github.com/users/ffr4nz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ffr4nz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ffr4nz/subscriptions",
      "organizations_url": "https://api.github.com/users/ffr4nz/orgs",
      "repos_url": "https://api.github.com/users/ffr4nz/repos",
      "events_url": "https://api.github.com/users/ffr4nz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ffr4nz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143534295,
        "node_id": "MDU6TGFiZWwxNDM1MzQyOTU=",
        "url": "https://api.github.com/repos/google/guava/labels/status=obsolete",
        "name": "status=obsolete",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-01-29T14:41:43Z",
    "updated_at": "2017-02-16T22:42:37Z",
    "closed_at": "2015-03-05T23:56:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": ".toString() method returns  \"InternetDomainName{name=**domainORtldORwhatever**}\" Should not simply return the **domainORtldORwhatever**?\n\nExample code:\n\nInternetDomainName owner = InternetDomainName.from(\"www.elmundo.es\").topPrivateDomain();\nSystem.out.println(owner.toString());\n\nPrint:\n\nInternetDomainName{name=elmundo.es}\n\nWhat I expect is:\n\nelmundo.es\n\nIs it an error? is it an expected behavior?\n\nI'm using: \n\n<dependency>\n    <groupId>com.google.guava</groupId>\n    <artifactId>guava</artifactId>\n    <version>18.0</version>\n</dependency>\n\nThanks!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1954",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1954/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1954/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1954/events",
    "html_url": "https://github.com/google/guava/issues/1954",
    "id": 55906571,
    "node_id": "MDU6SXNzdWU1NTkwNjU3MQ==",
    "number": 1954,
    "title": "Library size and Android",
    "user": {
      "login": "hamidp",
      "id": 308864,
      "node_id": "MDQ6VXNlcjMwODg2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/308864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamidp",
      "html_url": "https://github.com/hamidp",
      "followers_url": "https://api.github.com/users/hamidp/followers",
      "following_url": "https://api.github.com/users/hamidp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamidp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamidp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamidp/subscriptions",
      "organizations_url": "https://api.github.com/users/hamidp/orgs",
      "repos_url": "https://api.github.com/users/hamidp/repos",
      "events_url": "https://api.github.com/users/hamidp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamidp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2015-01-29T14:39:18Z",
    "updated_at": "2019-05-13T19:25:17Z",
    "closed_at": "2019-05-13T19:25:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is not really a feature request, nor a bug report, but more of a request for comments.\n\nI'm sure that everyone is well aware that using Guava on Android is challenging due to the size of the library. Resolving this problem by splitting up Guava into components is a massive endeavor, and something that the team may not be willing to do.\n\nGiven this, can we get clarification on the status of making Guava easier to use on Android? Is it considered a non-issue due to Proguard? Is it something being considered for future releases? If so, which release?\n\nThank you.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1953",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1953/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1953/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1953/events",
    "html_url": "https://github.com/google/guava/issues/1953",
    "id": 55813898,
    "node_id": "MDU6SXNzdWU1NTgxMzg5OA==",
    "number": 1953,
    "title": "Error running project",
    "user": {
      "login": "YuriHeupa",
      "id": 4031091,
      "node_id": "MDQ6VXNlcjQwMzEwOTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4031091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YuriHeupa",
      "html_url": "https://github.com/YuriHeupa",
      "followers_url": "https://api.github.com/users/YuriHeupa/followers",
      "following_url": "https://api.github.com/users/YuriHeupa/following{/other_user}",
      "gists_url": "https://api.github.com/users/YuriHeupa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YuriHeupa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YuriHeupa/subscriptions",
      "organizations_url": "https://api.github.com/users/YuriHeupa/orgs",
      "repos_url": "https://api.github.com/users/YuriHeupa/repos",
      "events_url": "https://api.github.com/users/YuriHeupa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YuriHeupa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-28T20:54:31Z",
    "updated_at": "2015-01-28T21:04:40Z",
    "closed_at": "2015-01-28T21:04:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Error:Execution failed for task ':app:dexDebug'.\n\n> com.android.ide.common.internal.LoggedErrorException: Failed to run command:\n>     /Android SDK/build-tools/21.1.2/dx --dex --no-optimize --output app/build/intermediates/dex/debug --input-list=app/build/intermediates/tmp/dex/debug/inputList.txt\n>   Error Code:\n>     2\n>   Output:\n>     UNEXPECTED TOP-LEVEL EXCEPTION:\n>     com.android.dex.DexException: Multiple dex files define Lcom/google/common/base/Function;\n>         at com.android.dx.merge.DexMerger.readSortableTypes(DexMerger.java:596)\n>         at com.android.dx.merge.DexMerger.getSortedTypes(DexMerger.java:554)\n>         at com.android.dx.merge.DexMerger.mergeClassDefs(DexMerger.java:535)\n>         at com.android.dx.merge.DexMerger.mergeDexes(DexMerger.java:171)\n>         at com.android.dx.merge.DexMerger.merge(DexMerger.java:189)\n>         at com.android.dx.command.dexer.Main.mergeLibraryDexBuffers(Main.java:454)\n>         at com.android.dx.command.dexer.Main.runMonoDex(Main.java:303)\n>         at com.android.dx.command.dexer.Main.run(Main.java:246)\n>         at com.android.dx.command.dexer.Main.main(Main.java:215)\n>         at com.android.dx.command.Main.main(Main.java:106)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1951",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1951/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1951/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1951/events",
    "html_url": "https://github.com/google/guava/pull/1951",
    "id": 55070603,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc3OTA3MTY=",
    "number": 1951,
    "title": "Increase test heap to 3G.",
    "user": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-21T20:11:59Z",
    "updated_at": "2015-01-22T19:59:40Z",
    "closed_at": "2015-01-22T19:59:40Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1951",
      "html_url": "https://github.com/google/guava/pull/1951",
      "diff_url": "https://github.com/google/guava/pull/1951.diff",
      "patch_url": "https://github.com/google/guava/pull/1951.patch"
    },
    "body": "This pull request is just for testing whether increasing the max heap for tests to 3 GB works and solves the problem with the BloomFilter test that's OOMing.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1950",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1950/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1950/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1950/events",
    "html_url": "https://github.com/google/guava/pull/1950",
    "id": 54615174,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1MzAxODI=",
    "number": 1950,
    "title": "Few lines addition in README.md",
    "user": {
      "login": "vijayk2019",
      "id": 2235482,
      "node_id": "MDQ6VXNlcjIyMzU0ODI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2235482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vijayk2019",
      "html_url": "https://github.com/vijayk2019",
      "followers_url": "https://api.github.com/users/vijayk2019/followers",
      "following_url": "https://api.github.com/users/vijayk2019/following{/other_user}",
      "gists_url": "https://api.github.com/users/vijayk2019/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vijayk2019/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vijayk2019/subscriptions",
      "organizations_url": "https://api.github.com/users/vijayk2019/orgs",
      "repos_url": "https://api.github.com/users/vijayk2019/repos",
      "events_url": "https://api.github.com/users/vijayk2019/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vijayk2019/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-16T19:32:32Z",
    "updated_at": "2015-01-22T20:58:35Z",
    "closed_at": "2015-01-22T20:58:35Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1950",
      "html_url": "https://github.com/google/guava/pull/1950",
      "diff_url": "https://github.com/google/guava/pull/1950.diff",
      "patch_url": "https://github.com/google/guava/pull/1950.patch"
    },
    "body": "Hello,\nIf someone is new to guava, it'd be helpful to have more information in README.md. I tried to add some more information in README.md. Source I took information from: https://code.google.com/p/guava-libraries/\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1949",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1949/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1949/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1949/events",
    "html_url": "https://github.com/google/guava/pull/1949",
    "id": 54606124,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1MjQ0ODk=",
    "number": 1949,
    "title": "NullPointerTester: allow to override the exception type policy",
    "user": {
      "login": "philipp-classen",
      "id": 1616509,
      "node_id": "MDQ6VXNlcjE2MTY1MDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1616509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipp-classen",
      "html_url": "https://github.com/philipp-classen",
      "followers_url": "https://api.github.com/users/philipp-classen/followers",
      "following_url": "https://api.github.com/users/philipp-classen/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipp-classen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipp-classen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipp-classen/subscriptions",
      "organizations_url": "https://api.github.com/users/philipp-classen/orgs",
      "repos_url": "https://api.github.com/users/philipp-classen/repos",
      "events_url": "https://api.github.com/users/philipp-classen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipp-classen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-01-16T18:07:59Z",
    "updated_at": "2017-01-29T18:06:27Z",
    "closed_at": "2017-01-29T18:06:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1949",
      "html_url": "https://github.com/google/guava/pull/1949",
      "diff_url": "https://github.com/google/guava/pull/1949.diff",
      "patch_url": "https://github.com/google/guava/pull/1949.patch"
    },
    "body": "NullPointerTester already knows the concept of a ExceptionTypePolicy.\nHowever, the field \"policy\" is always set to a default value.\n\nThis patch adds an option to overwrite the policy to\nallow IllegalArgumentExceptions. It also adds some unit tests.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1948",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1948/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1948/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1948/events",
    "html_url": "https://github.com/google/guava/pull/1948",
    "id": 54451867,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc0Mjk4NjM=",
    "number": 1948,
    "title": "Add toString to DeadEvent",
    "user": {
      "login": "paolofulgoni",
      "id": 5703017,
      "node_id": "MDQ6VXNlcjU3MDMwMTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5703017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paolofulgoni",
      "html_url": "https://github.com/paolofulgoni",
      "followers_url": "https://api.github.com/users/paolofulgoni/followers",
      "following_url": "https://api.github.com/users/paolofulgoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/paolofulgoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paolofulgoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paolofulgoni/subscriptions",
      "organizations_url": "https://api.github.com/users/paolofulgoni/orgs",
      "repos_url": "https://api.github.com/users/paolofulgoni/repos",
      "events_url": "https://api.github.com/users/paolofulgoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paolofulgoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-15T14:00:14Z",
    "updated_at": "2015-01-16T07:42:20Z",
    "closed_at": "2015-01-15T22:47:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1948",
      "html_url": "https://github.com/google/guava/pull/1948",
      "diff_url": "https://github.com/google/guava/pull/1948.diff",
      "patch_url": "https://github.com/google/guava/pull/1948.patch"
    },
    "body": "Given that the main purpose of DeadEvent is logging/debugging, I think that this simple string representation could be useful.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1947",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1947/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1947/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1947/events",
    "html_url": "https://github.com/google/guava/issues/1947",
    "id": 54355645,
    "node_id": "MDU6SXNzdWU1NDM1NTY0NQ==",
    "number": 1947,
    "title": "Improve invalid character exceptions from BaseEncoding",
    "user": {
      "login": "cslee00",
      "id": 4467646,
      "node_id": "MDQ6VXNlcjQ0Njc2NDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4467646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cslee00",
      "html_url": "https://github.com/cslee00",
      "followers_url": "https://api.github.com/users/cslee00/followers",
      "following_url": "https://api.github.com/users/cslee00/following{/other_user}",
      "gists_url": "https://api.github.com/users/cslee00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cslee00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cslee00/subscriptions",
      "organizations_url": "https://api.github.com/users/cslee00/orgs",
      "repos_url": "https://api.github.com/users/cslee00/repos",
      "events_url": "https://api.github.com/users/cslee00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cslee00/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 1,
    "created_at": "2015-01-14T18:09:44Z",
    "updated_at": "2015-01-20T20:52:10Z",
    "closed_at": "2015-01-20T20:44:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When decoding Base64/32/16 data an exception is thrown if an invalid character is found:\n\nBaseEncoding.java:501:\n\n``` java\n    int decode(char ch) throws IOException {\n      if (ch > Ascii.MAX || decodabet[ch] == -1) {\n        throw new DecodingException(\"Unrecognized character: \" + ch);\n      }\n      return decodabet[ch];\n    }\n```\n\nThe exception message prints out the character itself, which isn't terribly helpful when that is a non-printable character.  Recommend that the hex value of the character be printed instead.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1945",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1945/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1945/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1945/events",
    "html_url": "https://github.com/google/guava/issues/1945",
    "id": 54197797,
    "node_id": "MDU6SXNzdWU1NDE5Nzc5Nw==",
    "number": 1945,
    "title": "Document default null ordering for Ordering",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-13T14:13:26Z",
    "updated_at": "2015-01-13T14:59:24Z",
    "closed_at": "2015-01-13T14:59:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I couldn't find how a `natural()` [`Ordering`](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Ordering.html) orders `null`s if not calling if `nullsFirst()`/`nullsLast()` is not called. https://code.google.com/p/guava-libraries/wiki/OrderingExplained didn't give me anything either.\n\nWill the ordering thrown an NPE, or will it default to `nullsFirst()`? Should probably be documented.\n\nLet me know if I've missed something.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1944",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1944/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1944/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1944/events",
    "html_url": "https://github.com/google/guava/issues/1944",
    "id": 54095368,
    "node_id": "MDU6SXNzdWU1NDA5NTM2OA==",
    "number": 1944,
    "title": "Eventually require GWT 2.7.0",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 321689268,
        "node_id": "MDU6TGFiZWwzMjE2ODkyNjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=gwt",
        "name": "platform=gwt",
        "color": "ff9560",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-01-12T19:25:27Z",
    "updated_at": "2016-02-11T22:07:56Z",
    "closed_at": "2015-05-26T17:22:49Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "(If any of our GWT users are reading here, we'd love to hear about how you handle GWT updates. If you were using a version of Guava released today, how old might the version of GWT you're using with it be?)\n\nOur choice to work with GWT 2.6.1 makes us keep some old code around, e.g., our `Arrays.copyOf` replacements (#1942), our `IteratorTester.stopTestingWhenAddThrowsException` option, and probably other code we don't know about. Someday we'll want to require GWT 2.7.0 and remove the old code. To determine when to do that, we should track what the upgrade would let us accomplish. We can do that here.\n\nCurrently, I think that we're best off waiting. We've had reports from users of GWT 2.5.1 a few months ago (see #1824), even though 2.6.0 has been out for just under a year.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1943",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1943/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1943/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1943/events",
    "html_url": "https://github.com/google/guava/pull/1943",
    "id": 54038979,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcxODUxMjc=",
    "number": 1943,
    "title": "Fix typo in InetAddresses' Javadoc",
    "user": {
      "login": "paolofulgoni",
      "id": 5703017,
      "node_id": "MDQ6VXNlcjU3MDMwMTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5703017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paolofulgoni",
      "html_url": "https://github.com/paolofulgoni",
      "followers_url": "https://api.github.com/users/paolofulgoni/followers",
      "following_url": "https://api.github.com/users/paolofulgoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/paolofulgoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paolofulgoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paolofulgoni/subscriptions",
      "organizations_url": "https://api.github.com/users/paolofulgoni/orgs",
      "repos_url": "https://api.github.com/users/paolofulgoni/repos",
      "events_url": "https://api.github.com/users/paolofulgoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paolofulgoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-12T10:34:22Z",
    "updated_at": "2015-01-16T07:42:10Z",
    "closed_at": "2015-01-15T22:47:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1943",
      "html_url": "https://github.com/google/guava/pull/1943",
      "diff_url": "https://github.com/google/guava/pull/1943.diff",
      "patch_url": "https://github.com/google/guava/pull/1943.patch"
    },
    "body": "",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1942",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1942/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1942/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1942/events",
    "html_url": "https://github.com/google/guava/issues/1942",
    "id": 54024109,
    "node_id": "MDU6SXNzdWU1NDAyNDEwOQ==",
    "number": 1942,
    "title": "Line comment on requiring Java 6",
    "user": {
      "login": "bernardosulzbach",
      "id": 8271090,
      "node_id": "MDQ6VXNlcjgyNzEwOTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8271090?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bernardosulzbach",
      "html_url": "https://github.com/bernardosulzbach",
      "followers_url": "https://api.github.com/users/bernardosulzbach/followers",
      "following_url": "https://api.github.com/users/bernardosulzbach/following{/other_user}",
      "gists_url": "https://api.github.com/users/bernardosulzbach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bernardosulzbach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bernardosulzbach/subscriptions",
      "organizations_url": "https://api.github.com/users/bernardosulzbach/orgs",
      "repos_url": "https://api.github.com/users/bernardosulzbach/repos",
      "events_url": "https://api.github.com/users/bernardosulzbach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bernardosulzbach/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143551708,
        "node_id": "MDU6TGFiZWwxNDM1NTE3MDg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=primitives",
        "name": "package=primitives",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/17",
      "html_url": "https://github.com/google/guava/milestone/17",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/17/labels",
      "id": 1313983,
      "node_id": "MDk6TWlsZXN0b25lMTMxMzk4Mw==",
      "number": 17,
      "title": "20.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 36,
      "state": "closed",
      "created_at": "2015-09-18T19:55:48Z",
      "updated_at": "2017-09-12T19:44:04Z",
      "due_on": null,
      "closed_at": "2016-10-28T21:21:39Z"
    },
    "comments": 6,
    "created_at": "2015-01-12T06:28:24Z",
    "updated_at": "2016-01-14T13:00:38Z",
    "closed_at": "2016-01-14T13:00:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Please see https://github.com/google/guava/blob/master/guava/src/com/google/common/primitives/Booleans.java#L235.\n\nIsn't Java 6 available?\nIf it is, should that comment be removed?\nShould the method be removed? (It is private and only used in a single place).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1941",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1941/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1941/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1941/events",
    "html_url": "https://github.com/google/guava/issues/1941",
    "id": 54001953,
    "node_id": "MDU6SXNzdWU1NDAwMTk1Mw==",
    "number": 1941,
    "title": "Type mismatch: cannot convert from Comparator<? super capture#175-of ? super K> to Comparator<? super K>",
    "user": {
      "login": "confile",
      "id": 64265,
      "node_id": "MDQ6VXNlcjY0MjY1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/64265?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/confile",
      "html_url": "https://github.com/confile",
      "followers_url": "https://api.github.com/users/confile/followers",
      "following_url": "https://api.github.com/users/confile/following{/other_user}",
      "gists_url": "https://api.github.com/users/confile/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/confile/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/confile/subscriptions",
      "organizations_url": "https://api.github.com/users/confile/orgs",
      "repos_url": "https://api.github.com/users/confile/repos",
      "events_url": "https://api.github.com/users/confile/events{/privacy}",
      "received_events_url": "https://api.github.com/users/confile/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-11T19:35:46Z",
    "updated_at": "2015-01-12T15:30:28Z",
    "closed_at": "2015-01-12T15:30:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using Java8, guava18 and guava-gwt18 I get the following compile error: \n\n```\n   Tracing compile failure path for type 'com.google.common.collect.Maps'\n      [ERROR] Errors in 'jar:file:/Users/mg/Documents/Grails/GGTS3.6.3/buddyis-mobile/lib/guava-gwt-18.0.jar!/com/google/common/collect/super/com/google/common/collect/Maps.java'\n         [ERROR] Line 592: Type mismatch: cannot convert from Comparator<? super capture#175-of ? super K> to Comparator<? super K>\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1940",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1940/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1940/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1940/events",
    "html_url": "https://github.com/google/guava/issues/1940",
    "id": 53934250,
    "node_id": "MDU6SXNzdWU1MzkzNDI1MA==",
    "number": 1940,
    "title": "Build Failed on Guava Repository",
    "user": {
      "login": "confile",
      "id": 64265,
      "node_id": "MDQ6VXNlcjY0MjY1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/64265?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/confile",
      "html_url": "https://github.com/confile",
      "followers_url": "https://api.github.com/users/confile/followers",
      "following_url": "https://api.github.com/users/confile/following{/other_user}",
      "gists_url": "https://api.github.com/users/confile/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/confile/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/confile/subscriptions",
      "organizations_url": "https://api.github.com/users/confile/orgs",
      "repos_url": "https://api.github.com/users/confile/repos",
      "events_url": "https://api.github.com/users/confile/events{/privacy}",
      "received_events_url": "https://api.github.com/users/confile/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-01-10T00:28:14Z",
    "updated_at": "2015-01-12T15:51:51Z",
    "closed_at": "2015-01-12T15:51:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After trying: `mvn clean install`  on the Guava repo I get the following errors:\n\n```\nJan 10, 2015 1:24:49 AM com.google.common.util.concurrent.ServiceManager <init>\nWARNUNG: ServiceManager configured with no services.  Is your application configured properly?\ncom.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning\n    at com.google.common.util.concurrent.ServiceManager.<init>(ServiceManager.java:194)\n    at com.google.common.util.concurrent.ServiceManagerTest.testEmptyServiceManager(ServiceManagerTest.java:346)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:168)\n    at junit.framework.TestCase.runBare(TestCase.java:134)\n    at junit.framework.TestResult$1.protect(TestResult.java:110)\n    at junit.framework.TestResult.runProtected(TestResult.java:128)\n    at junit.framework.TestResult.run(TestResult.java:113)\n    at junit.framework.TestCase.run(TestCase.java:124)\n    at junit.framework.TestSuite.runTest(TestSuite.java:243)\n    at junit.framework.TestSuite.run(TestSuite.java:238)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:35)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:115)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)\n    at com.sun.proxy.$Proxy0.invoke(Unknown Source)\n    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)\n    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)\n\nJan 10, 2015 1:24:49 AM com.google.common.util.concurrent.ServiceManager$ServiceListener failed\nSCHWERWIEGEND: Service  [FAILED] ha\n\nRunning com.google.common.util.concurrent.UncaughtExceptionHandlersTest\nJan 10, 2015 1:24:53 AM com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter uncaughtException\nSCHWERWIEGEND: Caught an exception in Thread[Thread-779,5,main].  Shutting down.\njava.lang.Exception\n    at com.google.common.util.concurrent.UncaughtExceptionHandlersTest.testExiter(UncaughtExceptionHandlersTest.java:42)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:168)\n    at junit.framework.TestCase.runBare(TestCase.java:134)\n    at junit.framework.TestResult$1.protect(TestResult.java:110)\n    at junit.framework.TestResult.runProtected(TestResult.java:128)\n    at junit.framework.TestResult.run(TestResult.java:113)\n    at junit.framework.TestCase.run(TestCase.java:124)\n    at junit.framework.TestSuite.runTest(TestSuite.java:243)\n    at junit.framework.TestSuite.run(TestSuite.java:238)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:35)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:115)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:97)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)\n    at com.sun.proxy.$Proxy0.invoke(Unknown Source)\n    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)\n    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)\n\nRunning com.google.common.util.concurrent.UninterruptibleMonitorTest\nTests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.378 sec\nRunning com.google.common.util.concurrent.WrappingExecutorServiceTest\n...\nTests run: 597008, Failures: 16, Errors: 0, Skipped: 0\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Guava Maven Parent ................................ SUCCESS [0.256s]\n[INFO] Guava: Google Core Libraries for Java ............. SUCCESS [16.834s]\n[INFO] Guava Testing Library ............................. SUCCESS [25.873s]\n[INFO] Guava Unit Tests .................................. FAILURE [5:36.508s]\n[INFO] Guava GWT compatible libs ......................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 6:20.103s\n[INFO] Finished at: Sat Jan 10 01:24:53 CET 2015\n[INFO] Final Memory: 47M/549M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.7.2:test (default-test) on project guava-tests: There are test failures.\n[ERROR] \n[ERROR] Please refer to /Users/mg/Downloads/GWT/guava/guava-tests/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn <goals> -rf :guava-tests\n\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1939",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1939/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1939/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1939/events",
    "html_url": "https://github.com/google/guava/issues/1939",
    "id": 53917641,
    "node_id": "MDU6SXNzdWU1MzkxNzY0MQ==",
    "number": 1939,
    "title": "Guava-GWT 18 does not compile with Java8",
    "user": {
      "login": "confile",
      "id": 64265,
      "node_id": "MDQ6VXNlcjY0MjY1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/64265?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/confile",
      "html_url": "https://github.com/confile",
      "followers_url": "https://api.github.com/users/confile/followers",
      "following_url": "https://api.github.com/users/confile/following{/other_user}",
      "gists_url": "https://api.github.com/users/confile/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/confile/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/confile/subscriptions",
      "organizations_url": "https://api.github.com/users/confile/orgs",
      "repos_url": "https://api.github.com/users/confile/repos",
      "events_url": "https://api.github.com/users/confile/events{/privacy}",
      "received_events_url": "https://api.github.com/users/confile/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 321689268,
        "node_id": "MDU6TGFiZWwzMjE2ODkyNjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=gwt",
        "name": "platform=gwt",
        "color": "ff9560",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2015-01-09T21:34:54Z",
    "updated_at": "2016-04-18T14:08:53Z",
    "closed_at": "2016-04-18T14:08:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I used the following in my gwt.xml file: \n\n```\n<inherits name=\"com.google.common.collect.Collect\"/>\n```\n\nand I included both guava18 and guava-gwt18 on my classpath. the compiler error was: \n\n```\n   Tracing compile failure path for type 'com.google.common.collect.Collections2'\n      [ERROR] Errors in 'com/google/common/collect/Collections2.java'\n         [ERROR] Line 201: The method and(Predicate<capture#14-of ? super E>, Predicate<capture#15-of ?>) is undefined for the type Collections2.FilteredCollection<E>\n         [ERROR] Line 206: The method and(Predicate<capture#16-of ? super E>, Predicate<capture#17-of ?>) is undefined for the type Collections2.FilteredCollection<E>\n   Tracing compile failure path for type 'com.google.common.collect.Maps'\n      [ERROR] Errors in 'com/google/common/collect/super/com/google/common/collect/Maps.java'\n         [ERROR] Line 2244: The method and(Predicate<capture#263-of ? super Map.Entry<K,V>>, Predicate<capture#264-of ? super Map.Entry<K,V>>) is undefined for the type Predicates\n         [ERROR] Line 2343: The method and(Predicate<capture#265-of ? super Map.Entry<K,V>>, Predicate<capture#266-of ? super Map.Entry<K,V>>) is undefined for the type Predicates\n   Tracing compile failure path for type 'com.google.common.collect.Multimaps'\n      [ERROR] Errors in 'com/google/common/collect/super/com/google/common/collect/Multimaps.java'\n         [ERROR] Line 1691: The method and(Predicate<capture#83-of ? super K>, Predicate<capture#84-of ? super K>) is undefined for the type Predicates\n         [ERROR] Line 1954: The method and(Predicate<capture#105-of ? super Map.Entry<K,V>>, Predicate<capture#106-of ? super Map.Entry<K,V>>) is undefined for the type Predicates\n         [ERROR] Line 1735: The method and(Predicate<capture#87-of ? super K>, Predicate<capture#88-of ? super K>) is undefined for the type Predicates\n         [ERROR] Line 1779: The method and(Predicate<capture#91-of ? super K>, Predicate<capture#92-of ? super K>) is undefined for the type Predicates\n         [ERROR] Line 1940: The method and(Predicate<capture#103-of ? super Map.Entry<K,V>>, Predicate<capture#104-of ? super Map.Entry<K,V>>) is undefined for the type Predicates\n   [ERROR] Aborting compile due to errors in some input files\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1938",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1938/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1938/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1938/events",
    "html_url": "https://github.com/google/guava/issues/1938",
    "id": 53542125,
    "node_id": "MDU6SXNzdWU1MzU0MjEyNQ==",
    "number": 1938,
    "title": "Need a Maps class method that receives Iterator<V> values and a Function<? super V, K> keyFunction an returns a Map<K, Iterable<V>>",
    "user": {
      "login": "alexzm1",
      "id": 770519,
      "node_id": "MDQ6VXNlcjc3MDUxOQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/770519?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexzm1",
      "html_url": "https://github.com/alexzm1",
      "followers_url": "https://api.github.com/users/alexzm1/followers",
      "following_url": "https://api.github.com/users/alexzm1/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexzm1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexzm1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexzm1/subscriptions",
      "organizations_url": "https://api.github.com/users/alexzm1/orgs",
      "repos_url": "https://api.github.com/users/alexzm1/repos",
      "events_url": "https://api.github.com/users/alexzm1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexzm1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-06T17:51:17Z",
    "updated_at": "2015-01-06T21:50:35Z",
    "closed_at": "2015-01-06T20:42:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As the description says, I need a way to group the received Iterator based on what the function returns as K value.\n\nIs not hard to do and I can even work on it, it could be like method [Maps#uniqueIndex](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Maps.html#uniqueIndex%28java.util.Iterator,%20com.google.common.base.Function%29)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1937",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1937/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1937/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1937/events",
    "html_url": "https://github.com/google/guava/issues/1937",
    "id": 53413856,
    "node_id": "MDU6SXNzdWU1MzQxMzg1Ng==",
    "number": 1937,
    "title": "Clear FallbackFuture.running",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lukesandberg",
      "id": 210140,
      "node_id": "MDQ6VXNlcjIxMDE0MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/210140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukesandberg",
      "html_url": "https://github.com/lukesandberg",
      "followers_url": "https://api.github.com/users/lukesandberg/followers",
      "following_url": "https://api.github.com/users/lukesandberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukesandberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukesandberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukesandberg/subscriptions",
      "organizations_url": "https://api.github.com/users/lukesandberg/orgs",
      "repos_url": "https://api.github.com/users/lukesandberg/repos",
      "events_url": "https://api.github.com/users/lukesandberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukesandberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lukesandberg",
        "id": 210140,
        "node_id": "MDQ6VXNlcjIxMDE0MA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/210140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lukesandberg",
        "html_url": "https://github.com/lukesandberg",
        "followers_url": "https://api.github.com/users/lukesandberg/followers",
        "following_url": "https://api.github.com/users/lukesandberg/following{/other_user}",
        "gists_url": "https://api.github.com/users/lukesandberg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lukesandberg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lukesandberg/subscriptions",
        "organizations_url": "https://api.github.com/users/lukesandberg/orgs",
        "repos_url": "https://api.github.com/users/lukesandberg/repos",
        "events_url": "https://api.github.com/users/lukesandberg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lukesandberg/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-05T16:29:03Z",
    "updated_at": "2015-01-14T18:38:50Z",
    "closed_at": "2015-01-14T18:38:50Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We used to at least overwrite the original input `Future` with the fallback `Future` if a fallback was created. That's probably enough, since it's reasonable for `FutureFallback` to hold on to a reference to the `Future` that is its output. (This makes it behave no differently than a non-fallback `Future`, and it gets us back to the pre-https://github.com/google/guava/commit/2a7a3634f562f2a473850ff0373db66bc3b23cbf behavior.) Certainly we could try to do better if we want, clearing the `running` field entirely upon completion. We'll just have to watch out for a `NullPointerException` in `cancel`.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1935",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1935/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1935/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1935/events",
    "html_url": "https://github.com/google/guava/issues/1935",
    "id": 53145509,
    "node_id": "MDU6SXNzdWU1MzE0NTUwOQ==",
    "number": 1935,
    "title": "Eliminate Futures.dereference now that we're adding (Abstract|Settable)Future.setFuture? Or at least document that setFuture is better for many users.",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/27",
      "html_url": "https://github.com/google/guava/milestone/27",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/27/labels",
      "id": 3082143,
      "node_id": "MDk6TWlsZXN0b25lMzA4MjE0Mw==",
      "number": 27,
      "title": "24.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 2,
      "state": "closed",
      "created_at": "2018-02-01T20:54:46Z",
      "updated_at": "2018-02-07T14:49:31Z",
      "due_on": null,
      "closed_at": "2018-02-01T20:55:15Z"
    },
    "comments": 3,
    "created_at": "2014-12-30T20:44:01Z",
    "updated_at": "2018-02-07T14:49:31Z",
    "closed_at": "2018-02-07T14:49:31Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We would need to review `dereference` callers to see if they'd work similarly well with the `setFuture` style. Among the \"styles\" of calls I've seen in a quick glance:\n- `dereference(transform(input, function))`: probably can be written as `transform(input, *async*Function)`\n- `dereference(executor.submit(taskReturningFuture))`: probably can be written as `executor.submit(taskSettingValueOfFuture)`, but I feel like that will have bad effects. For example, might cancellation no longer work proerly?\n- `dereference(combine(...))`: Hmm... :( I'm sure it can be done, but this is starting to sound messy.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1934",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1934/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1934/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1934/events",
    "html_url": "https://github.com/google/guava/issues/1934",
    "id": 53111276,
    "node_id": "MDU6SXNzdWU1MzExMTI3Ng==",
    "number": 1934,
    "title": "Feature request: A new callback for receiving status updates before callback completion",
    "user": {
      "login": "ssumit",
      "id": 2225309,
      "node_id": "MDQ6VXNlcjIyMjUzMDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2225309?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssumit",
      "html_url": "https://github.com/ssumit",
      "followers_url": "https://api.github.com/users/ssumit/followers",
      "following_url": "https://api.github.com/users/ssumit/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssumit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssumit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssumit/subscriptions",
      "organizations_url": "https://api.github.com/users/ssumit/orgs",
      "repos_url": "https://api.github.com/users/ssumit/repos",
      "events_url": "https://api.github.com/users/ssumit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssumit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-30T12:01:17Z",
    "updated_at": "2019-08-07T15:05:19Z",
    "closed_at": "2019-08-07T15:05:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There are cases where the actual work done takes substantial amount of time and the consumer might want to receive any progress updates if possible. It is fine for the task to get failed or completed after zero or more updates. \n\nI m expecting a new callback which could be like:\npublic interface NewCallback<V, W> extends FutureCallback<V> {\n    void onUpdate(W w);\n}\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1933",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1933/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1933/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1933/events",
    "html_url": "https://github.com/google/guava/issues/1933",
    "id": 53077927,
    "node_id": "MDU6SXNzdWU1MzA3NzkyNw==",
    "number": 1933,
    "title": "FluentIterable from wildcard typed collection",
    "user": {
      "login": "jonnyzzz",
      "id": 256431,
      "node_id": "MDQ6VXNlcjI1NjQzMQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/256431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonnyzzz",
      "html_url": "https://github.com/jonnyzzz",
      "followers_url": "https://api.github.com/users/jonnyzzz/followers",
      "following_url": "https://api.github.com/users/jonnyzzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonnyzzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonnyzzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonnyzzz/subscriptions",
      "organizations_url": "https://api.github.com/users/jonnyzzz/orgs",
      "repos_url": "https://api.github.com/users/jonnyzzz/repos",
      "events_url": "https://api.github.com/users/jonnyzzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonnyzzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-29T22:39:16Z",
    "updated_at": "2014-12-29T23:49:13Z",
    "closed_at": "2014-12-29T22:47:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently `FluentIterable<T>` has `#from(Itearble<T>)` \nQuite often I need to have an instance of it from some collection like `Collection<? extends T>` \nIt could be nice to be able to pass such collection to `FluentIterable#from` \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1932",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1932/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1932/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1932/events",
    "html_url": "https://github.com/google/guava/issues/1932",
    "id": 53052126,
    "node_id": "MDU6SXNzdWU1MzA1MjEyNg==",
    "number": 1932,
    "title": "Iterators.exhaust(Iterator)",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-12-29T16:26:56Z",
    "updated_at": "2019-08-07T15:09:19Z",
    "closed_at": "2019-08-07T15:09:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "During some investigation of potential `@CheckReturnValue` methods (https://github.com/google/error-prone/issues/276), I found a number of users who call `Iterators.getLast` (~3 times) or especially `Iterators.size` (~17 times) solely for the side effect of exhausting the iterator. The calls to `size` feel particularly questionable. `getLast` feels more acceptable but still pretty strange, and if users use the one-arg version (as all 3 users I found do), they need to think to guard it with a `hasNext` check. (Of the 3, 1 did, and the other 2 are in tests where at least one element is expected.)\n\nOne thing arguing against the addition of this method is that advancing iterators shouldn't typically have side effects. For the particular case in which cleanup at the end is necessary, the iterator should perhaps instead implement `Closeable`. Would we want to add a method to support what we consider to be a questionable use case simply because it would let users do their questionable thing in a more explicit way?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1931",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1931/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1931/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1931/events",
    "html_url": "https://github.com/google/guava/issues/1931",
    "id": 52781234,
    "node_id": "MDU6SXNzdWU1Mjc4MTIzNA==",
    "number": 1931,
    "title": "Add @CheckReturnValue for a few specific methods",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-12-23T22:44:40Z",
    "updated_at": "2015-09-28T19:07:33Z",
    "closed_at": "2015-09-28T18:22:04Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "- `Lists.reverse`\n- `Futures.immediate*Future`\n- `*.filter`\n\nSee https://github.com/google/error-prone/issues/276\n\nThe trick will be cleaning up Google-internal callers of those methods so that we don't break builds.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1930",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1930/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1930/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1930/events",
    "html_url": "https://github.com/google/guava/issues/1930",
    "id": 52777873,
    "node_id": "MDU6SXNzdWU1Mjc3Nzg3Mw==",
    "number": 1930,
    "title": "Error while parsing common domain names using InternetDomainName.java",
    "user": {
      "login": "marios-caspida",
      "id": 7052031,
      "node_id": "MDQ6VXNlcjcwNTIwMzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7052031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marios-caspida",
      "html_url": "https://github.com/marios-caspida",
      "followers_url": "https://api.github.com/users/marios-caspida/followers",
      "following_url": "https://api.github.com/users/marios-caspida/following{/other_user}",
      "gists_url": "https://api.github.com/users/marios-caspida/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marios-caspida/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marios-caspida/subscriptions",
      "organizations_url": "https://api.github.com/users/marios-caspida/orgs",
      "repos_url": "https://api.github.com/users/marios-caspida/repos",
      "events_url": "https://api.github.com/users/marios-caspida/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marios-caspida/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-23T21:51:50Z",
    "updated_at": "2014-12-23T22:07:50Z",
    "closed_at": "2014-12-23T22:03:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is an easy to reproduce bug. Running the following code throws an exception. \n\n``` java\nString ff = \"us-east-1.amazonaws.com\";\nInternetDomainName domain = InternetDomainName.from(ff);\nSystem.out.println(domain.topPrivateDomain());\n```\n\n> Exception in thread \"main\" java.lang.IllegalStateException: Not under a public suffix: us-east-1.amazonaws.com\n>   at com.google.common.base.Preconditions.checkState(Preconditions.java:197)\n>   at  com.google.common.net.InternetDomainName.topPrivateDomain(InternetDomainName.java:424)\n>   at   *****.main(MyTestJavaClass.java:8> 9)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>     at java.lang.reflect.Method.invoke(Method.java:606)\n>     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1929",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1929/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1929/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1929/events",
    "html_url": "https://github.com/google/guava/issues/1929",
    "id": 52777721,
    "node_id": "MDU6SXNzdWU1Mjc3NzcyMQ==",
    "number": 1929,
    "title": "Reuse StringBuilder in LineBuffer",
    "user": {
      "login": "sonay",
      "id": 6095208,
      "node_id": "MDQ6VXNlcjYwOTUyMDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6095208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sonay",
      "html_url": "https://github.com/sonay",
      "followers_url": "https://api.github.com/users/sonay/followers",
      "following_url": "https://api.github.com/users/sonay/following{/other_user}",
      "gists_url": "https://api.github.com/users/sonay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sonay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sonay/subscriptions",
      "organizations_url": "https://api.github.com/users/sonay/orgs",
      "repos_url": "https://api.github.com/users/sonay/repos",
      "events_url": "https://api.github.com/users/sonay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sonay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1420524006,
        "node_id": "MDU6TGFiZWwxNDIwNTI0MDA2",
        "url": "https://api.github.com/repos/google/guava/labels/P4",
        "name": "P4",
        "color": "8581e8",
        "default": false,
        "description": ""
      },
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505671,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=triaged",
        "name": "status=triaged",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143507427,
        "node_id": "MDU6TGFiZWwxNDM1MDc0Mjc=",
        "url": "https://api.github.com/repos/google/guava/labels/type=performance",
        "name": "type=performance",
        "color": "f4d75f",
        "default": false,
        "description": "Related to performance"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-23T21:49:35Z",
    "updated_at": "2019-07-29T19:11:36Z",
    "closed_at": "2019-07-29T19:11:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "At line 91 of LineBuffer, it should be better to call line.setLength(0) instead of creating another StringBuilder(). Maybe add a length limit too:\n\n```\nprivate static final int MAX_LINE_LEN = 0x1000; // 4K\n\n/** Called when a line is complete. */\nprivate boolean finishLine(boolean sawNewline) throws IOException {\n    handleLine(line.toString(), sawReturn\n        ? (sawNewline ? \"\\r\\n\" : \"\\r\")\n        : (sawNewline ? \"\\n\" : \"\"));\n    // line = new StringBuilder();\n    if (line.length() > MAX_LINE_LEN) {\n        line = new StringBuilder();\n    } else {\n        line.setLength(0);\n    }\n    sawReturn = false;\n    return sawNewline;\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1927",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1927/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1927/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1927/events",
    "html_url": "https://github.com/google/guava/issues/1927",
    "id": 52674923,
    "node_id": "MDU6SXNzdWU1MjY3NDkyMw==",
    "number": 1927,
    "title": "Make Functions.constant covariant in argument type.",
    "user": {
      "login": "vincentk",
      "id": 99766,
      "node_id": "MDQ6VXNlcjk5NzY2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/99766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincentk",
      "html_url": "https://github.com/vincentk",
      "followers_url": "https://api.github.com/users/vincentk/followers",
      "following_url": "https://api.github.com/users/vincentk/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincentk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincentk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincentk/subscriptions",
      "organizations_url": "https://api.github.com/users/vincentk/orgs",
      "repos_url": "https://api.github.com/users/vincentk/repos",
      "events_url": "https://api.github.com/users/vincentk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincentk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-12-22T18:25:37Z",
    "updated_at": "2014-12-29T22:42:36Z",
    "closed_at": "2014-12-29T21:32:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Presently, a constant function is provided in the `Functions` class with a type signature as follows\n\n``` java\npublic static <E> Function<Object, E> constant(@Nullable E value) \n```\n\nPersonally, I think that a type signature as follows would be superior\n\n``` java\npublic static <Q, E> Function<Q, E> constant(@Nullable E value) \n```\n\nthe reason being that while functions in the \"mathematical\" sense are co-variant with regard to their argument types, generics in java are not (for well-known reasons).\n\nIt's probably not trivial to introduce such a change without triggering a compilation error here or there. Still I think it might be worth considering.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1926",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1926/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1926/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1926/events",
    "html_url": "https://github.com/google/guava/issues/1926",
    "id": 52395704,
    "node_id": "MDU6SXNzdWU1MjM5NTcwNA==",
    "number": 1926,
    "title": "Test failure in ClassPathTest under JDK8",
    "user": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507384,
        "node_id": "MDU6TGFiZWwxNDM1MDczODQ=",
        "url": "https://api.github.com/repos/google/guava/labels/package=reflect",
        "name": "package=reflect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "fluentfuture",
      "id": 3457808,
      "node_id": "MDQ6VXNlcjM0NTc4MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluentfuture",
      "html_url": "https://github.com/fluentfuture",
      "followers_url": "https://api.github.com/users/fluentfuture/followers",
      "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
      "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
      "repos_url": "https://api.github.com/users/fluentfuture/repos",
      "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "fluentfuture",
        "id": 3457808,
        "node_id": "MDQ6VXNlcjM0NTc4MDg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluentfuture",
        "html_url": "https://github.com/fluentfuture",
        "followers_url": "https://api.github.com/users/fluentfuture/followers",
        "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
        "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
        "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
        "repos_url": "https://api.github.com/users/fluentfuture/repos",
        "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 6,
    "created_at": "2014-12-18T17:52:53Z",
    "updated_at": "2014-12-19T19:52:30Z",
    "closed_at": "2014-12-19T19:52:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Now that the JDK8 compilation issue is fixed, one test appears to be failing (at least under Oracle JDK 1.8.0_05). The failing test is `ClassPathTest.testGetResources`. It's throwing a NPE at the `assertNotNull(resource.url())` line for two particular resources, because the `ClassLoader` for those resources returns `null` when asked for the resource's URL.\n\nThe resources in question are `source_tips` and `version.rc`, both loaded by `sun.misc.Launcher$ExtClassLoader`, which loads from jars in `jre/lib/ext/`.\n\n`source_tips` appears to be a file that's in the root of multiple jars in `ext`: `sunec.jar`, `sunjce_provider.jar` and `sunpkcs11.jar`. I'm actually not clear on how (if at all) the class loader is supposed to distinguish between the multiple files with the same name that are in different jars (on second thought, I guess this is just the first or maybe last wins thing that causes issues with multiple jars defining some of the same classes on the classpath, but it doesn't seem like something that should cause the ClassLoader to just refuse to return a URL for the name).\n\n`version.rc`, on the other hand, only seems to appear in one jar: `jfxrt.jar`.\n\nThis may be some kind of bug or oddity with the `ClassLoader` implementation itself, I'm not sure. I couldn't trace down into exactly what's going on in there with a debugger.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1925",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1925/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1925/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1925/events",
    "html_url": "https://github.com/google/guava/issues/1925",
    "id": 52391486,
    "node_id": "MDU6SXNzdWU1MjM5MTQ4Ng==",
    "number": 1925,
    "title": "Add common Joiner constants to a com.google.common.base.Joiner class",
    "user": {
      "login": "apogrebnyak",
      "id": 399063,
      "node_id": "MDQ6VXNlcjM5OTA2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/399063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apogrebnyak",
      "html_url": "https://github.com/apogrebnyak",
      "followers_url": "https://api.github.com/users/apogrebnyak/followers",
      "following_url": "https://api.github.com/users/apogrebnyak/following{/other_user}",
      "gists_url": "https://api.github.com/users/apogrebnyak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apogrebnyak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apogrebnyak/subscriptions",
      "organizations_url": "https://api.github.com/users/apogrebnyak/orgs",
      "repos_url": "https://api.github.com/users/apogrebnyak/repos",
      "events_url": "https://api.github.com/users/apogrebnyak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apogrebnyak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-18T17:18:25Z",
    "updated_at": "2014-12-18T18:00:26Z",
    "closed_at": "2014-12-18T17:31:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I find that I have a ton of `public static final Joiner` declarations for `,`, `.`, and `space`.  I even found one `COMMA_JOINER` in `Predicates` class.\n\nI think, it warrants to add a few of those to a `Joiner` class:\n\n``` java\npublic static final Joiner EMPTY_JOINER = on( \"\" );\npublic static final Joiner COMMA_JOINER = on( \",\" );\npublic static final Joiner DOT_JOINER = on( \".\" );\npublic static final Joiner SPACE_JOINER = on( \" \" );\npublic static final Joiner TAB_JOINER = on( \"\\t\" );\npublic static final Joiner LF_JOINER = on( \"\\n\" );\npublic static final Joiner CRLF_JOINER = on( \"\\r\\n\" );\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1923",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1923/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1923/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1923/events",
    "html_url": "https://github.com/google/guava/issues/1923",
    "id": 52278151,
    "node_id": "MDU6SXNzdWU1MjI3ODE1MQ==",
    "number": 1923,
    "title": "Change return type of addCallback to ListenableFuture.",
    "user": {
      "login": "apogrebnyak",
      "id": 399063,
      "node_id": "MDQ6VXNlcjM5OTA2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/399063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apogrebnyak",
      "html_url": "https://github.com/apogrebnyak",
      "followers_url": "https://api.github.com/users/apogrebnyak/followers",
      "following_url": "https://api.github.com/users/apogrebnyak/following{/other_user}",
      "gists_url": "https://api.github.com/users/apogrebnyak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apogrebnyak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apogrebnyak/subscriptions",
      "organizations_url": "https://api.github.com/users/apogrebnyak/orgs",
      "repos_url": "https://api.github.com/users/apogrebnyak/repos",
      "events_url": "https://api.github.com/users/apogrebnyak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apogrebnyak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-12-17T19:06:18Z",
    "updated_at": "2014-12-19T21:55:44Z",
    "closed_at": "2014-12-19T21:55:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "And return the future that is passed to the method.\n\nThis will remove the need for intermediary variable when submitting a list of tasks.\n\nHere is the use case;\n\n``` java\nList< ListenableFuture< SomeGenericResult< Type1, Type2, Type3 > > futures = new ArrayList<>( );\n\nfor ( Callable<Boolean> task : tasks )\n{\n  futures.add(\n    Futures.addCallback(\n      executor.submit( task ),\n      new FutureCallback<SomeGenericResult< Type1, Type2, Type3 >>(){...}\n    )\n  );\n}\n\nListanableFuture< List< SomeGenericResult< Type1, Type2, Type3 > > > listFuture = Futures.succesfulAsList( futures );\n```\n\nWithout the fix, there has to be a variable inside the loop, which adds to clutter:\n\n``` java\nList< ListenableFuture< SomeGenericResult< Type1, Type2, Type3 >> > futures = new ArrayList<>( );\n\nfor ( Callable<Boolean> task : tasks )\n{\n  ListenableFuture<SomeGenericResult< Type1, Type2, Type3 >> future = executor.submit( task );\n\n  Futures.addCallback(\n    future,\n    new FutureCallback<SomeGenericResult< Type1, Type2, Type3 >>(){...}\n  )\n\n  futures.add( future );\n}\n\nListanableFuture< List< SomeGenericResult< Type1, Type2, Type3 > > > listFuture = Futures.succesfulAsList( futures );\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1920",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1920/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1920/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1920/events",
    "html_url": "https://github.com/google/guava/issues/1920",
    "id": 52077522,
    "node_id": "MDU6SXNzdWU1MjA3NzUyMg==",
    "number": 1920,
    "title": "How to use own Map implementation to store cached values in Guava Cache?",
    "user": {
      "login": "LostOverflow",
      "id": 8238946,
      "node_id": "MDQ6VXNlcjgyMzg5NDY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8238946?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LostOverflow",
      "html_url": "https://github.com/LostOverflow",
      "followers_url": "https://api.github.com/users/LostOverflow/followers",
      "following_url": "https://api.github.com/users/LostOverflow/following{/other_user}",
      "gists_url": "https://api.github.com/users/LostOverflow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LostOverflow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LostOverflow/subscriptions",
      "organizations_url": "https://api.github.com/users/LostOverflow/orgs",
      "repos_url": "https://api.github.com/users/LostOverflow/repos",
      "events_url": "https://api.github.com/users/LostOverflow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LostOverflow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-16T06:19:17Z",
    "updated_at": "2019-07-31T15:46:37Z",
    "closed_at": "2019-07-31T15:46:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I came up own Map impl that will not stores multiple Values, if it equals, and avoid duplicating of data. (just store only one of them).\nDescription of map impl is available on  (http://stackoverflow.com/questions/27472712/compact-java-util-map-implementation)\nThe question is : how to use this map for caching results , or is it possible at all?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1919",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1919/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1919/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1919/events",
    "html_url": "https://github.com/google/guava/issues/1919",
    "id": 51986957,
    "node_id": "MDU6SXNzdWU1MTk4Njk1Nw==",
    "number": 1919,
    "title": "Idea: DoubleMath#fuzzyEquals(...) supporting nullables",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508937,
        "node_id": "MDU6TGFiZWwxNDM1MDg5Mzc=",
        "url": "https://api.github.com/repos/google/guava/labels/package=math",
        "name": "package=math",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-12-15T13:42:22Z",
    "updated_at": "2019-08-19T13:27:53Z",
    "closed_at": "2019-08-19T13:27:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Background:** I have a use case where I need to implement/override `equals(...)` method for a class holding `Double` fields. Since `Double` rarely can be compared directly I'd like to make a fuzzy comparison between my class instances using some tolerance.\n\n**Issue:** [`DoubleMath#fuzzyEquals(...)`](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/math/DoubleMath.html#fuzzyEquals%28double,%20double,%20double%29) would be a useful utilify method for doing my comparison. The issue is, it doesn't support nullable doubles.\n\n**Proposal:** To remedy this I have put together a utility method that solves this for me:\n\n``` java\npublic class Doubles {\n\n    /**\n     * Like {@link DoubleMath#fuzzyEquals(double, double, double)}, but supports nullables.\n     * \n     * @param a\n     *            first nullable element\n     * @param b\n     *            second nullable element\n     * @param tolerance\n     *            absolute difference tolerance. See {@link DoubleMath#fuzzyEquals(double, double, double)} for details.\n     */\n    public static boolean fuzzyEquals(Double a, Double b, double tolerance) {\n        if (a==null && b==null)\n            return true;\n        else if (a != null && b != null)\n            return DoubleMath.fuzzyEquals(a, b, tolerance);\n        else /* (a != null ^ b != null) */\n            return false;\n    }\n\n}\n```\n\nWould a similar method be useful to add to Guava? An alternative approach would be to relax `DoubleMath#fuzzyEquals(...)` method signature to accept `Double`s instead of `double`.\n\n**Additional:** It could also be debatable if fuzzy comparison should be done in an `equals(...)` implementation. In my case, I think it's fair to say it is.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1917",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1917/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1917/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1917/events",
    "html_url": "https://github.com/google/guava/issues/1917",
    "id": 51841902,
    "node_id": "MDU6SXNzdWU1MTg0MTkwMg==",
    "number": 1917,
    "title": "EventSubscriber is package protected",
    "user": {
      "login": "bdeneuter",
      "id": 1469039,
      "node_id": "MDQ6VXNlcjE0NjkwMzk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1469039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bdeneuter",
      "html_url": "https://github.com/bdeneuter",
      "followers_url": "https://api.github.com/users/bdeneuter/followers",
      "following_url": "https://api.github.com/users/bdeneuter/following{/other_user}",
      "gists_url": "https://api.github.com/users/bdeneuter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bdeneuter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bdeneuter/subscriptions",
      "organizations_url": "https://api.github.com/users/bdeneuter/orgs",
      "repos_url": "https://api.github.com/users/bdeneuter/repos",
      "events_url": "https://api.github.com/users/bdeneuter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bdeneuter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143509865,
        "node_id": "MDU6TGFiZWwxNDM1MDk4NjU=",
        "url": "https://api.github.com/repos/google/guava/labels/package=eventbus",
        "name": "package=eventbus",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-12-12T19:14:09Z",
    "updated_at": "2014-12-20T11:58:05Z",
    "closed_at": "2014-12-16T20:57:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In our project we want to create our own custom version from the EventBus. The EventBus supports this by overriding the method **void dispatch(Object, EventSubscriber)**.\nWe want to place our EventBus in our own package but the EventSubscriber is package protected. So we can not place our EventBus in it's own package without copying a lot of classes from guava.\nIs it possible to make EventSubscriber public or use a public interface?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1915",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1915/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1915/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1915/events",
    "html_url": "https://github.com/google/guava/issues/1915",
    "id": 51699164,
    "node_id": "MDU6SXNzdWU1MTY5OTE2NA==",
    "number": 1915,
    "title": "Incompatible deprecation policy",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-12-11T15:24:51Z",
    "updated_at": "2014-12-11T16:19:23Z",
    "closed_at": "2014-12-11T16:02:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://code.google.com/p/guava-libraries/source/browse/README states\n\n> 1. Deprecated non-beta APIs will be removed two years after the\n>    release in which they are first deprecated.\n\nwhile https://code.google.com/p/guava-libraries/wiki/PhilosophyExplained#Non-Beta_APIs states\n\n> Deprecated non-beta APIs will be removed eighteen months after the release in which they are first deprecated.\n\nIs it 18 or 24 months?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1914",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1914/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1914/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1914/events",
    "html_url": "https://github.com/google/guava/issues/1914",
    "id": 51680320,
    "node_id": "MDU6SXNzdWU1MTY4MDMyMA==",
    "number": 1914,
    "title": "Support for Context in EventBus",
    "user": {
      "login": "jukowski",
      "id": 105276,
      "node_id": "MDQ6VXNlcjEwNTI3Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/105276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jukowski",
      "html_url": "https://github.com/jukowski",
      "followers_url": "https://api.github.com/users/jukowski/followers",
      "following_url": "https://api.github.com/users/jukowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jukowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jukowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jukowski/subscriptions",
      "organizations_url": "https://api.github.com/users/jukowski/orgs",
      "repos_url": "https://api.github.com/users/jukowski/repos",
      "events_url": "https://api.github.com/users/jukowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jukowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143509865,
        "node_id": "MDU6TGFiZWwxNDM1MDk4NjU=",
        "url": "https://api.github.com/repos/google/guava/labels/package=eventbus",
        "name": "package=eventbus",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-12-11T12:24:17Z",
    "updated_at": "2019-07-30T14:22:46Z",
    "closed_at": "2019-07-30T14:22:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Let me start explaining the problem through my use-case:\nI have a set of POJO classes generated with `xjc` from XML schemas. I would like to use these classes as events, so that I can do `eventBus.post(someReceivedXMLEvent)`. The problem is that processing these events requires information (e.g. network connection from which `someReceivedXMLEvent` was received) that is independent of `someReceivedXMLEvent` itself and hence not part of either its XML schema or POJO signature. \n\nEventBus is based on the premise that event objects contain all the information required to process them. While this is a good assumption for hand-written event classes that can be extended anytime, it does not work for event classes for which no control over the source code is given. Generics would normally help here but type erasure gets in the way...\n\nProposed solution:\n1) extend `EventBus` object with method `eventBus.post(event, context);`\n2) extend the `AnnotatedSubscriberFinder` to accept methods with a second parameter specifying required context type.\n3) when searching the subscribers to be notified we have two cases \na) an `eventBus.post(event)` - would match only subscribers that are context independent\nb) an `eventBus.post(event, context)` - would match subscribers that are context independent and those that are context dependent and are compatible with the provided context.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1912",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1912/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1912/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1912/events",
    "html_url": "https://github.com/google/guava/issues/1912",
    "id": 51541258,
    "node_id": "MDU6SXNzdWU1MTU0MTI1OA==",
    "number": 1912,
    "title": "Range type parameter bound to Serializable",
    "user": {
      "login": "paolofulgoni",
      "id": 5703017,
      "node_id": "MDQ6VXNlcjU3MDMwMTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5703017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paolofulgoni",
      "html_url": "https://github.com/paolofulgoni",
      "followers_url": "https://api.github.com/users/paolofulgoni/followers",
      "following_url": "https://api.github.com/users/paolofulgoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/paolofulgoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paolofulgoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paolofulgoni/subscriptions",
      "organizations_url": "https://api.github.com/users/paolofulgoni/orgs",
      "repos_url": "https://api.github.com/users/paolofulgoni/repos",
      "events_url": "https://api.github.com/users/paolofulgoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paolofulgoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-10T10:23:18Z",
    "updated_at": "2014-12-10T15:23:17Z",
    "closed_at": "2014-12-10T14:46:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given that `Range` is serializable, shouldn't its type parameter `C` be bound to `Serializable` too?\n\n``` java\nRange<C extends Comparable & Serializable>\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1909",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1909/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1909/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1909/events",
    "html_url": "https://github.com/google/guava/issues/1909",
    "id": 51366769,
    "node_id": "MDU6SXNzdWU1MTM2Njc2OQ==",
    "number": 1909,
    "title": "More ways to rebound a Range",
    "user": {
      "login": "dimo414",
      "id": 1885701,
      "node_id": "MDQ6VXNlcjE4ODU3MDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1885701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimo414",
      "html_url": "https://github.com/dimo414",
      "followers_url": "https://api.github.com/users/dimo414/followers",
      "following_url": "https://api.github.com/users/dimo414/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimo414/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimo414/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimo414/subscriptions",
      "organizations_url": "https://api.github.com/users/dimo414/orgs",
      "repos_url": "https://api.github.com/users/dimo414/repos",
      "events_url": "https://api.github.com/users/dimo414/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimo414/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-08T23:20:09Z",
    "updated_at": "2014-12-09T16:35:44Z",
    "closed_at": "2014-12-09T15:50:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently, any Range can be canonicalized to `[closed, open)`, however there is no easy way to transform a Range into other bounds (notably `[closed, closed]`).  At a minimum, I would suggest providing a `closed()` method that attempts to return a fully closed Range, the same way `canonical()` does.  I can attest I have used this behavior heavily.\n\nEven better, I would think, would be a generic way to rebound a Range however the user needs.  I'm less certain about the use cases for other bounds, but the code to properly rebound is tricky, and in particular would be easier and cleaner if it had access to the Bounds inside Range.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1907",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1907/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1907/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1907/events",
    "html_url": "https://github.com/google/guava/issues/1907",
    "id": 51364570,
    "node_id": "MDU6SXNzdWU1MTM2NDU3MA==",
    "number": 1907,
    "title": "Provide subSet and subMap methods for NavigableSet/Map that takes a Range object",
    "user": {
      "login": "dimo414",
      "id": 1885701,
      "node_id": "MDQ6VXNlcjE4ODU3MDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1885701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimo414",
      "html_url": "https://github.com/dimo414",
      "followers_url": "https://api.github.com/users/dimo414/followers",
      "following_url": "https://api.github.com/users/dimo414/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimo414/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimo414/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimo414/subscriptions",
      "organizations_url": "https://api.github.com/users/dimo414/orgs",
      "repos_url": "https://api.github.com/users/dimo414/repos",
      "events_url": "https://api.github.com/users/dimo414/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimo414/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-08T22:57:10Z",
    "updated_at": "2016-08-06T01:23:01Z",
    "closed_at": "2016-08-06T01:23:01Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "`NavigableSet` provides `headSet()`, `subSet()`, and `tailSet()` methods for viewing the contents of a ordered slice of the set (and similar methods exist for `NavigableMap`).  But these methods involve manually keeping track of separate from and to keys (and whether each is included).  Working with `Range` is often much cleaner, but these methods aren't available in Guava presently.\n\nFrom @kevinb9n :\n\n> For the case where the user has a pre-existing Range, it seems like we really should do _something_ like this for them, because translating that into the right subSet call would be uuuugly\n\nIt might be good to call out in the javadocs for these methods that users may end up with simpler code by calling the direct methods instead if they don't already have a Range they're trying to use.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1905",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1905/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1905/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1905/events",
    "html_url": "https://github.com/google/guava/issues/1905",
    "id": 51154938,
    "node_id": "MDU6SXNzdWU1MTE1NDkzOA==",
    "number": 1905,
    "title": "AbstractFuture.done() hook",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-12-05T22:42:46Z",
    "updated_at": "2016-11-02T17:24:03Z",
    "closed_at": "2016-11-02T17:24:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We have `interruptTask()` for the interrupt case, but we seem to have a number of `AbstractFuture` subclasses where we need to do work on a non-interrupting cancellation (usually propagating that cancellation to a related `Future` or clearing some resources that would have been used during execution). Currently we override `cancel` to call `super.cancel`, but I hate to encourage overriding of `Future` methods, which are too easy to get wrong, and the necessary boilerplate is a minor annoyance.\n\nThe main difficulty now is that `interruptTask()` already exists. That leaves us with some unappealing options:\n- Add `onCancel(boolean)` to be called on `cancel(anything)` (but before or after `interruptTask()`?)\n- Add `cancelSuccessfulButInterruptionNotRequested()` to be called only on `cancel(false)`.\n- Add `onCancel(boolean)` with a default behavior of calling `interruptTask` if interruption was requested.\n\n(One of the `onCancel` approaches is probably what the most users want (certainly users inside Guava itself), but it either raises questions about the order of operations (what if `onCancel` nulls out something that `interruptTask` needs? Is that plausible? Can reversing the order save us?) or makes `interruptTask` meaningless if someone overrides `onCancel()`.)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1904",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1904/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1904/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1904/events",
    "html_url": "https://github.com/google/guava/issues/1904",
    "id": 51134367,
    "node_id": "MDU6SXNzdWU1MTEzNDM2Nw==",
    "number": 1904,
    "title": "Ability to restart service ",
    "user": {
      "login": "okigan",
      "id": 478302,
      "node_id": "MDQ6VXNlcjQ3ODMwMg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/478302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/okigan",
      "html_url": "https://github.com/okigan",
      "followers_url": "https://api.github.com/users/okigan/followers",
      "following_url": "https://api.github.com/users/okigan/following{/other_user}",
      "gists_url": "https://api.github.com/users/okigan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/okigan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/okigan/subscriptions",
      "organizations_url": "https://api.github.com/users/okigan/orgs",
      "repos_url": "https://api.github.com/users/okigan/repos",
      "events_url": "https://api.github.com/users/okigan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/okigan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-12-05T19:08:42Z",
    "updated_at": "2014-12-05T22:25:20Z",
    "closed_at": "2014-12-05T22:02:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Along the lines #418: ability to start()/stop() a service a few times seems very common\n\nNot being able to restart the service somewhat defeats the point and forces to reimplement a lot of the same boilerplate (as mentioned in #418 ensuring only one running)\n\nMaybe AbstractService needs to be modified or new recipe added (RestartableService) since this is a recurring usage\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1901",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1901/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1901/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1901/events",
    "html_url": "https://github.com/google/guava/issues/1901",
    "id": 50842135,
    "node_id": "MDU6SXNzdWU1MDg0MjEzNQ==",
    "number": 1901,
    "title": "Optional.or(Supplier<? extends Optional<T>> supplier)",
    "user": {
      "login": "kilotaras",
      "id": 590292,
      "node_id": "MDQ6VXNlcjU5MDI5Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/590292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kilotaras",
      "html_url": "https://github.com/kilotaras",
      "followers_url": "https://api.github.com/users/kilotaras/followers",
      "following_url": "https://api.github.com/users/kilotaras/following{/other_user}",
      "gists_url": "https://api.github.com/users/kilotaras/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kilotaras/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kilotaras/subscriptions",
      "organizations_url": "https://api.github.com/users/kilotaras/orgs",
      "repos_url": "https://api.github.com/users/kilotaras/repos",
      "events_url": "https://api.github.com/users/kilotaras/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kilotaras/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-12-03T14:12:51Z",
    "updated_at": "2018-06-13T18:45:46Z",
    "closed_at": "2018-06-13T18:45:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would be useful for usecases like:\n\n`someOptional = firstSuplier().or(secondSupplier).or(thirdSupplier)`\n\nRight now it should be written as\n\n```\nif (!someOptional.isPresent()) {\n  someOptional = secondSupplier();\n}\n\nif (!someOptional.isPresent()) {\n  someOptional = thirdSupplier();\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1899",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1899/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1899/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1899/events",
    "html_url": "https://github.com/google/guava/issues/1899",
    "id": 50715843,
    "node_id": "MDU6SXNzdWU1MDcxNTg0Mw==",
    "number": 1899,
    "title": "reflect.ClassPath.from throws URISyntaxException when classpath has a space in it.",
    "user": {
      "login": "OverclockedTim",
      "id": 3019928,
      "node_id": "MDQ6VXNlcjMwMTk5Mjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3019928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OverclockedTim",
      "html_url": "https://github.com/OverclockedTim",
      "followers_url": "https://api.github.com/users/OverclockedTim/followers",
      "following_url": "https://api.github.com/users/OverclockedTim/following{/other_user}",
      "gists_url": "https://api.github.com/users/OverclockedTim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OverclockedTim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OverclockedTim/subscriptions",
      "organizations_url": "https://api.github.com/users/OverclockedTim/orgs",
      "repos_url": "https://api.github.com/users/OverclockedTim/repos",
      "events_url": "https://api.github.com/users/OverclockedTim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OverclockedTim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "fluentfuture",
      "id": 3457808,
      "node_id": "MDQ6VXNlcjM0NTc4MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluentfuture",
      "html_url": "https://github.com/fluentfuture",
      "followers_url": "https://api.github.com/users/fluentfuture/followers",
      "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
      "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
      "repos_url": "https://api.github.com/users/fluentfuture/repos",
      "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "fluentfuture",
        "id": 3457808,
        "node_id": "MDQ6VXNlcjM0NTc4MDg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluentfuture",
        "html_url": "https://github.com/fluentfuture",
        "followers_url": "https://api.github.com/users/fluentfuture/followers",
        "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
        "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
        "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
        "repos_url": "https://api.github.com/users/fluentfuture/repos",
        "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-02T20:37:36Z",
    "updated_at": "2019-09-13T05:19:44Z",
    "closed_at": "2019-09-12T16:07:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using reflect.ClassPath.from(ClassLoader classLoader), if the classloader involved has loaded classes from a local file containing spaces, a URISyntaxException will be thrown from ClassPath.java line 294.\n\nThis bug is caused by the line above it: `uri = entry.toURI();` which apparently doesn't work as expected when the URL in question contains spaces.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1897",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1897/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1897/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1897/events",
    "html_url": "https://github.com/google/guava/issues/1897",
    "id": 50312322,
    "node_id": "MDU6SXNzdWU1MDMxMjMyMg==",
    "number": 1897,
    "title": "Generic parameterization of Invokable instances.",
    "user": {
      "login": "eliasvasylenko",
      "id": 2920893,
      "node_id": "MDQ6VXNlcjI5MjA4OTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2920893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliasvasylenko",
      "html_url": "https://github.com/eliasvasylenko",
      "followers_url": "https://api.github.com/users/eliasvasylenko/followers",
      "following_url": "https://api.github.com/users/eliasvasylenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliasvasylenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliasvasylenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliasvasylenko/subscriptions",
      "organizations_url": "https://api.github.com/users/eliasvasylenko/orgs",
      "repos_url": "https://api.github.com/users/eliasvasylenko/repos",
      "events_url": "https://api.github.com/users/eliasvasylenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliasvasylenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507384,
        "node_id": "MDU6TGFiZWwxNDM1MDczODQ=",
        "url": "https://api.github.com/repos/google/guava/labels/package=reflect",
        "name": "package=reflect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-11-27T17:26:27Z",
    "updated_at": "2015-01-20T16:48:31Z",
    "closed_at": "2014-11-28T15:58:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "TypeToken and Invokable currently have great support for reflective examination of generic types, but I think there are some blind spots when it comes to generic _methods_ which fall neatly within the scope of the library.\n\nConsider the (fairly pointless looking) method:\n\n```\n<T> T getItem(Collection<T> c);\n```\n\nQuerying the return type and getting a TypeToken over a java.lang.reflect.TypeVariable isn't that useful in most contexts. A client isn't likely to know what to do with type 'T' without doing some further manual investigation.\n\nWhat would be nice is a rough analogue to the `<X> TypeToken<T> where(TypeParameter<X> typeParam,  TypeToken<X> typeArg)` method from the TypeToken API. Obviously the design would have to be a little different, since an Invokable can't be parametrised over the generic method type parameters so we can't magically capture them in a TypeParameter in the same way we do there.\n\nBut essentially it'd be nice if we could do something like this:\n\n```\nInvokable<?, ?> getItem = ...; // whatever\ngetItem = getItem.withTypeParameters(String.class); // varargs method expecting a class/TypeToken per generic method parameter\n```\n\nto get a reference to the parametrised method with the parametrized signature (if that is a concept which makes sense):\n\n```\n<String> String getItem(Collection<String> c)\n```\n\nOr maybe even just:\n\n```\nTypeToken<?> wildcard = ... // pass an unbounded WildcardType to `TypeToken.of` I guess\ngetItem = getItem.withTypeParameters(wildcard);\n```\n\ngiving an invokable over the parametrized signature:\n\n```\n<?> ? getItem(Collection<?> c)\n```\n\nThis way we could do a few more useful type checking tasks in serialisation libraries and the like out of the box.\n\nOf course my ideal wish list feature would be:\n\n```\ngetItem = getItem.inferTypeParametersFromArguments(new TypeToken<List<String>>() {});\n```\n\nto give an Invokable over:\n\n```\n<String> String getItem(Collection<String> c)\n```\n\nthough I suppose this would require an implementation of the entire Java method type inference rules, which is far from trivial, and probably asking too much when this is a bit of a niche feature!\n\nCheers,\n\nEli\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1896",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1896/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1896/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1896/events",
    "html_url": "https://github.com/google/guava/issues/1896",
    "id": 50048990,
    "node_id": "MDU6SXNzdWU1MDA0ODk5MA==",
    "number": 1896,
    "title": "Documentation issue: Object common methods it's still pointing to Objects.",
    "user": {
      "login": "facundofarias",
      "id": 2700564,
      "node_id": "MDQ6VXNlcjI3MDA1NjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2700564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/facundofarias",
      "html_url": "https://github.com/facundofarias",
      "followers_url": "https://api.github.com/users/facundofarias/followers",
      "following_url": "https://api.github.com/users/facundofarias/following{/other_user}",
      "gists_url": "https://api.github.com/users/facundofarias/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/facundofarias/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/facundofarias/subscriptions",
      "organizations_url": "https://api.github.com/users/facundofarias/orgs",
      "repos_url": "https://api.github.com/users/facundofarias/repos",
      "events_url": "https://api.github.com/users/facundofarias/events{/privacy}",
      "received_events_url": "https://api.github.com/users/facundofarias/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-25T16:20:28Z",
    "updated_at": "2014-11-25T17:39:15Z",
    "closed_at": "2014-11-25T17:36:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As per I can see on the docs (https://code.google.com/p/guava-libraries/wiki/CommonObjectUtilitiesExplained), the documentation is still using _Objects_, when it should say _MoreObjects_ (Objects it's deprecated on the 1.8 version). How can I fix this minor issue?\nThanks!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1892",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1892/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1892/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1892/events",
    "html_url": "https://github.com/google/guava/pull/1892",
    "id": 49155454,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ1NzM1MDU=",
    "number": 1892,
    "title": "remove unnecessary null check",
    "user": {
      "login": "MohandAndel",
      "id": 2527943,
      "node_id": "MDQ6VXNlcjI1Mjc5NDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2527943?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MohandAndel",
      "html_url": "https://github.com/MohandAndel",
      "followers_url": "https://api.github.com/users/MohandAndel/followers",
      "following_url": "https://api.github.com/users/MohandAndel/following{/other_user}",
      "gists_url": "https://api.github.com/users/MohandAndel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MohandAndel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MohandAndel/subscriptions",
      "organizations_url": "https://api.github.com/users/MohandAndel/orgs",
      "repos_url": "https://api.github.com/users/MohandAndel/repos",
      "events_url": "https://api.github.com/users/MohandAndel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MohandAndel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-17T22:38:51Z",
    "updated_at": "2014-11-19T17:06:02Z",
    "closed_at": "2014-11-19T17:06:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1892",
      "html_url": "https://github.com/google/guava/pull/1892",
      "diff_url": "https://github.com/google/guava/pull/1892.diff",
      "patch_url": "https://github.com/google/guava/pull/1892.patch"
    },
    "body": "as TODO comments said to remove null boilerplate in CaseFormat.java . then I re-run CaseFormatTest test to ensure it passed .  \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1891",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1891/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1891/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1891/events",
    "html_url": "https://github.com/google/guava/issues/1891",
    "id": 48933442,
    "node_id": "MDU6SXNzdWU0ODkzMzQ0Mg==",
    "number": 1891,
    "title": "Guava library violates Google Java Style guide",
    "user": {
      "login": "romani",
      "id": 812984,
      "node_id": "MDQ6VXNlcjgxMjk4NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/812984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romani",
      "html_url": "https://github.com/romani",
      "followers_url": "https://api.github.com/users/romani/followers",
      "following_url": "https://api.github.com/users/romani/following{/other_user}",
      "gists_url": "https://api.github.com/users/romani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romani/subscriptions",
      "organizations_url": "https://api.github.com/users/romani/orgs",
      "repos_url": "https://api.github.com/users/romani/repos",
      "events_url": "https://api.github.com/users/romani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-11-15T21:33:25Z",
    "updated_at": "2017-11-13T18:02:43Z",
    "closed_at": "2017-11-13T18:02:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Affected Files:796\nViolations: 4071\n\nGoogle Java Style guide (version of March 21, 2014): \nhttps://google-styleguide.googlecode.com/svn-history/r130/trunk/javaguide.html\n\nCheckstyle Maven plugin report for Guava 17.0:\nhttp://checkstyle.sourceforge.net/reports/google-style/guava/\nAll violations are thoroughly rechecked, but some very occasional false-positives could be present.\n\nDetailed report (match of each Google Java Style rule to Checkstyle):\nhttp://checkstyle.sourceforge.net/google_style.html\n\nHow to run (command line): \n\n```\n~ $ cd /var/tmp\n/var/tmp $ git clone https://code.google.com/p/guava-libraries/\n\n/var/tmp $ wget -O checkstyle-6.1-all.jar http://downloads.sourceforge.net/project/checkstyle/checkstyle/6.1/checkstyle-6.1-all.jar?r=&ts=1416082535&use_mirror=tcpdiag\n\n/var/tmp $ wget https://raw.githubusercontent.com/checkstyle/checkstyle/master/google_checks.xml\n\n/var/tmp $ time java -jar checkstyle-6.1-all.jar -c google_checks.xml -o checkstyle-report-guava.txt -r guava-libraries\n\nreal    2m55.599s\nuser    3m12.596s\nsys 0m1.056s\n```\n\nPS: all work was done during Google Summer of Code 2014\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1890",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1890/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1890/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1890/events",
    "html_url": "https://github.com/google/guava/issues/1890",
    "id": 48827642,
    "node_id": "MDU6SXNzdWU0ODgyNzY0Mg==",
    "number": 1890,
    "title": "InternetDomainName.topPrivateDomain() fails for s3.amazonaws.com",
    "user": {
      "login": "prb",
      "id": 1231,
      "node_id": "MDQ6VXNlcjEyMzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prb",
      "html_url": "https://github.com/prb",
      "followers_url": "https://api.github.com/users/prb/followers",
      "following_url": "https://api.github.com/users/prb/following{/other_user}",
      "gists_url": "https://api.github.com/users/prb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prb/subscriptions",
      "organizations_url": "https://api.github.com/users/prb/orgs",
      "repos_url": "https://api.github.com/users/prb/repos",
      "events_url": "https://api.github.com/users/prb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-14T19:06:56Z",
    "updated_at": "2014-11-14T20:26:48Z",
    "closed_at": "2014-11-14T19:27:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The expected output is `amazonaws.com`, but an `IllegalStateException` is thrown.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1888",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1888/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1888/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1888/events",
    "html_url": "https://github.com/google/guava/issues/1888",
    "id": 48811156,
    "node_id": "MDU6SXNzdWU0ODgxMTE1Ng==",
    "number": 1888,
    "title": "Consider Futures method names in light of JDK8/CompletableFuture",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2014-11-14T16:46:17Z",
    "updated_at": "2015-02-23T21:18:39Z",
    "closed_at": "2015-02-23T21:18:39Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Migrating this old internal issue report:\n- \"Async\" suffix: CompletableFuture transformation methods come in three varieties, those equivalent to directExecutor(), those equivalent to passing ForkJoinPool.commonPool(), and those that accept an executor. The first of these is named with no suffix; the latter two are named with an \"Async\" suffix. None of our Futures methods have an \"Async\" suffix. In CompletableFuture terms, they correspond to the no-suffix version and the \"Async\"-suffix version _with_ executor.\n- \"transform\" is \"apply.\" This name works better in the fluent style -- getResult(...).thenApply(...) -- than it does as a static method. Also, com.google.common.collect still sets the transform() precedent, though, in an ideal world, we might standardize on JDK8's \"apply\" there, too. (Or maybe those methods will go away entirely?)\n- Overloads+lambdas=problems. Our transform() method has Function and AsyncFunction overloads. This may work poorly with lambda type inference.\n\nhttps://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1887",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1887/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1887/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1887/events",
    "html_url": "https://github.com/google/guava/issues/1887",
    "id": 48500648,
    "node_id": "MDU6SXNzdWU0ODUwMDY0OA==",
    "number": 1887,
    "title": "HtmlEscapers doesn't escape higher unicode, surrogate pairs, and various ASCII control characters.",
    "user": {
      "login": "rzwitserloot",
      "id": 93303,
      "node_id": "MDQ6VXNlcjkzMzAz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/93303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rzwitserloot",
      "html_url": "https://github.com/rzwitserloot",
      "followers_url": "https://api.github.com/users/rzwitserloot/followers",
      "following_url": "https://api.github.com/users/rzwitserloot/following{/other_user}",
      "gists_url": "https://api.github.com/users/rzwitserloot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rzwitserloot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rzwitserloot/subscriptions",
      "organizations_url": "https://api.github.com/users/rzwitserloot/orgs",
      "repos_url": "https://api.github.com/users/rzwitserloot/repos",
      "events_url": "https://api.github.com/users/rzwitserloot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rzwitserloot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508553,
        "node_id": "MDU6TGFiZWwxNDM1MDg1NTM=",
        "url": "https://api.github.com/repos/google/guava/labels/package=escape",
        "name": "package=escape",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-12T11:34:20Z",
    "updated_at": "2014-11-12T18:13:37Z",
    "closed_at": "2014-11-12T18:13:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "guava's HtmlEscapers just escapes known entities (double quote, open and close angle bracket, and single quote, that's pretty much it). It does not escape a bevy of other 'suspect' characters, including crazy unicode takes on angle brackets which some well-intentioned browser may try to interpret as actual angle brackets (if such browsers exist, then that would mean `HtmlEscapers` currently has security-critical bug in it, ouch!).\n\nI admit I haven't done the complete research on this, but on general security principles, shouldn't HtmlEscapers whitelist a select few characters (tab, space, enter, and most alphanumerics in ASCII, and that's about it), hardcode a select few character to entity mappings, and `&#` escape everything else?\n\nWhile we're here, the HTML docs refer to using `&#` encoding to encode `code points`. That sounds like it means that a surrogate pair in a java string should be encoded as a single code point. Just about every existing escape library doesn't get that right.\n\nSome basic research:\n- Spring's HtmlEscapers equivalent works broadly like guava's, but has a MUCH longer list of known entities. [source code](http://grepcode.com/file/repo1.maven.org/maven2/org.springframework/spring-web/4.0.6.RELEASE/org/springframework/web/util/HtmlUtils.java#102), [list of supported entities](http://grepcode.com/file/repo1.maven.org/maven2/org.springframework/spring-web/4.0.6.RELEASE/org/springframework/web/util/HtmlCharacterEntityReferences.properties).\n- Apache commons has multiple different classes that can do it, and they are implemented differently. StringEscapeUtils works similarly to spring's ([source](http://commons.apache.org/proper/commons-lang/apidocs/src-html/org/apache/commons/lang3/StringEscapeUtils.html)), but there's also Entities, which escapes everything above 0x7F as well as a few hardcoded characters. It does not handle surrogate pairs well, nor does it escape suspect ASCII characters such as 'bell', 'backspace', 'NULL', delete, etc. ([source](http://grepcode.com/file/repo1.maven.org/maven2/commons-lang/commons-lang/2.6/org/apache/commons/lang/Entities.java#Entities.escape%28java.io.Writer%2Cjava.lang.String%29)).\n- The SGML spec seems to suggest that for example characters with codes 128 through 159 **may not be used at all**, yet the HtmlEscapers code doesn't escape these. ([source](http://www.w3.org/TR/REC-html40/sgml/sgmldecl.html)).\n\nI'm willing to contribute a patch (with a whitelist and surrogate pair handling), but would like confirmation that the guava team feels that the current implementation of HtmlEscapers is security-wise rather iffy, i.e., that this patch is needed in the first place. There's also the tricky issue of context. For example, in normal HTML, there's no need to turn quotes into `&quot;`, and if you're in a CSS or javascript section inside an HTML document, you need very different escaping rules, so in some ways the problem 'please escape this string for me so I can put it in an HTML document' _requires_ a context, but for many programmers they simply don't know what context they wish to escape for.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1885",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1885/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1885/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1885/events",
    "html_url": "https://github.com/google/guava/issues/1885",
    "id": 48118943,
    "node_id": "MDU6SXNzdWU0ODExODk0Mw==",
    "number": 1885,
    "title": "Javadoc error in MapMaker",
    "user": {
      "login": "archiecobbs",
      "id": 545866,
      "node_id": "MDQ6VXNlcjU0NTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/545866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/archiecobbs",
      "html_url": "https://github.com/archiecobbs",
      "followers_url": "https://api.github.com/users/archiecobbs/followers",
      "following_url": "https://api.github.com/users/archiecobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/archiecobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/archiecobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/archiecobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/archiecobbs/orgs",
      "repos_url": "https://api.github.com/users/archiecobbs/repos",
      "events_url": "https://api.github.com/users/archiecobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/archiecobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 0,
    "created_at": "2014-11-07T19:10:01Z",
    "updated_at": "2014-11-10T21:09:27Z",
    "closed_at": "2014-11-10T21:09:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "MapMaker javadoc advertises \"on-demand computation of values for keys not already present\" but this doesn't appear to actually be possible.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1884",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1884/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1884/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1884/events",
    "html_url": "https://github.com/google/guava/issues/1884",
    "id": 47929098,
    "node_id": "MDU6SXNzdWU0NzkyOTA5OA==",
    "number": 1884,
    "title": "If I need to store 85899345920 data, the amount of space is how much? ",
    "user": {
      "login": "haochun",
      "id": 9320176,
      "node_id": "MDQ6VXNlcjkzMjAxNzY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9320176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haochun",
      "html_url": "https://github.com/haochun",
      "followers_url": "https://api.github.com/users/haochun/followers",
      "following_url": "https://api.github.com/users/haochun/following{/other_user}",
      "gists_url": "https://api.github.com/users/haochun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haochun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haochun/subscriptions",
      "organizations_url": "https://api.github.com/users/haochun/orgs",
      "repos_url": "https://api.github.com/users/haochun/repos",
      "events_url": "https://api.github.com/users/haochun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haochun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-06T06:47:10Z",
    "updated_at": "2014-11-06T22:29:51Z",
    "closed_at": "2014-11-06T22:14:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I need to store 85899345920 data, the amount of space is how much? It should not be 8 \\* 8 \\* 85899345920? 10 g? Not very understand the meaning of operation.Thank you!!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1882",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1882/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1882/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1882/events",
    "html_url": "https://github.com/google/guava/issues/1882",
    "id": 47903787,
    "node_id": "MDU6SXNzdWU0NzkwMzc4Nw==",
    "number": 1882,
    "title": "TransformingRandomAccessList throws unsupported operation exception when trying to call add method",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-05T23:34:06Z",
    "updated_at": "2014-11-05T23:53:15Z",
    "closed_at": "2014-11-05T23:34:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1874) created by **cicorongho** on 2014-11-01 at 12:41 AM_\n\n---\n\nHi guys,\n\nWhen you're just creating a list using the Lists class or by using a Spring Data method which uses guava internally , you won't be able to add any element to the list because the internal class (TransformingRandomAccessList) is extending AbstractList and doesn't override the add method (with 2 params). This means the super class add method will be called which throws by default UnsupportedOperationException. \nI mean yeah, you could wrap this into another list implementation but I still don't think this should be the default behaviour... it looks pretty ugly.\n\nCheers,\nIulian\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1880",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1880/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1880/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1880/events",
    "html_url": "https://github.com/google/guava/issues/1880",
    "id": 47807920,
    "node_id": "MDU6SXNzdWU0NzgwNzkyMA==",
    "number": 1880,
    "title": "BloomFilter why create use long,but readFrom use int?",
    "user": {
      "login": "haochun",
      "id": 9320176,
      "node_id": "MDQ6VXNlcjkzMjAxNzY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9320176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haochun",
      "html_url": "https://github.com/haochun",
      "followers_url": "https://api.github.com/users/haochun/followers",
      "following_url": "https://api.github.com/users/haochun/following{/other_user}",
      "gists_url": "https://api.github.com/users/haochun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haochun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haochun/subscriptions",
      "organizations_url": "https://api.github.com/users/haochun/orgs",
      "repos_url": "https://api.github.com/users/haochun/repos",
      "events_url": "https://api.github.com/users/haochun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haochun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505309,
        "node_id": "MDU6TGFiZWwxNDM1MDUzMDk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=hash",
        "name": "package=hash",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-05T07:37:21Z",
    "updated_at": "2014-11-05T20:27:29Z",
    "closed_at": "2014-11-05T17:01:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "creat method:\n![qq 20141105153403](https://cloud.githubusercontent.com/assets/9320176/4914158/8b15dc10-64be-11e4-9d48-9870e165b74f.png)\n\nreadFrom method\n![qq 20141105153422](https://cloud.githubusercontent.com/assets/9320176/4914159/8b19cd98-64be-11e4-8d1c-d576887a6d23.png)\n\nis there right?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1879",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1879/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1879/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1879/events",
    "html_url": "https://github.com/google/guava/issues/1879",
    "id": 47800727,
    "node_id": "MDU6SXNzdWU0NzgwMDcyNw==",
    "number": 1879,
    "title": "how can i replace BloomFilter  writeTo method ?",
    "user": {
      "login": "haochun",
      "id": 9320176,
      "node_id": "MDQ6VXNlcjkzMjAxNzY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9320176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haochun",
      "html_url": "https://github.com/haochun",
      "followers_url": "https://api.github.com/users/haochun/followers",
      "following_url": "https://api.github.com/users/haochun/following{/other_user}",
      "gists_url": "https://api.github.com/users/haochun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haochun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haochun/subscriptions",
      "organizations_url": "https://api.github.com/users/haochun/orgs",
      "repos_url": "https://api.github.com/users/haochun/repos",
      "events_url": "https://api.github.com/users/haochun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haochun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505309,
        "node_id": "MDU6TGFiZWwxNDM1MDUzMDk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=hash",
        "name": "package=hash",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-05T05:19:45Z",
    "updated_at": "2014-11-05T17:03:10Z",
    "closed_at": "2014-11-05T17:03:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "BloomFilter has writeTo method,that i can serialize it to file.but,i found it is slow and the serialized file is to big.i want use Kryo to serialize.but,when i use Kryo,it happed exception.So,how can i replace it?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1877",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1877/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1877/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1877/events",
    "html_url": "https://github.com/google/guava/pull/1877",
    "id": 47574000,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3NDg0Njk=",
    "number": 1877,
    "title": "Add support for Travis CI",
    "user": {
      "login": "joschi",
      "id": 43951,
      "node_id": "MDQ6VXNlcjQzOTUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/43951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joschi",
      "html_url": "https://github.com/joschi",
      "followers_url": "https://api.github.com/users/joschi/followers",
      "following_url": "https://api.github.com/users/joschi/following{/other_user}",
      "gists_url": "https://api.github.com/users/joschi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joschi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joschi/subscriptions",
      "organizations_url": "https://api.github.com/users/joschi/orgs",
      "repos_url": "https://api.github.com/users/joschi/repos",
      "events_url": "https://api.github.com/users/joschi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joschi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-03T09:06:22Z",
    "updated_at": "2014-11-05T22:01:20Z",
    "closed_at": "2014-11-05T20:37:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1877",
      "html_url": "https://github.com/google/guava/pull/1877",
      "diff_url": "https://github.com/google/guava/pull/1877.diff",
      "patch_url": "https://github.com/google/guava/pull/1877.patch"
    },
    "body": "This changeset adds support for [Travis CI](https://travis-ci.org/) as publicly visible means of continuous integration (additionally to the probably internally running CI system at Google).\n\nTravis CI is configured to build Guava with Oracle JDK 7, OpenJDK 7, and OpenJDK 6. Oracle JDK 8 hasn't been added to the list because of the currently unresolved issues with building Guava with Java 8.\n\nIn order for this changeset to work, someone with the appropriate permissions on the Guava repository will have to activate the build on Travis CI, see [Activate GitHub Webhook](http://docs.travis-ci.com/user/getting-started/#Step-two%3A-Activate-GitHub-Webhook).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1876",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1876/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1876/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1876/events",
    "html_url": "https://github.com/google/guava/pull/1876",
    "id": 47573629,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3NDgyNjQ=",
    "number": 1876,
    "title": "Replace Google Code URLs with corresponding GitHub URLs",
    "user": {
      "login": "joschi",
      "id": 43951,
      "node_id": "MDQ6VXNlcjQzOTUx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/43951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joschi",
      "html_url": "https://github.com/joschi",
      "followers_url": "https://api.github.com/users/joschi/followers",
      "following_url": "https://api.github.com/users/joschi/following{/other_user}",
      "gists_url": "https://api.github.com/users/joschi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joschi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joschi/subscriptions",
      "organizations_url": "https://api.github.com/users/joschi/orgs",
      "repos_url": "https://api.github.com/users/joschi/repos",
      "events_url": "https://api.github.com/users/joschi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joschi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-03T09:00:02Z",
    "updated_at": "2014-11-05T22:01:25Z",
    "closed_at": "2014-11-05T20:26:19Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1876",
      "html_url": "https://github.com/google/guava/pull/1876",
      "diff_url": "https://github.com/google/guava/pull/1876.diff",
      "patch_url": "https://github.com/google/guava/pull/1876.patch"
    },
    "body": "The `guava-parent` Maven POM still contains URLs pointing to Google Code for issues and SCM. This changesets updates the respective URLs to their counterparts on GitHub.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1875",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1875/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1875/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1875/events",
    "html_url": "https://github.com/google/guava/issues/1875",
    "id": 47566616,
    "node_id": "MDU6SXNzdWU0NzU2NjYxNg==",
    "number": 1875,
    "title": "Is there any implementation of reduce function?",
    "user": {
      "login": "crnlmchina",
      "id": 4506941,
      "node_id": "MDQ6VXNlcjQ1MDY5NDE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4506941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crnlmchina",
      "html_url": "https://github.com/crnlmchina",
      "followers_url": "https://api.github.com/users/crnlmchina/followers",
      "following_url": "https://api.github.com/users/crnlmchina/following{/other_user}",
      "gists_url": "https://api.github.com/users/crnlmchina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crnlmchina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crnlmchina/subscriptions",
      "organizations_url": "https://api.github.com/users/crnlmchina/orgs",
      "repos_url": "https://api.github.com/users/crnlmchina/repos",
      "events_url": "https://api.github.com/users/crnlmchina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crnlmchina/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-03T06:36:45Z",
    "updated_at": "2014-11-03T15:42:48Z",
    "closed_at": "2014-11-03T15:42:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The function maybe uses like this:\n\nlong factorial = Collections.reduce(Lists.newArrayList(1,2,3,4,5), new Function(){\n     long apply(int x, int y){\n     return x*y;\n}\n})\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1874",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1874/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1874/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1874/events",
    "html_url": "https://github.com/google/guava/pull/1874",
    "id": 47518839,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3MjQ5ODk=",
    "number": 1874,
    "title": "Fix ByteArrayDataInput Javadoc",
    "user": {
      "login": "Xaerxess",
      "id": 121382,
      "node_id": "MDQ6VXNlcjEyMTM4Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/121382?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xaerxess",
      "html_url": "https://github.com/Xaerxess",
      "followers_url": "https://api.github.com/users/Xaerxess/followers",
      "following_url": "https://api.github.com/users/Xaerxess/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xaerxess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xaerxess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xaerxess/subscriptions",
      "organizations_url": "https://api.github.com/users/Xaerxess/orgs",
      "repos_url": "https://api.github.com/users/Xaerxess/repos",
      "events_url": "https://api.github.com/users/Xaerxess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xaerxess/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-11-01T22:15:18Z",
    "updated_at": "2014-12-23T13:00:46Z",
    "closed_at": "2014-11-04T21:34:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/1874",
      "html_url": "https://github.com/google/guava/pull/1874",
      "diff_url": "https://github.com/google/guava/pull/1874.diff",
      "patch_url": "https://github.com/google/guava/pull/1874.patch"
    },
    "body": "So Guava moved to Github! This is my first (and very small) fix: I spotted improperly closed tag in [ByteArrayDataInput's Javadoc](http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/io/ByteArrayDataInput.html). Should be OK now.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1872",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1872/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1872/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1872/events",
    "html_url": "https://github.com/google/guava/issues/1872",
    "id": 47426570,
    "node_id": "MDU6SXNzdWU0NzQyNjU3MA==",
    "number": 1872,
    "title": "InternetDomainName.isValid is not RFC1123 compliant",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-31T18:02:06Z",
    "updated_at": "2019-06-05T10:43:16Z",
    "closed_at": "2019-06-05T10:43:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1872) created by **manderson23** on 2014-10-27 at 10:59 PM_\n\n---\n\nInternetDomainName.isValid returns false for the parameter \"8server\".\n\nRFC1123 suggests that names should be able to start with a digit. See https://groups.google.com/forum/#!topic/guava-discuss/8Sycya7Fkok on guava-discuss for a discussion of the issue. \n\nI also asked for clarification on Server Fault at http://serverfault.com/questions/638260/is-it-valid-for-a-hostname-to-start-with-a-digit\n\nMy final suggestion on the mailing list for solving this was as follows:\n\n\"What about if the final part starts with a digit actually checking if the complete name is an IP address e.g. calling InetAddreses.isInetAddress? The discussion section in RFC 1123 does suggest a full syntactic check to prevent a dotted decimal number getting through.\"\n\nbut there was no response.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1871",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1871/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1871/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1871/events",
    "html_url": "https://github.com/google/guava/issues/1871",
    "id": 47426566,
    "node_id": "MDU6SXNzdWU0NzQyNjU2Ng==",
    "number": 1871,
    "title": "AbstractLoadingCache missing get(Object, Callable)",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-31T18:02:04Z",
    "updated_at": "2019-08-08T19:18:31Z",
    "closed_at": "2019-08-08T19:18:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1871) created by **dborowitz@google.com** on 2014-10-23 at 07:32 PM_\n\n---\n\nAbstractLoadingCache says:\n\"To implement a cache, the programmer needs only to extend this class and provide an implementation for the #get(Object) and #getIfPresent methods. #getUnchecked, #get(Object, Callable), and #getAll are implemented in terms of get\"\n\nBut this is simply not true; get(Object, Callable) is not defined in AbstractLoadingCache, and in AbstractCache it throws UnsupportedOperationException.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1870",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1870/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1870/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1870/events",
    "html_url": "https://github.com/google/guava/issues/1870",
    "id": 47426561,
    "node_id": "MDU6SXNzdWU0NzQyNjU2MQ==",
    "number": 1870,
    "title": "Maps.unmodifiableNavigableMap not covariant in V",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505671,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=triaged",
        "name": "status=triaged",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-31T18:02:02Z",
    "updated_at": "2016-12-06T20:42:45Z",
    "closed_at": "2016-12-06T20:42:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1870) created by **thecoop1984** on 2014-10-23 at 08:42 AM_\n\n---\n\nMaps.unmodifiableNavigableMap is declared as follows:\n\n&lt;K, V> NavigableMap&lt;K, V> unmodifiableNavigableMap(NavigableMap&lt;K, V> map);\n\nthis could be changed to \n\n&lt;K, V> NavigableMap&lt;K, V> unmodifiableNavigableMap(NavigableMap&lt;K, ? extends V> map);\n\nas there are no methods in NavigableMap that take a V as a method parameter. This would also be consistent with the declarations of Collections.unmodifiableSortedMap and ImmutableSortedMap.copyOfSorted.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1869",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1869/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1869/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1869/events",
    "html_url": "https://github.com/google/guava/issues/1869",
    "id": 47426556,
    "node_id": "MDU6SXNzdWU0NzQyNjU1Ng==",
    "number": 1869,
    "title": "CountingOutputStream allegedly declares @Nullable out (wrapped), but will NPE",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2014-10-31T18:02:00Z",
    "updated_at": "2017-01-26T19:37:13Z",
    "closed_at": "2014-11-01T02:31:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1869) created by **anth...@whitford.com** on 2014-10-22 at 01:01 AM_\n\n---\n\nThe constructor suggests that outputsteam may be null:\n\npublic CountingOutputStream(@﻿Nullable OutputStream out)\n\nBut then any write/close operation will NPE:\n\n@﻿Override public void write(byte[] b, int off, int len) throws IOException {\n&nbsp;&nbsp;&nbsp;&nbsp;out.write(b, off, len);\n&nbsp;&nbsp;&nbsp;&nbsp;count += len;\n}\n\nEither the @﻿Nullable annotation should be removed, or the write/close methods should only pass-through when out is non-null.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1868",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1868/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1868/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1868/events",
    "html_url": "https://github.com/google/guava/issues/1868",
    "id": 47426549,
    "node_id": "MDU6SXNzdWU0NzQyNjU0OQ==",
    "number": 1868,
    "title": "Document that Predicates.in uses the contains() method of the collection",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-31T18:01:58Z",
    "updated_at": "2019-05-07T14:14:40Z",
    "closed_at": "2019-05-07T14:14:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1868) created by **ozzyo86** on 2014-10-21 at 04:27 AM_\n\n---\n\nHi,\nThere seems to be a performance bug in the \"in\" method from the Predicates class.\n\nThe problem is that we can generate an In Predicate that has an underlying collection with a slow containment implementation, for example an ArrayList.\n\nThe following code exposes the problem:\n\n---\n\npublic static void testPredicateIn() {\n\n```\n    ArrayList<Integer> predicateCollection=new ArrayList<Integer>();\n\n    for(int i=0;i<500000;++i)\n        predicateCollection.add(new Integer(i));\n\n    Predicate<Integer> inPred=Predicates.in(predicateCollection);\n\n    for(int i=0;i<500000;++i) {\n        inPred.apply(new Integer(i));\n    }\n\n}\n```\n\n__________________________________________-\nNotice that we're creating an in Predicate over an ArrayList of 500000 integers. \nApplying that predicate to the integers between 1 and 500000 takes a few minutes.\n\nI could think of a couple of ways of fixing it:\n\n1) Put a disclaimer in the documentation that the user is advised to pass collections with fast containment methods.\n\n2) Convert slow collections into HashSets, as in the following snippet:\n\n---\n\n&nbsp;&nbsp;&nbsp;&nbsp;private static &lt;T> Predicate&lt;T> optimizedIn(Collection<? extends T> target) {\n\n```\n    if(target instanceof Set)\n        return Predicates.in(target);\n    else\n        return Predicates.in(new HashSet<T>(target));\n\n}\n```\n\n---\n\nHere are some experimental results with different sizes for the collection predicate for the original implementation and optimizedIn:\n\n```\n  Size      Original     Optimized                                                                                                       \n    10      0m0.972s     0m0.996s                                                                                                        \n   100      0m1.068s     0m1.004s                                                                                                        \n  1000      0m1.572s     0m0.980s                                                                                                        \n 10000      0m8.065s     0m1.016s                                                                                                        \n100000      1m5.596s     0m1.052s                                                                                                        \n500000      4m56.423s    0m1.200s               \n```\n\nRegards,\n&nbsp;Oswaldo.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1867",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1867/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1867/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1867/events",
    "html_url": "https://github.com/google/guava/issues/1867",
    "id": 47426545,
    "node_id": "MDU6SXNzdWU0NzQyNjU0NQ==",
    "number": 1867,
    "title": "Adding a new value to a map if absent however lazily",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-31T18:01:56Z",
    "updated_at": "2019-09-13T21:05:29Z",
    "closed_at": "2019-09-13T21:05:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1867) created by **venkateshamurthyts** on 2014-10-20 at 03:22 PM_\n\n---\n\nNeed a putIfAbsent type method which takes a Builder rather than a created object as value along with Key K.\nThis in specific tries to create the object iff the key is absent.\n\nAdvantage: The value doesn't get un-necessarily created.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1866",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1866/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1866/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1866/events",
    "html_url": "https://github.com/google/guava/issues/1866",
    "id": 47426541,
    "node_id": "MDU6SXNzdWU0NzQyNjU0MQ==",
    "number": 1866,
    "title": "Allowing null Splitter#split(Charsequence cs) arguments without NPE",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-31T18:01:53Z",
    "updated_at": "2014-11-01T02:30:50Z",
    "closed_at": "2014-11-01T02:30:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1866) created by **ross.goldberg** on 2014-10-18 at 07:47 AM_\n\n---\n\nCurrently, when calling Splitter#split(CharSequence cs) or splitToList(CharSequence cs), if cs is null, then an NPE is thrown.\n\nCan you add an option to not throw an NPE?\n\nI can see many ways of doing this.  In descending order of preference:\n\n1)\nAdd a modifier method:\n\nforNullInputReturn(List&lt;String> nullInputList)\n\n2)\nAdd a modifier method:\n\nforNullInputReturn(Splitter.ForNullInputReturn nullInput)\n\nwhere Splitter.ForNullInputReturn is an enum with values:\n\nEMPTY_LIST\nSINGLETON_LIST_EMPTY_STRING\netc.\n\n3)\nAdd two modifier methods:\n\nforNullInputReturnSingleton()\nreturns the equivalent of Collections.singletonList(\"\")\n\nforNullInputReturnEmpty()\nreturns the equivalent of Collections.emptyList()\n\n4)\nAdd a modifier method:\n\ntreatNullInputAsEmptyString().\n\nWhen split(null) is called on a Splitter returned by treatNullInputAsEmptyString(), it will:\n\na) return an empty Iterable&lt;String>, if omitEmptyStrings() has also been called on the Spiltter\n\nb) return an Iterable&lt;String> containing only a single element (whose value is \"\"), if omitEmptyStrings() has NOT been called on the Spiltter\n\nThanks.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1864",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1864/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1864/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1864/events",
    "html_url": "https://github.com/google/guava/issues/1864",
    "id": 47426533,
    "node_id": "MDU6SXNzdWU0NzQyNjUzMw==",
    "number": 1864,
    "title": "Should toStringHelper(Class|Object) use simple name or canonical name (or either)?",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-31T18:01:49Z",
    "updated_at": "2019-08-16T16:50:57Z",
    "closed_at": "2019-08-16T16:50:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1864) created by **kevinb@google.com** on 2014-10-10 at 07:22 PM_\n\n---\n\nFor some nested classes you would really rather toStringHelper chose the canonical name \"Foo.Bar\" instead of just the simple name \"Bar\".\n\nQuestions:\n1. Which is the best default behavior?\n2. If that is the canonical name, would it be evil to change it now? It is perhaps debatable whether the current behavior really is strongly promised by spec. Some overenthusiastic unit tests would have to be changed, but how bad is that?\n3. Does this choice actually merit a new configuration option to ToStringHelper? Note that without it, users who want the opposite behavior will need to change typical (85%) usage code like so:\n\n&nbsp;toStringHelper(this) --> toStringHelper(getClass().getCanonicalName())\n\n... which is not pleasant. However, we don't want ToStringHelper to become too complex.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1863",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1863/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1863/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1863/events",
    "html_url": "https://github.com/google/guava/issues/1863",
    "id": 47426529,
    "node_id": "MDU6SXNzdWU0NzQyNjUyOQ==",
    "number": 1863,
    "title": "Preventing thread starvation in blocking operations",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143507427,
        "node_id": "MDU6TGFiZWwxNDM1MDc0Mjc=",
        "url": "https://api.github.com/repos/google/guava/labels/type=performance",
        "name": "type=performance",
        "color": "f4d75f",
        "default": false,
        "description": "Related to performance"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-10-31T18:01:47Z",
    "updated_at": "2019-09-13T21:03:38Z",
    "closed_at": "2019-09-13T21:03:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1863) created by **consiliumsoft** on 2014-10-10 at 10:14 AM_\n\n---\n\nI've sub-classed ListenableFuture to wrap helper functions from the Futures class to make the futures slightly more composable, however, the issue I'm now facing is preventing potential thread starvation in a fixed worker thread pool (Executors.GLOBAL) in the example below due to someone accidentally blocking in a Function or AsyncFunction (thus potentially blocking all threads in this pool). \n\nScala's Await.result uses \"managed blocking\". i.e., detect the blocking operation and temporarily spawn a new thread (see http://stackoverflow.com/a/13099594). Is there anything equivalent in Guava/Java? \n\nIs this the reason Futures.transform has the option to use the current thread? \n\npublic &lt;ReturnType> MFuture&lt;ReturnType> flatMap(AsyncFunction&lt;InputType, ReturnType> fn){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new MFuture&lt;ReturnType>(Futures.transform(listenableFuture, fn, Executors.GLOBAL));\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n```\npublic <ReturnType> MFuture<ReturnType> map(Function<InputType, ReturnType> fn){\n    return new MFuture<ReturnType>(Futures.transform(listenableFuture, fn, Executors.GLOBAL));\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1861",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1861/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1861/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1861/events",
    "html_url": "https://github.com/google/guava/issues/1861",
    "id": 47426519,
    "node_id": "MDU6SXNzdWU0NzQyNjUxOQ==",
    "number": 1861,
    "title": "NullPointerException in RegularImmutableList.equals() after Deserialization",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-10-31T18:01:43Z",
    "updated_at": "2014-11-01T02:29:56Z",
    "closed_at": "2014-11-01T02:29:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1861) created by **gomarkus** on 2014-10-02 at 11:55 AM_\n\n---\n\nField \"array\" of class \"RegularImmutableList\" is marked as transient. So it gets null after deserialization. Method \"equals(Object)\" tries to access the array and a NullPointerException is thrown.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1860",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1860/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1860/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1860/events",
    "html_url": "https://github.com/google/guava/issues/1860",
    "id": 47426516,
    "node_id": "MDU6SXNzdWU0NzQyNjUxNg==",
    "number": 1860,
    "title": "Maps.asMap(Object... varArgs) -> Map  similar to  Arrays.asList",
    "user": {
      "login": "gissuebot",
      "id": 8091570,
      "node_id": "MDQ6VXNlcjgwOTE1NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8091570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gissuebot",
      "html_url": "https://github.com/gissuebot",
      "followers_url": "https://api.github.com/users/gissuebot/followers",
      "following_url": "https://api.github.com/users/gissuebot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gissuebot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gissuebot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gissuebot/subscriptions",
      "organizations_url": "https://api.github.com/users/gissuebot/orgs",
      "repos_url": "https://api.github.com/users/gissuebot/repos",
      "events_url": "https://api.github.com/users/gissuebot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gissuebot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2014-10-31T18:01:41Z",
    "updated_at": "2020-04-24T14:31:41Z",
    "closed_at": "2014-11-01T02:29:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_[Original issue](https://code.google.com/p/guava-libraries/issues/detail?id=1860) created by **joeheyming** on 2014-10-01 at 08:06 PM_\n\n---\n\nIt would be awesome if guava had a method that takes variable object arguments.\n\nMaps.asMap(\"key1\", 1, \"key2\", \"value2\")  would yeild a hashmap, or immutable map.  \n\nIn json it would look something like this:\n{'key1': 1, 'key2': 'value2'}\n\nI don't think its too crazy to use variable arguments here.  Arrays.asList uses var args, why can't guava do this?\n",
    "performed_via_github_app": null
  }
]
