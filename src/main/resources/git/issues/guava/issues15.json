[
  {
    "url": "https://api.github.com/repos/google/guava/issues/2127",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2127/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2127/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2127/events",
    "html_url": "https://github.com/google/guava/issues/2127",
    "id": 100263315,
    "node_id": "MDU6SXNzdWUxMDAyNjMzMTU=",
    "number": 2127,
    "title": "19rc1 regression in sliced bytesource: offset + length may overflow for large length values",
    "user": {
      "login": "jbgi",
      "id": 221929,
      "node_id": "MDQ6VXNlcjIyMTkyOQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/221929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbgi",
      "html_url": "https://github.com/jbgi",
      "followers_url": "https://api.github.com/users/jbgi/followers",
      "following_url": "https://api.github.com/users/jbgi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbgi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbgi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbgi/subscriptions",
      "organizations_url": "https://api.github.com/users/jbgi/orgs",
      "repos_url": "https://api.github.com/users/jbgi/repos",
      "events_url": "https://api.github.com/users/jbgi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbgi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2015-08-11T09:00:32Z",
    "updated_at": "2015-09-17T19:27:41Z",
    "closed_at": "2015-08-12T18:03:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "An algorithm similar to `java.lang.Math.addExact()` should be used to compute `offset + length`  and fallback to `Integer.MAX_VALUE` or `Long.MAX_VALUE` in case of overflow. \nThere is 3 occurrences of this possibly overflowing addition in `ByteSource.java`.\n\nI found this bug because I regularly slice bytesources with a length equals to Long.MAX_VALUE.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2126",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2126/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2126/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2126/events",
    "html_url": "https://github.com/google/guava/issues/2126",
    "id": 99558495,
    "node_id": "MDU6SXNzdWU5OTU1ODQ5NQ==",
    "number": 2126,
    "title": "Reducing redundant & simple subscribers for simple reference-change events",
    "user": {
      "login": "Groostav",
      "id": 1680611,
      "node_id": "MDQ6VXNlcjE2ODA2MTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1680611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Groostav",
      "html_url": "https://github.com/Groostav",
      "followers_url": "https://api.github.com/users/Groostav/followers",
      "following_url": "https://api.github.com/users/Groostav/following{/other_user}",
      "gists_url": "https://api.github.com/users/Groostav/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Groostav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Groostav/subscriptions",
      "organizations_url": "https://api.github.com/users/Groostav/orgs",
      "repos_url": "https://api.github.com/users/Groostav/repos",
      "events_url": "https://api.github.com/users/Groostav/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Groostav/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143509865,
        "node_id": "MDU6TGFiZWwxNDM1MDk4NjU=",
        "url": "https://api.github.com/repos/google/guava/labels/package=eventbus",
        "name": "package=eventbus",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143534295,
        "node_id": "MDU6TGFiZWwxNDM1MzQyOTU=",
        "url": "https://api.github.com/repos/google/guava/labels/status=obsolete",
        "name": "status=obsolete",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-08-07T01:43:36Z",
    "updated_at": "2019-08-19T16:59:45Z",
    "closed_at": "2019-08-19T16:59:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey guys,\n\nFollowing our project's format, worded as generally as I can, a user story:\n\n> as a developer & guava-user I would like to register my stateful services/controllers with some kind of registrar service that will update my component's 'current' models as they are changed by processes outside the scope of my object, so that I can avoid having to burden myself with listening for the appropriate changes and fetching those references myself.\n\nWe develop a desktop java app that uses guava. We have developed a custom component similar in principal to the EventBus with slightly different syntax for handling life cycle management.\n\nI think some code might be worth a thousand words. In the case where the user closes our applications project file (similar to an excel workbook) and opens another one, we need a number of components to get a reference to the resulting deserialized model objects (from the opened project file). This could be handled by posting a plethora of events using the `EventBus` along the lines of\n\n``` Java\npublic class StatefulServiceObject{\n    private ModelA currentA;\n\n    //constructor registers this component with an EventBus\n\n    @Subscribe \n    public void acceptNewProjectOn(CurrentModelAChangedEvent event){\n        this.a = event.a;\n    }\n}\n\n//and then in the project file loading service\neventBus.post(new CurrentModelAChangedEvent(currentModelA));\n```\n\nBut it requires that each service that keeps a reference to the `currentA` to have a subscriber. We could do something with inheritance to reduce this problem, but that opens a whole new can of worms.\n\nTo avoid this our project has created and evolved a component called the `ModelUpdaterService` that allows you to express this same concept a little more concisely.\n\n``` Java\npublic class StatefulServiceObject{\n    @UpdateServiced ModelA currentA;\n\n     //constructor registers this component with a model updater service\n}\n\n//and then in the project file loading service\nmodelUpdaterService.push(currentModelA);\n```\n\nThere are a couple benefits I've noticed to this approach:\n- this separates the writing portion from the reading portion of each subscriber, which means we're more likely to be in a consistent state when any one one event is published. In the event that two stateful services that interact with each other both keep a 'current' ModelA, without this updater service, when the event is published there is a good chance that one will have a different reference from the other, possibly pushing us to an error state and ultimately, likely, causing the bug-fixer to add a second event.\n- this (helps) keep events stateless, which I really think is a general good thing. For one it means that events can be serialized more easily, and for another it typically simplifies testing. I've found that when I've given a field to an event, it is only used by some minority of the subscribers, meaning that when I go to test things that use this event, the tests have to supply the context for the field on the event even though the component under test may not even use it. \n- this (helps) reduce the complexity of the number of events that need to be posted. In the case where our user loads a Project file, there is 1 top-level model that needs to be considered 'current', three second-level... well ill just pseudo code it\n  \n  ``` Java\n  openNewProject(Path pathToFile){\n     Project projectFromFile = deserialize(pathToFile);\n     modelUpdaterService.push(\n         projectFromFile,\n         projectFromFile.configurations.get(0),\n         projectFromFile.resultSheets.get(0),\n         projectFromFile.visualizations.get(0),\n     );\n     eventBus.post(new ProjectChangedEvent());\n  }\n  ```\n  \n  The thing to note here is there is only 1 place where control is passed to other objects. Using pure events, this would require multiple events, meaning that control is passed to other objects in multiple places.\n\nWe did go through architectural discussions about what it meant to be the most 'current' of any one model, and how we could either traverse the object tree from the most current root, or use providers to do that for us, but ultimately it was decided that the least wierd/redundant strategy would be to have a field that was updated automagically by a service, akin to the event bus.\n\nDoes this sound like a problem you guys have? Would you be interested in our solution / a new one based largely off the eventBus code?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2125",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2125/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2125/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2125/events",
    "html_url": "https://github.com/google/guava/issues/2125",
    "id": 98998643,
    "node_id": "MDU6SXNzdWU5ODk5ODY0Mw==",
    "number": 2125,
    "title": "The message of TimeoutException (from awaitRunning and awaitTerminated) is missing service's name.",
    "user": {
      "login": "stevo58008",
      "id": 2715301,
      "node_id": "MDQ6VXNlcjI3MTUzMDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2715301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevo58008",
      "html_url": "https://github.com/stevo58008",
      "followers_url": "https://api.github.com/users/stevo58008/followers",
      "following_url": "https://api.github.com/users/stevo58008/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevo58008/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevo58008/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevo58008/subscriptions",
      "organizations_url": "https://api.github.com/users/stevo58008/orgs",
      "repos_url": "https://api.github.com/users/stevo58008/repos",
      "events_url": "https://api.github.com/users/stevo58008/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevo58008/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-08-04T15:40:03Z",
    "updated_at": "2015-08-10T17:15:43Z",
    "closed_at": "2015-08-10T17:15:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When you call awaitRunning or awaitTerminated on a service and it times out, the message in the TimeoutException contains a blank space rather than the service's name (as shown below).\n\nExample exception message \"Timed out waiting for [STARTING] to reach the RUNNING state. Current state: STARTING\".  Just before \"[STARTING]\" there is a double space, where the service's name should be.\n\nAs you can see, that error message isn't that helpful, since you don't know which service it has happened in.\n\nI've had a quick look (at the source code) and it appears to be down in AbstractService where this exception message is being put together, and where the service name is being lost.  It looks like it is being lost, as the AbstractService is actually a delegate, and when it is initialised, the service name of the Service (using the delegate) is not passed on.  When AbstractService creates the TimeoutException message, it uses \"this\" as the argument for the service identifier, which will dirll down to the toString() impl, which in turns uses the getClass().getSimpleName(), which is coming out as \"\".  \n\nBelow is a (simple) junit test file for this.\n\n``` java\nimport com.google.common.util.concurrent.AbstractExecutionThreadService;\nimport com.google.common.util.concurrent.AbstractIdleService;\nimport com.google.common.util.concurrent.AbstractScheduledService;\nimport com.google.common.util.concurrent.Service;\nimport org.junit.Test;\n\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.TimeoutException;\n\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\n/**\n * Tests the exception message contents of {@link com.google.common.util.concurrent.Service#awaitRunning(long, TimeUnit)} and {@link\n * com.google.common.util.concurrent.Service#awaitTerminated(long, TimeUnit)}.  I want to check that the service name (which by default should be the simple class name) is in the\n * exception message (as i've been seeing exception messages with empty service names in them).\n *\n * @author sspraggon\n */\npublic class ExceptionMessagesOfAwaitRunningAndTerminatedTest {\n\n    @Test\n    public void testGivenAnIdleServiceWhenAwaitRunningIsCalledAndItTimesOutThenTheTimeOutExceptionHasServiceNameInIt() {\n        final long startupTime = 500;\n        IdleServiceWithDelayableStartupAndShutdown service = new IdleServiceWithDelayableStartupAndShutdown(startupTime, 0);\n        final String expectedServiceIdentifier = service.getClass().getSimpleName();\n\n        assertServicesToStringContainsExpectedIdentifier(service, expectedServiceIdentifier);\n        makeAwaitRunningTimeoutAndAssertExceptionMessageConatinsExpectedIdentifier(service, expectedServiceIdentifier, startupTime);\n    }\n\n    @Test\n    public void testGivenAnIdleServiceWhenAwaitTerminatedIsCalledAndItTimesOutThenTheTimeOutExceptionHasServiceNameInIt() {\n        final long shutdownTime = 500;\n        IdleServiceWithDelayableStartupAndShutdown service = new IdleServiceWithDelayableStartupAndShutdown(0, shutdownTime);\n        final String expectedServiceIdentifier = service.getClass().getSimpleName();\n\n        assertServicesToStringContainsExpectedIdentifier(service, expectedServiceIdentifier);\n        makeAwaitTerminateTimeoutAndAssertExceptionMessageContainsExpectedIdentifier(service, expectedServiceIdentifier, shutdownTime);\n    }\n\n    @Test\n    public void testGivenAnExecutionThreadServiceWhenAwaitRunningIsCalledAndItTimesOutThenTheTimeOutExceptionHasServiceNameInIt() {\n        final long startupTime = 500;\n        ExecutionThreadServiceWithDelayableStartupAndShutdown service = new ExecutionThreadServiceWithDelayableStartupAndShutdown(startupTime, 0);\n        final String expectedServiceIdentifier = service.getClass().getSimpleName();\n\n        assertServicesToStringContainsExpectedIdentifier(service, expectedServiceIdentifier);\n        makeAwaitRunningTimeoutAndAssertExceptionMessageConatinsExpectedIdentifier(service, expectedServiceIdentifier, startupTime);\n    }\n\n    @Test\n    public void testGivenAnExecutionThreadServiceWhenAwaitTerminatedIsCalledAndItTimesOutThenTheTimeOutExceptionHasServiceNameInIt() {\n        final long shutdownTime = 500;\n        ExecutionThreadServiceWithDelayableStartupAndShutdown service = new ExecutionThreadServiceWithDelayableStartupAndShutdown(0, shutdownTime);\n        final String expectedServiceIdentifier = service.getClass().getSimpleName();\n\n        assertServicesToStringContainsExpectedIdentifier(service, expectedServiceIdentifier);\n        makeAwaitTerminateTimeoutAndAssertExceptionMessageContainsExpectedIdentifier(service, expectedServiceIdentifier, shutdownTime);\n    }\n\n    @Test\n    public void testGivenAScheduledServiceWhenAwaitRunningIsCalledAndItTimesOutThenTheTimeOutExceptionHasServiceNameInIt() {\n        final long startupTime = 500;\n        ScheduledServiceWithDelayableStartupAndShutdown service = new ScheduledServiceWithDelayableStartupAndShutdown(startupTime, 0);\n        final String expectedServiceIdentifier = service.getClass().getSimpleName();\n\n        assertServicesToStringContainsExpectedIdentifier(service, expectedServiceIdentifier);\n        makeAwaitRunningTimeoutAndAssertExceptionMessageConatinsExpectedIdentifier(service, expectedServiceIdentifier, startupTime);\n    }\n\n    @Test\n    public void testGivenAScheduledServiceWhenAwaitTerminatedIsCalledAndItTimesOutThenTheTimeOutExceptionHasServiceNameInIt() {\n        final long shutdownTime = 500;\n        ScheduledServiceWithDelayableStartupAndShutdown service = new ScheduledServiceWithDelayableStartupAndShutdown(0, shutdownTime);\n        final String expectedServiceIdentifier = service.getClass().getSimpleName();\n\n        assertServicesToStringContainsExpectedIdentifier(service, expectedServiceIdentifier);\n        makeAwaitTerminateTimeoutAndAssertExceptionMessageContainsExpectedIdentifier(service, expectedServiceIdentifier, shutdownTime);\n    }\n\n\n    private <T extends Service> void assertServicesToStringContainsExpectedIdentifier(final T service, final String expectedServiceIdentifier) {\n        assertTrue(\"The service toString() didn't contain what i expected : expected(\" + expectedServiceIdentifier + \") toString result(\" + service.toString() + \")\",\n                   service.toString().contains(expectedServiceIdentifier));\n    }\n\n    private <T extends Service> void makeAwaitRunningTimeoutAndAssertExceptionMessageConatinsExpectedIdentifier(final T service, final String expectedServiceIdentifier,\n                                                                                                                final long startupTime) {\n        try {\n            service.startAsync().awaitRunning(startupTime - 50, TimeUnit.MILLISECONDS);\n            fail(\"It should have timed out and threw TimeOutException\");\n        } catch (TimeoutException e) {\n            assertTrue(\"The exception message should have had the Services name/classname in it : service name(\" + expectedServiceIdentifier + \") exception message(\" + e\n                    .getMessage() + \")\", e.getMessage().contains(expectedServiceIdentifier));\n        }\n    }\n\n    private <T extends Service> void makeAwaitTerminateTimeoutAndAssertExceptionMessageContainsExpectedIdentifier(final T service, final String expectedServiceIdentifier,\n                                                                                                                  final long shutdownTime) {\n        try {\n            service.startAsync().awaitTerminated(shutdownTime - 50, TimeUnit.MILLISECONDS);\n            fail(\"It should have timed out and threw TimeOutException\");\n        } catch (TimeoutException e) {\n            assertTrue(\"The exception message should have had the Services name/classname in it : service name(\" + expectedServiceIdentifier + \") exception message(\" + e\n                    .getMessage() + \")\", e.getMessage().contains(expectedServiceIdentifier));\n        }\n    }\n\n\n    public static class IdleServiceWithDelayableStartupAndShutdown extends AbstractIdleService {\n\n        private final long millisStartupDelay;\n        private final long millisShutdownDelay;\n\n        public IdleServiceWithDelayableStartupAndShutdown(final long millisStartupDelay, final long millisShutdownDelay) {\n\n            this.millisStartupDelay = millisStartupDelay;\n            this.millisShutdownDelay = millisShutdownDelay;\n        }\n\n        @Override\n        protected void startUp() throws Exception {\n            Thread.sleep(this.millisStartupDelay);\n        }\n\n        @Override\n        protected void shutDown() throws Exception {\n            Thread.sleep(this.millisShutdownDelay);\n        }\n    }\n\n    public static class ExecutionThreadServiceWithDelayableStartupAndShutdown extends AbstractExecutionThreadService {\n\n        private final long millisStartupDelay;\n        private final long millisShutdownDelay;\n\n        public ExecutionThreadServiceWithDelayableStartupAndShutdown(final long millisStartupDelay, final long millisShutdownDelay) {\n\n            this.millisStartupDelay = millisStartupDelay;\n            this.millisShutdownDelay = millisShutdownDelay;\n        }\n\n        @Override\n        protected void startUp() throws Exception {\n            Thread.sleep(this.millisStartupDelay);\n        }\n\n        @Override\n        protected void run() throws Exception {\n        }\n\n        @Override\n        protected void shutDown() throws Exception {\n            Thread.sleep(this.millisShutdownDelay);\n        }\n    }\n\n    public static class ScheduledServiceWithDelayableStartupAndShutdown extends AbstractScheduledService {\n\n        private final long millisStartupDelay;\n        private final long millisShutdownDelay;\n\n        public ScheduledServiceWithDelayableStartupAndShutdown(final long millisStartupDelay, final long millisShutdownDelay) {\n\n            this.millisStartupDelay = millisStartupDelay;\n            this.millisShutdownDelay = millisShutdownDelay;\n        }\n\n        @Override\n        protected void runOneIteration() throws Exception {\n        }\n\n        @Override\n        protected void startUp() throws Exception {\n            Thread.sleep(this.millisStartupDelay);\n        }\n\n        @Override\n        protected void shutDown() throws Exception {\n            Thread.sleep(this.millisShutdownDelay);\n        }\n\n        @Override\n        protected Scheduler scheduler() {\n            return Scheduler.newFixedDelaySchedule(0, 100, TimeUnit.MILLISECONDS);\n        }\n    }\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2124",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2124/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2124/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2124/events",
    "html_url": "https://github.com/google/guava/issues/2124",
    "id": 98817592,
    "node_id": "MDU6SXNzdWU5ODgxNzU5Mg==",
    "number": 2124,
    "title": "Use String.getBytes(Charset) and other Charset utilities once GWT supports them",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 321689268,
        "node_id": "MDU6TGFiZWwzMjE2ODkyNjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=gwt",
        "name": "platform=gwt",
        "color": "ff9560",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/17",
      "html_url": "https://github.com/google/guava/milestone/17",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/17/labels",
      "id": 1313983,
      "node_id": "MDk6TWlsZXN0b25lMTMxMzk4Mw==",
      "number": 17,
      "title": "20.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 36,
      "state": "closed",
      "created_at": "2015-09-18T19:55:48Z",
      "updated_at": "2017-09-12T19:44:04Z",
      "due_on": null,
      "closed_at": "2016-10-28T21:21:39Z"
    },
    "comments": 0,
    "created_at": "2015-08-03T19:05:12Z",
    "updated_at": "2016-02-11T22:07:56Z",
    "closed_at": "2016-01-07T22:50:31Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The next GWT release will probably have emulations for `Charset` built in. Internal CL 99622756 will be removing our custom emulations, but I think we can go further, changing calls to methods like `getBytes` to use the `Charset` versions.\n\nThis assumes that we require the new GWT version for the post-19 Guava release. This was not the plan on #1999 but might be reasonable. Otherwise, we need a workaround. We'd need to figure out if our emulations would interfere with the GWT versions for users who _are_ using the new GWT.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2123",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2123/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2123/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2123/events",
    "html_url": "https://github.com/google/guava/issues/2123",
    "id": 98796174,
    "node_id": "MDU6SXNzdWU5ODc5NjE3NA==",
    "number": 2123,
    "title": "New Collection type: PredicateMap",
    "user": {
      "login": "Invizible",
      "id": 6739134,
      "node_id": "MDQ6VXNlcjY3MzkxMzQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6739134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Invizible",
      "html_url": "https://github.com/Invizible",
      "followers_url": "https://api.github.com/users/Invizible/followers",
      "following_url": "https://api.github.com/users/Invizible/following{/other_user}",
      "gists_url": "https://api.github.com/users/Invizible/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Invizible/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Invizible/subscriptions",
      "organizations_url": "https://api.github.com/users/Invizible/orgs",
      "repos_url": "https://api.github.com/users/Invizible/repos",
      "events_url": "https://api.github.com/users/Invizible/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Invizible/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-08-03T17:12:25Z",
    "updated_at": "2015-08-03T19:25:44Z",
    "closed_at": "2015-08-03T19:25:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to have a new collection type like RangeMap, but instead of Range, I would like to retrieve values using Predicate. For instance, assume we are writing class which generates random values for given type.\nIf we use ordinary map we have to duplicate keys:\n\n``` java\n  private final ImmutableMap<Class<?>, Randomizer> RANDOMIZERS = ImmutableMap.<Class<?>, Randomizer>builder()\n          .put(byte.class, byteRandomizer)\n          .put(Byte.class, byteRandomizer)\n          .put(short.class, shortRandomizer)\n          .put(Short.class, shortRandomizer)\n          .put(Collection.class, collectionRandomizer)\n          .put(List.class, collectionRandomizer)\n          .put(ArrayList.class, collectionRandomizer)\n          //...\n          .build();\n\n   public Object getRandomValueOf(Class<?> type) {\n        Randomizer randomizer = RANDOMIZERS.get(type);\n\n        if (randomizer == null) {\n            randomizer = new DefaultRandomizer(this);\n        }\n\n        return randomizer.random(type);\n    }\n```\n\nIf we were able to use Predicates this code would be shorter:\n\n``` java\n private final PredicateMap<Class<?>, Randomizer> RANDOMIZERS = MutablePredicateMap.<Class<?>, Randomizer>builder()\n            .put(Predicates.<Class<?>>in(Arrays.asList(byte.class, Byte.class)), byteRandomizer)\n            .put(Predicates.<Class<?>>in(Arrays.asList(short.class, Short.class)), shortRandomizer)\n            .put(isEnum(), enumRandomizer)\n            .put(instanceOf(Collection.class), collectionRandomizer)\n            .build();\n```\n\nWhy did I use maps? I think it's better than long if-else operators.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2122",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2122/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2122/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2122/events",
    "html_url": "https://github.com/google/guava/pull/2122",
    "id": 98516358,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDEzOTc5MDI=",
    "number": 2122,
    "title": "Ensure the correct removal notification is published (fixes #2101)",
    "user": {
      "login": "ben-manes",
      "id": 378614,
      "node_id": "MDQ6VXNlcjM3ODYxNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/378614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-manes",
      "html_url": "https://github.com/ben-manes",
      "followers_url": "https://api.github.com/users/ben-manes/followers",
      "following_url": "https://api.github.com/users/ben-manes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-manes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-manes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-manes/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-manes/orgs",
      "repos_url": "https://api.github.com/users/ben-manes/repos",
      "events_url": "https://api.github.com/users/ben-manes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-manes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-08-01T07:10:02Z",
    "updated_at": "2015-11-30T22:35:33Z",
    "closed_at": "2015-11-30T22:35:33Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2122",
      "html_url": "https://github.com/google/guava/pull/2122",
      "diff_url": "https://github.com/google/guava/pull/2122.diff",
      "patch_url": "https://github.com/google/guava/pull/2122.patch"
    },
    "body": "Ensures that the correct removal notification is published by `Segment#clear()`. Previously the operation was using the cause `EXPLICIT` when pending maintenance for expiration or collection would take precedence.\n\nFor additional safety, publishing notifications require passing a strong reference of both the key and value. This ensures that compiler reordering and races with the GC do not result in a reference collection and publishing a null value. This may not have been a problem due to happens-before ordering across methods, but simplifies away having to make these assumptions.\n\nIn addition to adding an expiration test, verified by removing the workaround in Caffeine's fixture. The tests pass with the changes and fail with 19-rc1.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2121",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2121/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2121/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2121/events",
    "html_url": "https://github.com/google/guava/issues/2121",
    "id": 98380850,
    "node_id": "MDU6SXNzdWU5ODM4MDg1MA==",
    "number": 2121,
    "title": "simplifyPath for windows paths",
    "user": {
      "login": "mattnathan",
      "id": 708746,
      "node_id": "MDQ6VXNlcjcwODc0Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/708746?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattnathan",
      "html_url": "https://github.com/mattnathan",
      "followers_url": "https://api.github.com/users/mattnathan/followers",
      "following_url": "https://api.github.com/users/mattnathan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattnathan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattnathan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattnathan/subscriptions",
      "organizations_url": "https://api.github.com/users/mattnathan/orgs",
      "repos_url": "https://api.github.com/users/mattnathan/repos",
      "events_url": "https://api.github.com/users/mattnathan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattnathan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-07-31T12:25:50Z",
    "updated_at": "2015-09-18T19:54:41Z",
    "closed_at": "2015-09-18T19:54:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be nice if there was a way to simplify a Windows path - i.e. one separated by `\\` instead of `/`. Whether the existing `Files.simplifyPath` method is modified to use `File.separator{Char}` or whether a new method is required I don't know.\n\nAs a work around `Files.simplifyPath(path.replace('\\\\', '/')).replace('/', '\\\\')` would work.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2120",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2120/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2120/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2120/events",
    "html_url": "https://github.com/google/guava/issues/2120",
    "id": 98187880,
    "node_id": "MDU6SXNzdWU5ODE4Nzg4MA==",
    "number": 2120,
    "title": "possible for one final update of InternetDomainName (psl) before 19.0 release",
    "user": {
      "login": "jgangemi",
      "id": 1831839,
      "node_id": "MDQ6VXNlcjE4MzE4Mzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1831839?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgangemi",
      "html_url": "https://github.com/jgangemi",
      "followers_url": "https://api.github.com/users/jgangemi/followers",
      "following_url": "https://api.github.com/users/jgangemi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgangemi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgangemi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgangemi/subscriptions",
      "organizations_url": "https://api.github.com/users/jgangemi/orgs",
      "repos_url": "https://api.github.com/users/jgangemi/repos",
      "events_url": "https://api.github.com/users/jgangemi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgangemi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 6,
    "created_at": "2015-07-30T14:49:14Z",
    "updated_at": "2015-08-19T03:54:54Z",
    "closed_at": "2015-08-19T03:54:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "would it be possible to ensure `InternetDomainName` rolls out w/ the latest version of the PSL (or as close to it as you can get) before release?\n\ni don't know when the official release is slated for, but according to this site, https://iwantmyname.com/domains/new-gtld-launch-dates, there are new tlds on the horizon and depending on how quickly mozilla updates, it'd be nice to see as many of these included in the next release.\n\nit'd also be great to see something happen w/ #1123 /  #475 \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2119",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2119/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2119/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2119/events",
    "html_url": "https://github.com/google/guava/issues/2119",
    "id": 97923756,
    "node_id": "MDU6SXNzdWU5NzkyMzc1Ng==",
    "number": 2119,
    "title": "Introduce a MinMaxPriorityQueue#builder",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-07-29T12:20:39Z",
    "updated_at": "2015-07-31T17:22:30Z",
    "closed_at": "2015-07-30T18:09:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Related**: This issue came out of #2118.\n\n**Background**: Most Guava data structures has a `builder()` method to instantiate a builder and it seems that's the default way of constructing/finding a builder.\n\n**Proposal**: Introduce `MinMaxPriorityQueue#builder` to adhere to the above principle. Currently the API is somewhat unclear how the builder works. Is there a reason why the builder method doesn't exist?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2116",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2116/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2116/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2116/events",
    "html_url": "https://github.com/google/guava/issues/2116",
    "id": 97037613,
    "node_id": "MDU6SXNzdWU5NzAzNzYxMw==",
    "number": 2116,
    "title": "java.lang.NoSuchMethodError: com.google.common.util.concurrent.Futures.withFallback",
    "user": {
      "login": "umesh9794",
      "id": 7439619,
      "node_id": "MDQ6VXNlcjc0Mzk2MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7439619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/umesh9794",
      "html_url": "https://github.com/umesh9794",
      "followers_url": "https://api.github.com/users/umesh9794/followers",
      "following_url": "https://api.github.com/users/umesh9794/following{/other_user}",
      "gists_url": "https://api.github.com/users/umesh9794/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/umesh9794/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/umesh9794/subscriptions",
      "organizations_url": "https://api.github.com/users/umesh9794/orgs",
      "repos_url": "https://api.github.com/users/umesh9794/repos",
      "events_url": "https://api.github.com/users/umesh9794/events{/privacy}",
      "received_events_url": "https://api.github.com/users/umesh9794/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-07-24T11:55:19Z",
    "updated_at": "2017-07-03T17:46:57Z",
    "closed_at": "2015-07-30T18:14:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![jar](https://cloud.githubusercontent.com/assets/7439619/8873965/a6db4cee-3229-11e5-9d75-20f2c128e269.png)\nI am using Guava v 17.0 dependency in Maven and Cassandra connection is established successfully.\nBut when I run same JAR on Hadoop 2.0.0-CDH4.3.1, It throws me error \n\njava.lang.NoSuchMethodError: com.google.common.util.concurrent.Futures.withFallback(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureFallback;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;\n\nWhen I look at the Guava v17.0 JAR I cant find Futures.withFallback static method. \nIs it related to Hadoop's version compatibility with Guava as Cassandra got connected when not running on Hadoop.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2115",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2115/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2115/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2115/events",
    "html_url": "https://github.com/google/guava/issues/2115",
    "id": 97014970,
    "node_id": "MDU6SXNzdWU5NzAxNDk3MA==",
    "number": 2115,
    "title": "Maps.transformKeys",
    "user": {
      "login": "tonycody",
      "id": 6773121,
      "node_id": "MDQ6VXNlcjY3NzMxMjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6773121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonycody",
      "html_url": "https://github.com/tonycody",
      "followers_url": "https://api.github.com/users/tonycody/followers",
      "following_url": "https://api.github.com/users/tonycody/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonycody/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonycody/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonycody/subscriptions",
      "organizations_url": "https://api.github.com/users/tonycody/orgs",
      "repos_url": "https://api.github.com/users/tonycody/repos",
      "events_url": "https://api.github.com/users/tonycody/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonycody/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-07-24T09:44:09Z",
    "updated_at": "2017-06-21T14:53:15Z",
    "closed_at": "2015-07-30T18:15:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Maps.transformValues()\nnonsupport key\n\n``` java\n// Map<String,String> ——> Map<byte[],byte[]>\nHashMap<String, String> fromHashMap = new HashMap<String, String>();\n                HashMap<byte[], byte[]> target =\n                    Maps.transformValues(fromHashMap, new Function<String, byte[]>() {\n                        public byte[] apply(String input){\n                            return input.getBytes();\n                        }\n                    });\n\n// commons-collection\nMap map = MapUtils.transformedMap(hash, new Transformer() {\n                    public Object transform(Object input){\n                        return ((String) input).getBytes();\n                    }\n                }, new Transformer() {\n                    public Object transform(Object input){\n                        return ((String) input).getBytes();\n                    }\n                });\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2114",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2114/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2114/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2114/events",
    "html_url": "https://github.com/google/guava/issues/2114",
    "id": 96518250,
    "node_id": "MDU6SXNzdWU5NjUxODI1MA==",
    "number": 2114,
    "title": "Feature: Be able to check if Cache#stats is enabled",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-07-22T09:19:28Z",
    "updated_at": "2015-07-30T21:30:42Z",
    "closed_at": "2015-07-30T18:17:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Use case:** I have a helper class that regularly polls a `Cache`'s `stats` and pushes them to metric storage. However, when the helper class is given a `Cache` I have no idea whether stats is initialized or not. If would be useful for me to be able to check whether enabled or not.\n\n**Feature request:** To be able to check whether stats has been enabled on a cache or not.\n\nPossibly related to #1054.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2112",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2112/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2112/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2112/events",
    "html_url": "https://github.com/google/guava/pull/2112",
    "id": 95911553,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDAzMDc0MDY=",
    "number": 2112,
    "title": "Use thread-local buffers to avoid memory allocation and improve performance",
    "user": {
      "login": "berndhopp",
      "id": 1919315,
      "node_id": "MDQ6VXNlcjE5MTkzMTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1919315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berndhopp",
      "html_url": "https://github.com/berndhopp",
      "followers_url": "https://api.github.com/users/berndhopp/followers",
      "following_url": "https://api.github.com/users/berndhopp/following{/other_user}",
      "gists_url": "https://api.github.com/users/berndhopp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berndhopp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berndhopp/subscriptions",
      "organizations_url": "https://api.github.com/users/berndhopp/orgs",
      "repos_url": "https://api.github.com/users/berndhopp/repos",
      "events_url": "https://api.github.com/users/berndhopp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berndhopp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 25,
    "created_at": "2015-07-19T12:23:19Z",
    "updated_at": "2018-06-27T17:31:26Z",
    "closed_at": "2018-06-27T16:14:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2112",
      "html_url": "https://github.com/google/guava/pull/2112",
      "diff_url": "https://github.com/google/guava/pull/2112.diff",
      "patch_url": "https://github.com/google/guava/pull/2112.patch"
    },
    "body": "# Abstract\n\ngoal of this PR is to replace\n\n```\nbyte[] buf = new byte[BUF_SIZE];\nByteArrayOutputStream baos = new ByteArrayOutputStream();\n```\n\nwith\n\n```\nBuffers.Lease<byte[]> lease = Buffers.leaseByteArray();\n\ntry{\n   byte[] buffer = lease.getBuffer();\n} finally {\n    lease.returnLease();\n}\n\nBuffers.Lease<ByteArrayOutputStream> lease = Buffers.leaseByteArrayOutputStream();\n\ntry{\n   ByteArrayOutputStream baos = lease.getBuffer();\n} finally {\n    lease.returnLease();\n}\n\n\n```\n\nin all cases where byte-array or ByteArrayOutputStreams are used method-internal, this way avoiding unneccessary memory allocation, increasing performance and enhancing the memory profile. \n# Implementation\n\n[ThreadLocalBuffers](https://github.com/berndhopp/guava/blob/master/guava/src/com/google/common/io/\nBuffers.java) is the manager of thread-local byte-arrays and FastByteArrayOutputStreams. It uses [SoftReferences](https://docs.oracle.com/javase/6/docs/api/java/lang/ref/SoftReference.html) or [WeakReferences](https://docs.oracle.com/javase/6/docs/api/java/lang/ref/WeakReference.html) to store buffers, this way enabling Garbage Collection to collect the buffers when the system runs low on memory. All allocations of byte[] or ByteArrayOutputStream in where the allocated byte[]/BAOS is not the returned value of the method have been replaced with calls to ThreadLocalBuffers. \nByteSource.contentEquals was challenging, because it used not one but two byte-arrays for buffering, so I used two ByteBuffers that wrap around the upper and lower part of the thread-local buffer, thereby mimicking the two buffers.\n# Results\n\nThe microbenchmarks show that avoiding buffer allocation yields a significant performance boost. Tests that did not show significant differences are left out. There have been no tests where performance dropped more than 2.00%. \n\n| tested method | bytes copied | runtime w/ TL buffers | runtime w/out TL buffers | performance increase in % |\n| --- | --- | --- | --- | --- |\n| ByteStreams.copy | 10 | 105569 | 681130 | 545,2 |\n| ByteStreams.copy | 100 | 107411 | 698152 | 549,98 |\n| ByteStreams.copy | 10000 | 840354 | 1186307 | 41,17 |\n| ByteStreams.readBytes | 10 | 68917 | 633365 | 819,03 |\n| ByteStreams.readBytes | 100 | 69802 | 660336 | 846,01 |\n| ByteStreams.readBytes | 10000 | 360357 | 934588 | 159,35 |\n| ByteStreams.toByteArray | 10 | 122681 | 750095 | 511,42 |\n| ByteStreams.toByteArray | 100 | 131705 | 773561 | 487,34 |\n| ByteStreams.toByteArray | 10000 | 1962961 | 4962929 | 152,83 |\n| ByteSource.contentEquals | 10 | 647140 | 3614650 | 458,56 |\n| ByteSource.contentEquals | 100 | 685559 | 647694 | 453,81 |\n| ByteSource.contentEquals | 10000 | 5987317 | 9460941 | 58,02 |\n\nyou can find the results here:\n\n[ByteStreamsBenchmark w/ ThreadLocal](https://microbenchmarks.appspot.com/runs/087a68fc-af92-4971-97ae-346be17ee50b#r:scenario.benchmarkSpec.methodName,scenario.benchmarkSpec.parameters.n)\n[ByteStreamsBenchmark w/out ThreadLocal](https://microbenchmarks.appspot.com/runs/dfb1c1b7-b9e2-431c-91f9-3be2f19db2a7#r:scenario.benchmarkSpec.methodName,scenario.benchmarkSpec.parameters.n)\n[ByteSourceBenchmark w ThreadLocal](https://microbenchmarks.appspot.com/runs/f5517421-8f23-4237-9de1-f7d9e4c8f3ce#r:scenario.benchmarkSpec.parameters.n)\n[ByteSourceBenchmark w/out ThreadLocal](https://microbenchmarks.appspot.com/runs/573ac1ff-a1e9-4870-9b0d-414e77e163e6#r:scenario.benchmarkSpec.parameters.n)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2111",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2111/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2111/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2111/events",
    "html_url": "https://github.com/google/guava/pull/2111",
    "id": 95907608,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDAzMDY3MTc=",
    "number": 2111,
    "title": "Use thread-local buffers to avoid memory allocation and improve performance",
    "user": {
      "login": "berndhopp",
      "id": 1919315,
      "node_id": "MDQ6VXNlcjE5MTkzMTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1919315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/berndhopp",
      "html_url": "https://github.com/berndhopp",
      "followers_url": "https://api.github.com/users/berndhopp/followers",
      "following_url": "https://api.github.com/users/berndhopp/following{/other_user}",
      "gists_url": "https://api.github.com/users/berndhopp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/berndhopp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/berndhopp/subscriptions",
      "organizations_url": "https://api.github.com/users/berndhopp/orgs",
      "repos_url": "https://api.github.com/users/berndhopp/repos",
      "events_url": "https://api.github.com/users/berndhopp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/berndhopp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-07-19T11:18:07Z",
    "updated_at": "2015-07-19T12:06:26Z",
    "closed_at": "2015-07-19T12:06:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2111",
      "html_url": "https://github.com/google/guava/pull/2111",
      "diff_url": "https://github.com/google/guava/pull/2111.diff",
      "patch_url": "https://github.com/google/guava/pull/2111.patch"
    },
    "body": "# Abstract\n\ngoal of this PR is to replace the often seen but unneccessary \n\n```\nbyte[] buf = new byte[BUF_SIZE];\n```\n\nor \n\n```\nByteArrayOutputStream baos = new ByteArrayOutputStream();\n\n```\n\n with thread-local instances of the respective types in all cases where they are used method-internal, this way avoiding unneccessary memory allocation, increasing performance and enhancing the memory profile. \n# Implementation\n\n[ThreadLocalBuffers](https://github.com/berndhopp/guava/blob/master/guava/src/com/google/common/io/ThreadLocalBuffers.java) is the manager of thread-local buffers. It uses [SoftReferences](https://docs.oracle.com/javase/6/docs/api/java/lang/ref/SoftReference.html) to store buffers, this way enabling Garbage Collection to collect the buffers when the system runs low on memory. This class is package-local right now but can eventually be made public for other scenarios where a buffer is needed.\nAll allocations of byte[] or ByteArrayOutputStream where the allocated byte[]/BAOS was not the returned value of the method have been replaced with calls to ThreadLocalBuffers. \n\nByteSource.contentEquals was challenging, because it used not one but two byte-arrays for buffering, so I used two ByteBuffers that wrap around the upper and lower part of the thread-local buffer, thereby mimicking the two buffers.\n# Results\n\nThe microbenchmarks show that avoiding buffer allocation yields a significant performance boost. \n\n| tested method | bytes copied | runtime w/ TL buffers | runtime w/out TL buffers | performance increase in % |\n| --- | --- | --- | --- | --- |\n| ByteStreams.copy | 10 | 105569 | 681130 | 645,2 |\n| ByteStreams.copy | 100 | 107411 | 698152 | 649,98 |\n| ByteStreams.copy | 10000 | 840354 | 1186307 | 141,17 |\n| ByteStreams.readBytes | 10 | 68917 | 633365 | 919,03 |\n| ByteStreams.readBytes | 100 | 69802 | 660336 | 946,01 |\n| ByteStreams.readBytes | 10000 | 360357 | 934588 | 259,35 |\n| ByteStreams.toByteArray | 10 | 122681 | 750095 | 611,42 |\n| ByteStreams.toByteArray | 100 | 131705 | 773561 | 587,34 |\n| ByteStreams.toByteArray | 10000 | 1962961 | 4962929 | 252,83 |\n| ByteSource.contentEquals | 10 | 647249 | 3614650 | 558,46 |\n| ByteSource.contentEquals | 100 | 685559 | 3586983 | 523,22 |\n| ByteSource.contentEquals | 10000 | 696307 | 9460941 | 1358,73 |\n\nyou can find the results here:\n\n[ByteStreamsBenchmark w/ ThreadLocal](https://microbenchmarks.appspot.com/runs/087a68fc-af92-4971-97ae-346be17ee50b)\n[ByteStreamsBenchmark w/out ThreadLocal](https://microbenchmarks.appspot.com/runs/dfb1c1b7-b9e2-431c-91f9-3be2f19db2a7)\n[ByteSourceBenchmark w ThreadLocal](https://microbenchmarks.appspot.com/runs/f5517421-8f23-4237-9de1-f7d9e4c8f3ce)\n[ByteSourceBenchmark w/out ThreadLocal](https://microbenchmarks.appspot.com/runs/573ac1ff-a1e9-4870-9b0d-414e77e163e6)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2110",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2110/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2110/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2110/events",
    "html_url": "https://github.com/google/guava/issues/2110",
    "id": 95668278,
    "node_id": "MDU6SXNzdWU5NTY2ODI3OA==",
    "number": 2110,
    "title": "RemovalListener is called not each time when an entry was evicted.",
    "user": {
      "login": "asukhorukova",
      "id": 3063160,
      "node_id": "MDQ6VXNlcjMwNjMxNjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3063160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asukhorukova",
      "html_url": "https://github.com/asukhorukova",
      "followers_url": "https://api.github.com/users/asukhorukova/followers",
      "following_url": "https://api.github.com/users/asukhorukova/following{/other_user}",
      "gists_url": "https://api.github.com/users/asukhorukova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asukhorukova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asukhorukova/subscriptions",
      "organizations_url": "https://api.github.com/users/asukhorukova/orgs",
      "repos_url": "https://api.github.com/users/asukhorukova/repos",
      "events_url": "https://api.github.com/users/asukhorukova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asukhorukova/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2015-07-17T14:30:43Z",
    "updated_at": "2020-06-28T10:07:51Z",
    "closed_at": "2015-07-30T18:22:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a `RemovalListener` attached to `LoadingCache`.\nWhen the cache is accessed frequently, everything works good.\nIf there is no activity with the cache since entry write till entry expiration, then expired entity is \"silently\" evicted and removal listener is not called.\n\nTried with `expireAfterWrite == refreshAfterWrite` and `expireAfterWrite > refreshAfterWrite`.\n\nNot sure whether it's a bug or designed behaviour caused by combination of config params. Anyway, I cannot find the solution for the problem in the documentation.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2108",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2108/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2108/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2108/events",
    "html_url": "https://github.com/google/guava/issues/2108",
    "id": 95127201,
    "node_id": "MDU6SXNzdWU5NTEyNzIwMQ==",
    "number": 2108,
    "title": "Cache.asMap().size() may return a negative value",
    "user": {
      "login": "ben-manes",
      "id": 378614,
      "node_id": "MDQ6VXNlcjM3ODYxNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/378614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-manes",
      "html_url": "https://github.com/ben-manes",
      "followers_url": "https://api.github.com/users/ben-manes/followers",
      "following_url": "https://api.github.com/users/ben-manes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-manes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-manes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-manes/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-manes/orgs",
      "repos_url": "https://api.github.com/users/ben-manes/repos",
      "events_url": "https://api.github.com/users/ben-manes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-manes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 7,
    "created_at": "2015-07-15T07:40:36Z",
    "updated_at": "2015-07-30T19:49:13Z",
    "closed_at": "2015-07-30T19:49:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "My multithreaded thrashing tests failed with Guava due to `size()` returning a negative value. The size is used for verifying that the `toArray()` methods are threadsafe (this was a common bug until JDK6 rewrote AbstractCollection's to be tolerant to races). The lines in question are,\n\n``` java\n(cache, key) -> cache.asMap().keySet().toArray(new Object[cache.asMap().size()]),\n(cache, key) -> cache.asMap().values().toArray(new Object[cache.asMap().size()]),\n(cache, key) -> cache.asMap().entrySet().toArray(new Entry[cache.asMap().size()]),\n```\n\nThis results in a `NegativeArraySizeException` unless worked around using `Math.max(0, cache.asMap().size())` which is now done in the guava fixture. I'm not sure why this occurs, and only happened after tweaking some JVM args. Regardless this failure was reproducible and is simple to fix.\n\n```\njava.lang.NegativeArraySizeException\nat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$new$280(MultiThreadedTest.java:142)\nat com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$29/584234975.accept(Unknown Source)\nat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.github.benmanes.caffeine.testing.ConcurrentTestHarness.lambda$timeTasks$344(ConcurrentTestHarness.java:100)\nat com.github.benmanes.caffeine.testing.ConcurrentTestHarness$$Lambda$61/1027825150.run(Unknown Source)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\nat java.lang.Thread.run(Thread.java:745)\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2107",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2107/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2107/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2107/events",
    "html_url": "https://github.com/google/guava/issues/2107",
    "id": 95108655,
    "node_id": "MDU6SXNzdWU5NTEwODY1NQ==",
    "number": 2107,
    "title": "Make AbstractTable public",
    "user": {
      "login": "michaelhixson",
      "id": 297150,
      "node_id": "MDQ6VXNlcjI5NzE1MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/297150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelhixson",
      "html_url": "https://github.com/michaelhixson",
      "followers_url": "https://api.github.com/users/michaelhixson/followers",
      "following_url": "https://api.github.com/users/michaelhixson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelhixson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelhixson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelhixson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelhixson/orgs",
      "repos_url": "https://api.github.com/users/michaelhixson/repos",
      "events_url": "https://api.github.com/users/michaelhixson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelhixson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-07-15T05:17:29Z",
    "updated_at": "2015-07-30T18:26:40Z",
    "closed_at": "2015-07-30T18:26:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was writing my own `Table` implementation today and realized I was duplicating much of the logic in Guava's `AbstractTable`, which is package-private.  I also realized I got a few implementation details wrong.  I can't copy and paste the code into my own project because `AbstractTable` relies on other package-private utilities in a few places.\n\nCould you make `AbstractTable` public, so that other people can use it as a good starting point for their own custom tables?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2106",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2106/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2106/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2106/events",
    "html_url": "https://github.com/google/guava/pull/2106",
    "id": 94913786,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk5MDE1MTY=",
    "number": 2106,
    "title": "Add missing @throws tags to methods of the class Verify",
    "user": {
      "login": "albertogoffi",
      "id": 7849335,
      "node_id": "MDQ6VXNlcjc4NDkzMzU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7849335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertogoffi",
      "html_url": "https://github.com/albertogoffi",
      "followers_url": "https://api.github.com/users/albertogoffi/followers",
      "following_url": "https://api.github.com/users/albertogoffi/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertogoffi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertogoffi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertogoffi/subscriptions",
      "organizations_url": "https://api.github.com/users/albertogoffi/orgs",
      "repos_url": "https://api.github.com/users/albertogoffi/repos",
      "events_url": "https://api.github.com/users/albertogoffi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertogoffi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-07-14T10:21:23Z",
    "updated_at": "2016-01-28T14:00:09Z",
    "closed_at": "2016-01-28T14:00:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2106",
      "html_url": "https://github.com/google/guava/pull/2106",
      "diff_url": "https://github.com/google/guava/pull/2106.diff",
      "patch_url": "https://github.com/google/guava/pull/2106.patch"
    },
    "body": "Some methods of the class `Verify` miss the proper `@throws` tag. To be consistent with the method `Verify.verify(boolean, String, Object...)`, which already contains the proper `@throws` comment, I added the `@throws` tag where missing.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2105",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2105/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2105/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2105/events",
    "html_url": "https://github.com/google/guava/issues/2105",
    "id": 94751901,
    "node_id": "MDU6SXNzdWU5NDc1MTkwMQ==",
    "number": 2105,
    "title": "Version information missing",
    "user": {
      "login": "lamasp",
      "id": 3482714,
      "node_id": "MDQ6VXNlcjM0ODI3MTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3482714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lamasp",
      "html_url": "https://github.com/lamasp",
      "followers_url": "https://api.github.com/users/lamasp/followers",
      "following_url": "https://api.github.com/users/lamasp/following{/other_user}",
      "gists_url": "https://api.github.com/users/lamasp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lamasp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lamasp/subscriptions",
      "organizations_url": "https://api.github.com/users/lamasp/orgs",
      "repos_url": "https://api.github.com/users/lamasp/repos",
      "events_url": "https://api.github.com/users/lamasp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lamasp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-07-13T15:45:38Z",
    "updated_at": "2015-08-19T03:56:07Z",
    "closed_at": "2015-08-19T03:56:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to identify what the latest version of Guava is, and where it can be downloaded from. This information is needed for a third party dependencies security review of a PCI DSS application, where guava is a dependency. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2104",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2104/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2104/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2104/events",
    "html_url": "https://github.com/google/guava/issues/2104",
    "id": 94702129,
    "node_id": "MDU6SXNzdWU5NDcwMjEyOQ==",
    "number": 2104,
    "title": "Documentation: Broken link",
    "user": {
      "login": "JensRantil",
      "id": 730342,
      "node_id": "MDQ6VXNlcjczMDM0Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JensRantil",
      "html_url": "https://github.com/JensRantil",
      "followers_url": "https://api.github.com/users/JensRantil/followers",
      "following_url": "https://api.github.com/users/JensRantil/following{/other_user}",
      "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions",
      "organizations_url": "https://api.github.com/users/JensRantil/orgs",
      "repos_url": "https://api.github.com/users/JensRantil/repos",
      "events_url": "https://api.github.com/users/JensRantil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JensRantil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-07-13T11:46:09Z",
    "updated_at": "2015-09-19T09:42:15Z",
    "closed_at": "2015-09-18T20:19:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/google/guava/wiki/ImmutableCollectionsExplained#why refers to https://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures (link text: analysis), which doen't exist anymore.\n\nThe old equivalent https://code.google.com/p/guava-libraries/wiki/ImmutableCollectionsExplained#Why? also points to that same broken link.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2103",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2103/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2103/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2103/events",
    "html_url": "https://github.com/google/guava/issues/2103",
    "id": 94307643,
    "node_id": "MDU6SXNzdWU5NDMwNzY0Mw==",
    "number": 2103,
    "title": "InPredicate#equals broken (or test passing unintentionally)",
    "user": {
      "login": "mttkay",
      "id": 102802,
      "node_id": "MDQ6VXNlcjEwMjgwMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/102802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mttkay",
      "html_url": "https://github.com/mttkay",
      "followers_url": "https://api.github.com/users/mttkay/followers",
      "following_url": "https://api.github.com/users/mttkay/following{/other_user}",
      "gists_url": "https://api.github.com/users/mttkay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mttkay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mttkay/subscriptions",
      "organizations_url": "https://api.github.com/users/mttkay/orgs",
      "repos_url": "https://api.github.com/users/mttkay/repos",
      "events_url": "https://api.github.com/users/mttkay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mttkay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-07-10T13:28:45Z",
    "updated_at": "2015-07-30T18:30:02Z",
    "closed_at": "2015-07-30T18:29:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is Guava 18.0.\n\nI just noticed that the equality test for `Predicates.in` uses sets to test predicate equality:\n\n```\n  public void testIn_equality() {\n    Collection<Integer> nums = ImmutableSet.of(1, 5);\n    Collection<Integer> sameOrder = ImmutableSet.of(1, 5);\n    Collection<Integer> differentOrder = ImmutableSet.of(5, 1);\n    Collection<Integer> differentNums = ImmutableSet.of(1, 3, 5);\n\n    new EqualsTester()\n        .addEqualityGroup(Predicates.in(nums), Predicates.in(nums),\n            Predicates.in(sameOrder), Predicates.in(differentOrder))\n        .addEqualityGroup(Predicates.in(differentNums))\n        .testEquals();\n  }\n```\n\nThis test passes, but only accidentally. What it appears to test is that two `InPredicate`s are equal, if their `target` collections contain the same elements in any order. This test will fail, however, when you replace `ImmutableSet` with an ordered type like List. It only passes because `equals` on `Set`s is true despite of element order, and `InPredicate` simply forwards `equals` to its targets. From what I understand, `InPredicate#equals` should be true even if its target collections are ordered collections.\n\nSo this is either a misleading test, or `InPredicate#equals` does not work as intended.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2102",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2102/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2102/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2102/events",
    "html_url": "https://github.com/google/guava/issues/2102",
    "id": 93906738,
    "node_id": "MDU6SXNzdWU5MzkwNjczOA==",
    "number": 2102,
    "title": "BaseEncoding.encodingStream closes output stream when calling close()",
    "user": {
      "login": "sancoder",
      "id": 890077,
      "node_id": "MDQ6VXNlcjg5MDA3Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/890077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sancoder",
      "html_url": "https://github.com/sancoder",
      "followers_url": "https://api.github.com/users/sancoder/followers",
      "following_url": "https://api.github.com/users/sancoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sancoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancoder/subscriptions",
      "organizations_url": "https://api.github.com/users/sancoder/orgs",
      "repos_url": "https://api.github.com/users/sancoder/repos",
      "events_url": "https://api.github.com/users/sancoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sancoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-07-08T22:43:00Z",
    "updated_at": "2015-07-10T07:39:19Z",
    "closed_at": "2015-07-09T18:38:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my case I'm using BaseEncoding.base64() encoder to write the base64-encoded data into another stream.\nIt seems there is no way to write the data correctly without the target stream being closed at the end.\nI'm using the following code\n\n```\n    String lineSeparator = System.lineSeparator();\n    BaseEncoding encoder = BaseEncoding.base64().withSeparator(lineSeparator, 64);\n\n    String data;\n    data = \"{\\\"en_US\\\",0,0,\\\"\\\",-1,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"}\";\n    byte[] bytes = data.getBytes();\n    ByteArrayInputStream stream = new ByteArrayInputStream(bytes);\n\n    ByteArrayOutputStream writerStream = new ByteArrayOutputStream(100);\n    Writer writer = new OutputStreamWriter(writerStream);\n    OutputStream target = encoder.encodingStream(writer);\n    ByteStreams.copy(stream, target);\n    //target.close();\n    writer.write(\"\\n}, other text to be written\");\n    writer.close();\n```\n\nWhen I'm running the following snippet the result is \n\n```\n    eyJlbl9VUyIsMCwwLCIiLC0xLCIiLCIiLCIiLCIif\n    }, other text to be written\n```\n\nBut the correct result should be\n\n```\n    eyJlbl9VUyIsMCwwLCIiLC0xLCIiLCIiLCIiLCIifQ==\n    }, other text to be written\n```\n\nIf I uncomment the line with target.close call I get an exception that output stream has been closed.\nIf I comment the line with writer.write I get the correct result but the other text has not been written and output stream has been closed.\n\nMaybe this is a documentation issue and subject class shouldn't be used in such a scenario. In that case this should be stated in the documentation.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2101",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2101/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2101/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2101/events",
    "html_url": "https://github.com/google/guava/issues/2101",
    "id": 93726979,
    "node_id": "MDU6SXNzdWU5MzcyNjk3OQ==",
    "number": 2101,
    "title": "Wrong RemovalCause published on cache.invaldateAll()",
    "user": {
      "login": "ben-manes",
      "id": 378614,
      "node_id": "MDQ6VXNlcjM3ODYxNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/378614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-manes",
      "html_url": "https://github.com/ben-manes",
      "followers_url": "https://api.github.com/users/ben-manes/followers",
      "following_url": "https://api.github.com/users/ben-manes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-manes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-manes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-manes/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-manes/orgs",
      "repos_url": "https://api.github.com/users/ben-manes/repos",
      "events_url": "https://api.github.com/users/ben-manes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-manes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2015-07-08T08:04:36Z",
    "updated_at": "2015-12-01T19:30:16Z",
    "closed_at": "2015-11-30T22:26:14Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "When the cache is being cleared, either through `Cache.invalidateAll()` or `asMap().clear()`, the removal cause is always `EXPLICIT`. However the map may contain expired or GC'd entries that would be removed on the next maintenance cycle. The removal cause should indicate the actual state of the entry, not merely the action that triggered the eventual removal.\n\nDue to weak and soft references the key or value may be null. A listener should only expect to receive a null key or value if the cause is `COLLECTED`, as indicated by `RemovalNotification`:\n\n> The key and/or value may be null if they were already garbage collected.\n\nTherefore a listener might decide to inspect the properties without a null guard, leading to an NPE.\n\n``` java\n@Test\npublic void clear_expireAfterAccess() {\n  FakeTicker ticker = new FakeTicker();\n  RemovalListener<Integer, Integer> listener = Mockito.mock(RemovalListener.class);\n  ArgumentCaptor<RemovalNotification<Integer, Integer>> captor =\n      ArgumentCaptor.forClass(RemovalNotification.class);\n  Cache<Integer, Integer> cache = CacheBuilder.newBuilder()\n      .expireAfterAccess(1, TimeUnit.MINUTES)\n      .removalListener(listener)\n      .ticker(ticker)\n      .build();\n  cache.put(1, 1);\n  ticker.advance(10, TimeUnit.MINUTES);\n  cache.invalidateAll();\n\n  verify(listener).onRemoval(captor.capture());\n  assertThat(captor.getValue().getCause(), is(RemovalCause.EXPIRED));\n}\n```\n\nThe fix is to change `LocalCache$Segment#clear()` to inspect the key, value, and expiration status when determining the cause. \n\nUnfortunately this race condition is more widespread due to `enqueueNotification` not being tolerant to a garbage collection nulling out the key/value. Prior to constructing the notification, the method must take a strong reference to the key and value, check if either was collected, and if so publish a `COLLECTED` instead of the caller's cause.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2099",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2099/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2099/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2099/events",
    "html_url": "https://github.com/google/guava/pull/2099",
    "id": 93529266,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzkzNjg5OTk=",
    "number": 2099,
    "title": "Added missing @throws tag to ConcurrentHashMultiset.removeExactly",
    "user": {
      "login": "albertogoffi",
      "id": 7849335,
      "node_id": "MDQ6VXNlcjc4NDkzMzU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7849335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertogoffi",
      "html_url": "https://github.com/albertogoffi",
      "followers_url": "https://api.github.com/users/albertogoffi/followers",
      "following_url": "https://api.github.com/users/albertogoffi/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertogoffi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertogoffi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertogoffi/subscriptions",
      "organizations_url": "https://api.github.com/users/albertogoffi/orgs",
      "repos_url": "https://api.github.com/users/albertogoffi/repos",
      "events_url": "https://api.github.com/users/albertogoffi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertogoffi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-07-07T13:22:03Z",
    "updated_at": "2015-07-07T20:35:42Z",
    "closed_at": "2015-07-07T20:35:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2099",
      "html_url": "https://github.com/google/guava/pull/2099",
      "diff_url": "https://github.com/google/guava/pull/2099.diff",
      "patch_url": "https://github.com/google/guava/pull/2099.patch"
    },
    "body": "When the method `removeExactly` from the class `ConcurrentHashMultiset` is invoked with a negative number as second parameter, the method correctly throws `IllegalArgumentException`. This behavior is not documented in the javadoc comment of the method, since the `@throws` tag is missing. I added the missing tag.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2098",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2098/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2098/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2098/events",
    "html_url": "https://github.com/google/guava/issues/2098",
    "id": 92540600,
    "node_id": "MDU6SXNzdWU5MjU0MDYwMA==",
    "number": 2098,
    "title": "bloom filter use \"final long[] data\" memorize bit data cause OutOfMemoryError when a huge number of expected insertions",
    "user": {
      "login": "zimuabc",
      "id": 9839328,
      "node_id": "MDQ6VXNlcjk4MzkzMjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9839328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zimuabc",
      "html_url": "https://github.com/zimuabc",
      "followers_url": "https://api.github.com/users/zimuabc/followers",
      "following_url": "https://api.github.com/users/zimuabc/following{/other_user}",
      "gists_url": "https://api.github.com/users/zimuabc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zimuabc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zimuabc/subscriptions",
      "organizations_url": "https://api.github.com/users/zimuabc/orgs",
      "repos_url": "https://api.github.com/users/zimuabc/repos",
      "events_url": "https://api.github.com/users/zimuabc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zimuabc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505309,
        "node_id": "MDU6TGFiZWwxNDM1MDUzMDk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=hash",
        "name": "package=hash",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-07-02T03:47:33Z",
    "updated_at": "2015-07-30T18:36:12Z",
    "closed_at": "2015-07-30T18:35:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "bloom filter apply to filter big data usually, maybe billions of records, when the number of expected insertions is 10 billion and the false positive probability is 0.0001, it will take about 22G RAM, it not appropriate memorize by long array, I changed the type to \"HashMap&lt;Integer, Long[]&gt;\", ensure long array less than 20M, does this feather useful to somebody others ?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2096",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2096/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2096/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2096/events",
    "html_url": "https://github.com/google/guava/issues/2096",
    "id": 91570470,
    "node_id": "MDU6SXNzdWU5MTU3MDQ3MA==",
    "number": 2096,
    "title": "Include package-list in browsable API docs",
    "user": {
      "login": "pushbit",
      "id": 4058164,
      "node_id": "MDQ6VXNlcjQwNTgxNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4058164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pushbit",
      "html_url": "https://github.com/pushbit",
      "followers_url": "https://api.github.com/users/pushbit/followers",
      "following_url": "https://api.github.com/users/pushbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/pushbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pushbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pushbit/subscriptions",
      "organizations_url": "https://api.github.com/users/pushbit/orgs",
      "repos_url": "https://api.github.com/users/pushbit/repos",
      "events_url": "https://api.github.com/users/pushbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pushbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-06-28T08:20:16Z",
    "updated_at": "2016-02-04T22:14:50Z",
    "closed_at": "2016-02-04T22:14:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://google.github.io/guava/releases/18.0/api/docs/package-list should be available so that we can Javadoc link to it.  I see that the file exists at `gh-pages/_releases/18.0/api/docs/package-list`, but for some reason it doesn't make it to the website.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2095",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2095/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2095/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2095/events",
    "html_url": "https://github.com/google/guava/issues/2095",
    "id": 91491275,
    "node_id": "MDU6SXNzdWU5MTQ5MTI3NQ==",
    "number": 2095,
    "title": "NewCollectionTypesExplained wiki page wrong href tag.",
    "user": {
      "login": "afonsolage",
      "id": 1176452,
      "node_id": "MDQ6VXNlcjExNzY0NTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1176452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afonsolage",
      "html_url": "https://github.com/afonsolage",
      "followers_url": "https://api.github.com/users/afonsolage/followers",
      "following_url": "https://api.github.com/users/afonsolage/following{/other_user}",
      "gists_url": "https://api.github.com/users/afonsolage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afonsolage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afonsolage/subscriptions",
      "organizations_url": "https://api.github.com/users/afonsolage/orgs",
      "repos_url": "https://api.github.com/users/afonsolage/repos",
      "events_url": "https://api.github.com/users/afonsolage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afonsolage/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143534295,
        "node_id": "MDU6TGFiZWwxNDM1MzQyOTU=",
        "url": "https://api.github.com/repos/google/guava/labels/status=obsolete",
        "name": "status=obsolete",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-06-27T16:57:39Z",
    "updated_at": "2018-06-27T20:53:42Z",
    "closed_at": "2018-06-27T20:53:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a error on the wiki page [NewCollectionTypesExplained - implementations](https://github.com/google/guava/wiki/NewCollectionTypesExplained#implementations-1): \n\n```\n<A href=\"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/LinkedListMultimap.html\">\n\nLinkedListMultimap\n\nUnknown end tag for <\\/a>\n```\n\nand also on [NewCollectionTypesExplained - BiMap](https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap):\n\n```\n<A href=\"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/Table.html\">\n\nTable\n\nUnknown end tag for </a>\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2093",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2093/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2093/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2093/events",
    "html_url": "https://github.com/google/guava/issues/2093",
    "id": 90784626,
    "node_id": "MDU6SXNzdWU5MDc4NDYyNg==",
    "number": 2093,
    "title": "EventBus.handleException() fails to log exception thrown",
    "user": {
      "login": "bhamiltoncx",
      "id": 671827,
      "node_id": "MDQ6VXNlcjY3MTgyNw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/671827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bhamiltoncx",
      "html_url": "https://github.com/bhamiltoncx",
      "followers_url": "https://api.github.com/users/bhamiltoncx/followers",
      "following_url": "https://api.github.com/users/bhamiltoncx/following{/other_user}",
      "gists_url": "https://api.github.com/users/bhamiltoncx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bhamiltoncx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bhamiltoncx/subscriptions",
      "organizations_url": "https://api.github.com/users/bhamiltoncx/orgs",
      "repos_url": "https://api.github.com/users/bhamiltoncx/repos",
      "events_url": "https://api.github.com/users/bhamiltoncx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bhamiltoncx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143509865,
        "node_id": "MDU6TGFiZWwxNDM1MDk4NjU=",
        "url": "https://api.github.com/repos/google/guava/labels/package=eventbus",
        "name": "package=eventbus",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 4,
    "created_at": "2015-06-24T21:32:01Z",
    "updated_at": "2015-09-25T20:24:36Z",
    "closed_at": "2015-09-25T20:24:27Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "In Guava 18.0, `EventBus.handleException()` incorrectly logs `exception.getCause()` instead of the underlying `exception`:\n\n```\n  logger.log(Level.SEVERE, \"Could not dispatch event: \" \n      + context.getSubscriber() + \" to \" + context.getSubscriberMethod(),\n      exception.getCause());\n```\n\nThis means any `@Subscribe` method which throws an exception fails to log the most important information of all: the actual exception thrown. (If the exception happened to be wrapping another exception, Guava will log the wrapped exception, but that's usually not the case.)\n\nI believe this should be:\n\n```\n  logger.log(Level.SEVERE, \"Could not dispatch event: \" \n      + context.getSubscriber() + \" to \" + context.getSubscriberMethod(),\n      exception);\n```\n\nTo reproduce, try the following. I would expect the log message to include `This message should appear in the logs`, but it doesn't.\n\n```\n% cat GuavaBug.java \nimport com.google.common.eventbus.EventBus;\nimport com.google.common.eventbus.Subscribe;\n\npublic class GuavaBug {\n  private static class Event { }\n\n  @Subscribe\n  public void handleEvent(Event event) {\n    throw new RuntimeException(\"This message should appear in the logs\");\n  }\n\n  public static void main(String[] args) {\n    EventBus eventBus = new EventBus();\n    GuavaBug guavaBug = new GuavaBug();\n    eventBus.register(guavaBug);\n    eventBus.post(new Event());\n  }\n}\n\n% javac -cp guava-18.0.jar GuavaBug.java\n% java -cp guava-18.0.jar:. GuavaBug\nJun 24, 2015 2:30:42 PM com.google.common.eventbus.EventBus$LoggingSubscriberExceptionHandler handleException\nSEVERE: Could not dispatch event: GuavaBug@7de26db8 to public void GuavaBug.handleEvent(GuavaBug$Event)\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2090",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2090/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2090/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2090/events",
    "html_url": "https://github.com/google/guava/issues/2090",
    "id": 90106642,
    "node_id": "MDU6SXNzdWU5MDEwNjY0Mg==",
    "number": 2090,
    "title": "Add parse factory method to Range that take a notation argument",
    "user": {
      "login": "gmatadh",
      "id": 3066025,
      "node_id": "MDQ6VXNlcjMwNjYwMjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3066025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmatadh",
      "html_url": "https://github.com/gmatadh",
      "followers_url": "https://api.github.com/users/gmatadh/followers",
      "following_url": "https://api.github.com/users/gmatadh/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmatadh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmatadh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmatadh/subscriptions",
      "organizations_url": "https://api.github.com/users/gmatadh/orgs",
      "repos_url": "https://api.github.com/users/gmatadh/repos",
      "events_url": "https://api.github.com/users/gmatadh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmatadh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-06-22T14:05:11Z",
    "updated_at": "2015-06-22T16:58:20Z",
    "closed_at": "2015-06-22T16:58:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Something like:\n\nRange _original = ...;\n_original.equals(Range.parse(_original.toString()));\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2089",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2089/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2089/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2089/events",
    "html_url": "https://github.com/google/guava/issues/2089",
    "id": 89803139,
    "node_id": "MDU6SXNzdWU4OTgwMzEzOQ==",
    "number": 2089,
    "title": "AsyncEventBus fire duplicate event",
    "user": {
      "login": "MagIciaNGTAO",
      "id": 1142394,
      "node_id": "MDQ6VXNlcjExNDIzOTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1142394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MagIciaNGTAO",
      "html_url": "https://github.com/MagIciaNGTAO",
      "followers_url": "https://api.github.com/users/MagIciaNGTAO/followers",
      "following_url": "https://api.github.com/users/MagIciaNGTAO/following{/other_user}",
      "gists_url": "https://api.github.com/users/MagIciaNGTAO/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MagIciaNGTAO/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MagIciaNGTAO/subscriptions",
      "organizations_url": "https://api.github.com/users/MagIciaNGTAO/orgs",
      "repos_url": "https://api.github.com/users/MagIciaNGTAO/repos",
      "events_url": "https://api.github.com/users/MagIciaNGTAO/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MagIciaNGTAO/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-06-20T18:46:13Z",
    "updated_at": "2015-06-21T23:15:54Z",
    "closed_at": "2015-06-21T23:15:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` Java\npublic class AnEventListener implement AnInterfance {   \n    @Override\n    @Subscribe\n    @AllowConcurrentEvents\n    public void handler(A event) {\n        // called twice\n    }\n}\n\npublic class AnotherEventListener {   \n    @Subscribe\n    @AllowConcurrentEvents\n    public void handler(A event) {\n        // called once as expected\n    }\n}\n```\n\nDebug until here: AnnotatedSubscriberFinder.java \n\ngetAnnotatedMethods(clazz) returns two methods seems because @Override is there.\n\n``` Java\n  @Override\n  public Multimap<Class<?>, EventSubscriber> findAllSubscribers(Object listener) {\n    Multimap<Class<?>, EventSubscriber> methodsInListener = HashMultimap.create();\n    Class<?> clazz = listener.getClass();\n    for (Method method : getAnnotatedMethods(clazz)) {\n      Class<?>[] parameterTypes = method.getParameterTypes();\n      Class<?> eventType = parameterTypes[0];\n      EventSubscriber subscriber = makeSubscriber(listener, method);\n      methodsInListener.put(eventType, subscriber);\n    }\n    return methodsInListener;\n  }\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2088",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2088/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2088/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2088/events",
    "html_url": "https://github.com/google/guava/issues/2088",
    "id": 89656831,
    "node_id": "MDU6SXNzdWU4OTY1NjgzMQ==",
    "number": 2088,
    "title": "Add equivalent of Range.span() for multiple ranges",
    "user": {
      "login": "gabbard",
      "id": 7139661,
      "node_id": "MDQ6VXNlcjcxMzk2NjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7139661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gabbard",
      "html_url": "https://github.com/gabbard",
      "followers_url": "https://api.github.com/users/gabbard/followers",
      "following_url": "https://api.github.com/users/gabbard/following{/other_user}",
      "gists_url": "https://api.github.com/users/gabbard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gabbard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gabbard/subscriptions",
      "organizations_url": "https://api.github.com/users/gabbard/orgs",
      "repos_url": "https://api.github.com/users/gabbard/repos",
      "events_url": "https://api.github.com/users/gabbard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gabbard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-06-19T20:44:50Z",
    "updated_at": "2015-06-19T21:49:44Z",
    "closed_at": "2015-06-19T21:49:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Guava provides `Range.span(Range otherRange)` for getting the minimal `Range` which encloses both `this` and `otherRange`.  A natural thing to want is to determine the minimal span enclosing a collection of `Range`s, but as far as I can tell no method is provided for this.\n\nif you want to implement it yourself, you either have to:\n- call `Range.span` repeatedly, one `Range` at a time\n- write your own logic to go through the list and correctly deal with closed, open, and unbounded endpoints.  This is what we have done, but it's not particularly simple, and someone trying to implement it could easily make an error.\n\nWithin Guava, it would be trivial to implement this using the ordering on the package-private `Cut` object currently used by `Range` to implement `Range.span`.  \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2087",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2087/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2087/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2087/events",
    "html_url": "https://github.com/google/guava/issues/2087",
    "id": 89622622,
    "node_id": "MDU6SXNzdWU4OTYyMjYyMg==",
    "number": 2087,
    "title": "Make SettableFuture not final",
    "user": {
      "login": "archiecobbs",
      "id": 545866,
      "node_id": "MDQ6VXNlcjU0NTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/545866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/archiecobbs",
      "html_url": "https://github.com/archiecobbs",
      "followers_url": "https://api.github.com/users/archiecobbs/followers",
      "following_url": "https://api.github.com/users/archiecobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/archiecobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/archiecobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/archiecobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/archiecobbs/orgs",
      "repos_url": "https://api.github.com/users/archiecobbs/repos",
      "events_url": "https://api.github.com/users/archiecobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/archiecobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-06-19T17:54:39Z",
    "updated_at": "2015-06-19T18:03:32Z",
    "closed_at": "2015-06-19T17:56:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was writing a subclass of `SettableFuture` that takes some additional action when `cancel()` is invoked, but _Oops_ the class is `final`...\n\nMarking a class in a general purpose library `final` is a pretty drastic thing to do, so I assume there is a good reason.... ?\n\nIf there is no good reason, how 'bout let's make it extensible.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2086",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2086/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2086/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2086/events",
    "html_url": "https://github.com/google/guava/pull/2086",
    "id": 89608022,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxMjU1MDg=",
    "number": 2086,
    "title": "Splitter fails with empty matches at the end of a String",
    "user": {
      "login": "JeffreyFalgout",
      "id": 2907401,
      "node_id": "MDQ6VXNlcjI5MDc0MDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2907401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeffreyFalgout",
      "html_url": "https://github.com/JeffreyFalgout",
      "followers_url": "https://api.github.com/users/JeffreyFalgout/followers",
      "following_url": "https://api.github.com/users/JeffreyFalgout/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeffreyFalgout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeffreyFalgout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeffreyFalgout/subscriptions",
      "organizations_url": "https://api.github.com/users/JeffreyFalgout/orgs",
      "repos_url": "https://api.github.com/users/JeffreyFalgout/repos",
      "events_url": "https://api.github.com/users/JeffreyFalgout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeffreyFalgout/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-06-19T16:39:21Z",
    "updated_at": "2016-10-31T18:44:23Z",
    "closed_at": "2016-10-31T18:41:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2086",
      "html_url": "https://github.com/google/guava/pull/2086",
      "diff_url": "https://github.com/google/guava/pull/2086.diff",
      "patch_url": "https://github.com/google/guava/pull/2086.patch"
    },
    "body": "If you try to split \"abc82\" with the pattern \"(?=\\d)\" you get [abc, 8].\nThe last number will be left out of the result.\n\nhttp://stackoverflow.com/q/30941743/758280\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2084",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2084/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2084/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2084/events",
    "html_url": "https://github.com/google/guava/issues/2084",
    "id": 89388376,
    "node_id": "MDU6SXNzdWU4OTM4ODM3Ng==",
    "number": 2084,
    "title": "Add pluggable hashCode()/equals() support to MapMaker",
    "user": {
      "login": "archiecobbs",
      "id": 545866,
      "node_id": "MDQ6VXNlcjU0NTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/545866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/archiecobbs",
      "html_url": "https://github.com/archiecobbs",
      "followers_url": "https://api.github.com/users/archiecobbs/followers",
      "following_url": "https://api.github.com/users/archiecobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/archiecobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/archiecobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/archiecobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/archiecobbs/orgs",
      "repos_url": "https://api.github.com/users/archiecobbs/repos",
      "events_url": "https://api.github.com/users/archiecobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/archiecobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-06-18T20:22:29Z",
    "updated_at": "2015-06-18T20:48:35Z",
    "closed_at": "2015-06-18T20:26:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_Motivating example_: Suppose you want a `Map` with `byte[]` keys, where the keys are compared by array contents (e.g., \"deep equals\").\n\nYou can't used any normal hash-based `Map` implementation because those hash and compare using `hashCode` and `equals()`, which for `byte[]` arrays uses object identity, not array contents. The only option is to use e.g. `TreeMap` and supply a custom comparator. But `TreeMap` requires a lot more memory per entry, provides unnecessary sorting, and moreover this workaround doesn't always work: in some cases, your keys may not have any total ordering at all.\n\nI've encountered this problem repeatedly: I want a `HashMap` of some objects but need it to be based on custom hashing and equality methods.\n\n_Request_: give `MapMaker` the ability to be configured with a pluggable hash/equality delegate, e.g.:\n\n```\npublic interface Hasher<T> {\n    boolean equals(T t1, T t2);\n    int hashCode(T t);\n}\n\npublic class MapMaker {\n    ...\n    public void <T> hasher(Hasher<T> hasher);\n}\n```\n\nThis would solve this problem in a nice way.\n\nYou could also provide `EqualsHasher` and `IdentityHasher` implementations of the two standard \"hashers\" already used by `MapMaker`, using them for normal and weak keys, respectively.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2082",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2082/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2082/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2082/events",
    "html_url": "https://github.com/google/guava/issues/2082",
    "id": 89037058,
    "node_id": "MDU6SXNzdWU4OTAzNzA1OA==",
    "number": 2082,
    "title": "Guava can't be compiled by JDT",
    "user": {
      "login": "GerardPaligot",
      "id": 1913901,
      "node_id": "MDQ6VXNlcjE5MTM5MDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1913901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GerardPaligot",
      "html_url": "https://github.com/GerardPaligot",
      "followers_url": "https://api.github.com/users/GerardPaligot/followers",
      "following_url": "https://api.github.com/users/GerardPaligot/following{/other_user}",
      "gists_url": "https://api.github.com/users/GerardPaligot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GerardPaligot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GerardPaligot/subscriptions",
      "organizations_url": "https://api.github.com/users/GerardPaligot/orgs",
      "repos_url": "https://api.github.com/users/GerardPaligot/repos",
      "events_url": "https://api.github.com/users/GerardPaligot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GerardPaligot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2015-06-17T14:44:37Z",
    "updated_at": "2015-06-22T16:59:23Z",
    "closed_at": "2015-06-22T16:49:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm a [Spoon](https://github.com/INRIA/spoon) contributor, an open source project to analyse and transform Java source code. This project have a dependency to [JDT](https://eclipse.org/jdt/) to compile target source code. Recently, I tried to analyse Guava with Spoon but JDT can't compile our project.\n\nWhat is the problem?\n\nIn [`ImmutableMap`](https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableMap.java) class, we have these methods:\n\n``` java\n// If the map is an EnumMap, it must have key type K for some <K extends Enum<K>>.\n@SuppressWarnings({\"unchecked\", \"rawtypes\"})\nprivate static <K, V> ImmutableMap<K, V> copyOfEnumMapUnsafe(Map<? extends K, ? extends V> map) {\n    return copyOfEnumMap((EnumMap) map);\n}\n\nprivate static <K extends Enum<K>, V> ImmutableMap<K, V> copyOfEnumMap(EnumMap<K, ? extends V> original) {\n    EnumMap<K, V> copy = new EnumMap<K, V>(original);\n    for (Map.Entry<?, ?> entry : copy.entrySet()) {\n        checkEntryNotNull(entry.getKey(), entry.getValue());\n    }\n    return ImmutableEnumMap.asImmutable(copy);\n}\n```\n\nThis code is valid but there is an error from JDT:\n\n> Type mismatch: cannot convert from `<Enum<Enum<K>>>` to `<K>`\n\nBefore the creation of this issue, I reported the bug in the bugtracker of JDT (issue [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=469404)). In 2 words, the conclusion was that: \"Yes, JDT don't support this usage of Java but there is a better practice\". This better practice is explained [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=469404#c3):\n\n``` java\nprivate static <K extends Enum<K>> ImmutableMap<K, V> copyOfEnumMap(EnumMap<K, ? extends V> original) {\n    return copyOfEnumMap((EnumMap<K,?>) map);\n}\n```\n\nI tried some tricky solutions but, unfortunately, this solution can't be applied in your project. So I come to notify you that your project can't be compiled by JDT.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2081",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2081/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2081/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2081/events",
    "html_url": "https://github.com/google/guava/issues/2081",
    "id": 88902916,
    "node_id": "MDU6SXNzdWU4ODkwMjkxNg==",
    "number": 2081,
    "title": "Inaccurate documentation on immutable collections",
    "user": {
      "login": "shmosel",
      "id": 6895933,
      "node_id": "MDQ6VXNlcjY4OTU5MzM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6895933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shmosel",
      "html_url": "https://github.com/shmosel",
      "followers_url": "https://api.github.com/users/shmosel/followers",
      "following_url": "https://api.github.com/users/shmosel/following{/other_user}",
      "gists_url": "https://api.github.com/users/shmosel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shmosel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shmosel/subscriptions",
      "organizations_url": "https://api.github.com/users/shmosel/orgs",
      "repos_url": "https://api.github.com/users/shmosel/repos",
      "events_url": "https://api.github.com/users/shmosel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shmosel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-06-17T03:48:04Z",
    "updated_at": "2015-06-17T22:16:48Z",
    "closed_at": "2015-06-17T14:46:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The documentation for `ImmutableList.of()` states the following:\n\n> Returns the empty immutable list. This set behaves and performs comparably to Collections#emptyList, and is preferable mainly for consistency and maintainability of your code.\n\nOne notable difference between `ImmutableList.of()` and `Collections.emptyList()` is that the former throws an `UnsupportedOperationException` on `clear()` while the latter does not. Should that be considered behaving \"comparably\"?\n\nSimilarly for `ImmutableMap` and `ImmutableSet`.\n\nEDIT: I also noticed the documentation says \"Returns **the** empty immutable [list/map/set].\" I suppose that's a mistake?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2080",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2080/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2080/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2080/events",
    "html_url": "https://github.com/google/guava/issues/2080",
    "id": 88892475,
    "node_id": "MDU6SXNzdWU4ODg5MjQ3NQ==",
    "number": 2080,
    "title": ".design needs to be added as a public suffix",
    "user": {
      "login": "patrickbray",
      "id": 10444447,
      "node_id": "MDQ6VXNlcjEwNDQ0NDQ3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10444447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickbray",
      "html_url": "https://github.com/patrickbray",
      "followers_url": "https://api.github.com/users/patrickbray/followers",
      "following_url": "https://api.github.com/users/patrickbray/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickbray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickbray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickbray/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickbray/orgs",
      "repos_url": "https://api.github.com/users/patrickbray/repos",
      "events_url": "https://api.github.com/users/patrickbray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickbray/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 1,
    "created_at": "2015-06-17T02:35:12Z",
    "updated_at": "2015-06-17T16:49:54Z",
    "closed_at": "2015-06-17T14:43:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can you please confirm that .design will be added as a public suffix in Guava 19.0\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2078",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2078/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2078/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2078/events",
    "html_url": "https://github.com/google/guava/issues/2078",
    "id": 88068907,
    "node_id": "MDU6SXNzdWU4ODA2ODkwNw==",
    "number": 2078,
    "title": "InternetDomainName: Include percent decoding during normalization",
    "user": {
      "login": "EricEdens",
      "id": 575626,
      "node_id": "MDQ6VXNlcjU3NTYyNg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/575626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricEdens",
      "html_url": "https://github.com/EricEdens",
      "followers_url": "https://api.github.com/users/EricEdens/followers",
      "following_url": "https://api.github.com/users/EricEdens/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricEdens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricEdens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricEdens/subscriptions",
      "organizations_url": "https://api.github.com/users/EricEdens/orgs",
      "repos_url": "https://api.github.com/users/EricEdens/repos",
      "events_url": "https://api.github.com/users/EricEdens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricEdens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-06-13T21:32:30Z",
    "updated_at": "2015-06-16T18:41:26Z",
    "closed_at": "2015-06-16T18:41:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`com.google.common.net.InternetDomainName` performs a couple of useful normalizations: converting to lowercase and replacing Unicode dot separators with an Ascii period.\n\nAn additional normalization -- which is supported by the WHATWG URL spec, RFC 3986, and Chrome -- is percent decoding. Here are some examples:\n\n```\n%47ithub.com => github.com\ngithub%2ecom => github.com\n```\n\nWithout percent decoding, `InternetDomainName.from` throws an IllegalArgumentException.\n\n**References:**\nRFC 3986:\n   2.4.  When to Encode or Decode:\n   https://www.ietf.org/rfc/rfc3986.txt\n\n   When a URI is dereferenced, the components and subcomponents\n   significant to the scheme-specific dereferencing process (if any)\n   must be parsed and separated before the percent-encoded octets within\n   those components can be safely decoded, as otherwise the data may be\n   mistaken for component delimiters.  The only exception is for\n   percent-encoded octets corresponding to characters in the unreserved\n   set, which can be decoded at any time.  For example, the octet\n   corresponding to the tilde (\"~\") character is often encoded as \"%7E\"\n   by older URI processing implementations; the \"%7E\" can be replaced by\n   \"~\" without changing its interpretation.\n\n   unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n\n WHATWG:\n   3.3. Host parsing\n   https://url.spec.whatwg.org/#host-parsing\n1. Let domain be the result of utf-8 decode without BOM on the percent decoding of utf-8 encode on input.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2075",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2075/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2075/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2075/events",
    "html_url": "https://github.com/google/guava/issues/2075",
    "id": 87830078,
    "node_id": "MDU6SXNzdWU4NzgzMDA3OA==",
    "number": 2075,
    "title": "Consider phasing out our use of interruptTask() in favor of done()",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-06-12T19:40:03Z",
    "updated_at": "2017-08-17T21:47:50Z",
    "closed_at": "2017-08-17T21:47:50Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "(This part of of our work to figure out the best way to do cancellation logic -- related to https://github.com/google/guava/issues/1905)\n\nWithout `interruptTask()`, we could just write:\n\n```\ndone() {\n  if (wasInterrupted()) {\n    whatever();\n  }\n  anyOtherCleanup();\n}\n```\n\nOn the one hand, I don't like making users write a conditional when we could provide a callback method. On the other hand, when there are multiple callbacks, there are questions about the order in which they run. Users wonder whether their fields might have been nulled out. Users have the opportunity to rely on poorly specified behavior like whether listeners have been executed or `get()` callers have been released.\n\nOf course, right now, out-of-package users don't have the ability to override `done()`, so we won't eliminate `interruptTask()` yet if at all. (And it's non-`@Beta`, so we'd be waiting a while to eliminate it.) But it's worth doing some investigation here, in part because we'll have a decision to make for `FluentFuture` someday.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2074",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2074/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2074/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2074/events",
    "html_url": "https://github.com/google/guava/issues/2074",
    "id": 86951493,
    "node_id": "MDU6SXNzdWU4Njk1MTQ5Mw==",
    "number": 2074,
    "title": "Javadoc documentation of method AbstractMapBasedMultiset.add(Integer, int)",
    "user": {
      "login": "albertogoffi",
      "id": 7849335,
      "node_id": "MDQ6VXNlcjc4NDkzMzU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7849335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertogoffi",
      "html_url": "https://github.com/albertogoffi",
      "followers_url": "https://api.github.com/users/albertogoffi/followers",
      "following_url": "https://api.github.com/users/albertogoffi/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertogoffi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertogoffi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertogoffi/subscriptions",
      "organizations_url": "https://api.github.com/users/albertogoffi/orgs",
      "repos_url": "https://api.github.com/users/albertogoffi/repos",
      "events_url": "https://api.github.com/users/albertogoffi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertogoffi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-06-10T12:21:23Z",
    "updated_at": "2015-06-10T15:28:26Z",
    "closed_at": "2015-06-10T15:28:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "When the method `AbstractMapBasedMultiset.add(Integer, int)` is invoked with a negative number as second argument, an `IllegalArgumentException` is thrown.\n\nExample:\n\n```\nHashMultiset<Integer> multiset = HashMultiset.create();\nmultiset.add(1, -10);\n```\n\nThis behavior is reasonable, but not specified in the Javadoc comment of the method. Do you think it should be described in the Javadoc?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2073",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2073/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2073/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2073/events",
    "html_url": "https://github.com/google/guava/issues/2073",
    "id": 86752438,
    "node_id": "MDU6SXNzdWU4Njc1MjQzOA==",
    "number": 2073,
    "title": "Guava-testlib 18 uses Truth APIs that are deleted in 0.25+ releases of Truth",
    "user": {
      "login": "cgruber",
      "id": 331234,
      "node_id": "MDQ6VXNlcjMzMTIzNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/331234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgruber",
      "html_url": "https://github.com/cgruber",
      "followers_url": "https://api.github.com/users/cgruber/followers",
      "following_url": "https://api.github.com/users/cgruber/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgruber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgruber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgruber/subscriptions",
      "organizations_url": "https://api.github.com/users/cgruber/orgs",
      "repos_url": "https://api.github.com/users/cgruber/repos",
      "events_url": "https://api.github.com/users/cgruber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgruber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504641,
        "node_id": "MDU6TGFiZWwxNDM1MDQ2NDE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=testing",
        "name": "package=testing",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2015-06-09T22:14:57Z",
    "updated_at": "2015-06-23T04:39:57Z",
    "closed_at": "2015-06-23T04:39:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Guava 18 uses Truth, but truth is not API stable, so using it in an intermediary library like Guava-testlib is problematic - it forces that fragility onto non-guava consumers of our testlibs.\n\nFor Guava 19, we should remove use of Truth within the testlib, since it's a convenience for us, but only marginally helpful to users of guava-testlib.\n\nFor Guava 18, it is broken for anyone who attempts to upgrade to a version of Truth past 0.24. We should consider rolling an 18.0.1 of guava-testlib to rectify this, so that existing users are not hampered.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2072",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2072/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2072/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2072/events",
    "html_url": "https://github.com/google/guava/issues/2072",
    "id": 86606684,
    "node_id": "MDU6SXNzdWU4NjYwNjY4NA==",
    "number": 2072,
    "title": "Deadlock when stopping an AbstractScheduledService and Exception thrown from CustomScheduler.getNextSchedule()",
    "user": {
      "login": "stevo58008",
      "id": 2715301,
      "node_id": "MDQ6VXNlcjI3MTUzMDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2715301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevo58008",
      "html_url": "https://github.com/stevo58008",
      "followers_url": "https://api.github.com/users/stevo58008/followers",
      "following_url": "https://api.github.com/users/stevo58008/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevo58008/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevo58008/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevo58008/subscriptions",
      "organizations_url": "https://api.github.com/users/stevo58008/orgs",
      "repos_url": "https://api.github.com/users/stevo58008/repos",
      "events_url": "https://api.github.com/users/stevo58008/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevo58008/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 5,
    "created_at": "2015-06-09T13:52:31Z",
    "updated_at": "2015-06-18T09:04:33Z",
    "closed_at": "2015-06-16T19:44:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(Source attached below which demonstrates the issue).\nI have an implementation of an AbstractScheduledService which overrides the scheduler() method and creates and returns a CustomScheduler.  This CustomScheduler's getNextSchedule() method sleeps for a period of time (which makes the deadlock more predicable) and then either returns a Schedule, or if the Service’s state is STOPPING it throws an exception.  \nThe problem arises when it throws an exception.  After throwing the exception the service never actually terminates, and the shutDown() method is never called.  After a brief investigation, it looks as though there is a deadlock between notifyFailed() and stopAsync() in AbstractService class.  notifyFailed() (called from the catch block of reschedule() method in one of AbstractScheduledService inner classes) tries to enter the monitor field but is blocked as the monitor is currently held by stopAsync(), and stopAsync() hasn’t released the monitor yet as it is blocked when calling this.doStop() (in case 3 of switch stmt).  The doStop() called is the impl in AbstractScheduledService, and this gets blocked on the first line waiting for this.runningTask.cancel(false) to return.\n\nI haven’t had time to download the source code and build things myself to investigate it further, but hopefully there is enough here to go on.  Below is some source code which demonstrates the problem, and the log output showing that the service’s shutDown() method is not called and the service and JVM hasn’t terminated yet.\n\n``` java\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Service service = new ScheduledServiceWithCustomBlockingScheduler(5000);\n        new ServiceStateMonitor().monitorServiceStateWithServiceListener(service);\n        System.out.println(\"starting service\");\n        service.startAsync();\n        Thread.sleep(6000); // wait just enough time for 2nd call of getNextSchedule() to start\n        System.out.println(\"Stopping service\");\n        service.stopAsync();\n        System.out.println(\"Bye\");\n      }\n}\n```\n\n``` java\npublic class ScheduledServiceWithCustomBlockingScheduler extends AbstractScheduledService {\n    private long blockTime;\n\n    public ScheduledServiceWithCustomBlockingScheduler(final long blockTime) {\n        this.blockTime = blockTime;\n    }\n\n    @Override\n    protected void runOneIteration() throws Exception {\n        System.out.println(\"runOneIteration()\");\n    }\n\n    @Override\n    protected Scheduler scheduler() {\n        return new CustomScheduler() {\n            @Override\n            protected Schedule getNextSchedule() throws Exception {\n                System.out.println(\"getNextSchedule()...\");\n                Thread.sleep(blockTime);\n                if (state() == State.STOPPING) {\n                    System.out.println(\"getNextSchedule() - not running anymore so don't return scheduler\");\n                    throw new Exception(\"not running anymore so don't return scheduler\");\n                }\n                System.out.println(\"...getNextSchedule()\");\n                return new Schedule(0, TimeUnit.NANOSECONDS);\n            }\n        };\n    }\n\n    @Override\n    protected void startUp() throws Exception {\n        System.out.println(\"startUp()\");\n    }\n\n    @Override\n    protected void shutDown() throws Exception {\n        System.out.println(\"shutDown()\");\n    }\n}\n```\n\n``` java\npublic class ServiceStateMonitor {\n    public void monitorServiceStateWithServiceListener(final Service serviceToMonitor) {\n        serviceToMonitor.addListener(new PrintOutNewStateServiceListener(), MoreExecutors.directExecutor());\n    }\n\n    private class PrintOutNewStateServiceListener extends Service.Listener {\n        @Override\n        public void starting() {\n            System.out.println(\"SERVICE LISTENER : Starting\");\n        }\n\n        @Override\n        public void running() {\n            System.out.println(\"SERVICE LISTENER : Running\");\n        }\n\n        @Override\n        public void stopping(final Service.State from) {\n            System.out.println(\"SERVICE LISTENER : Stopping\");\n        }\n\n        @Override\n        public void terminated(final Service.State from) {\n            System.out.println(\"SERVICE LISTENER : Terminated\");\n        }\n\n        @Override\n        public void failed(final Service.State from, final Throwable failure) {\n            System.out.println(\"SERVICE LISTENER : Failed\");\n        }\n    }\n}\n```\n\nThe Standard Ouput from running the main()\n\n```\nstarting service\nSERVICE LISTENER : Starting\nstartUp()\ngetNextSchedule()...\n...getNextSchedule()\nSERVICE LISTENER : Running\nrunOneIteration()\ngetNextSchedule()...\nStopping service\ngetNextSchedule() - not running anymore so don't return scheduler\n```\n\nnotice that there is no \"shutDown()\" or \"Bye\" output line.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2069",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2069/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2069/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2069/events",
    "html_url": "https://github.com/google/guava/issues/2069",
    "id": 84603565,
    "node_id": "MDU6SXNzdWU4NDYwMzU2NQ==",
    "number": 2069,
    "title": "Add FluentSource wrapping up CharSource into an object source",
    "user": {
      "login": "freddfy",
      "id": 2016711,
      "node_id": "MDQ6VXNlcjIwMTY3MTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2016711?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freddfy",
      "html_url": "https://github.com/freddfy",
      "followers_url": "https://api.github.com/users/freddfy/followers",
      "following_url": "https://api.github.com/users/freddfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/freddfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freddfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freddfy/subscriptions",
      "organizations_url": "https://api.github.com/users/freddfy/orgs",
      "repos_url": "https://api.github.com/users/freddfy/repos",
      "events_url": "https://api.github.com/users/freddfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freddfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-06-03T14:49:12Z",
    "updated_at": "2019-08-13T16:27:26Z",
    "closed_at": "2019-08-13T16:26:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Just like a `FluentIterable` to `Iterable`, a `FluentSource` may wrap a `CharSource` into an \"object source\" and provide fluent interfaces for further operations like transform (by `Function`), filter (by `Predicate`)...etc. \n\nThe use case being usually it is more convenient to marshall the source content into higher level objects to be processed accordingly.\n\nEven though I understand codes come later than discussion, but I reckon starting with some simple code snippets like below may save thousand words of description:\n\n``` java\n\nFluentSource.splitOn(CharSource.wrap(\"1,2,3,4,5,6\"), \",\")\n                .transform(toInteger())\n                .filter(isEven())\n                .readAll(sum()) //12, i.e. 2 + 4 + 6\n\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2067",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2067/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2067/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2067/events",
    "html_url": "https://github.com/google/guava/issues/2067",
    "id": 83887406,
    "node_id": "MDU6SXNzdWU4Mzg4NzQwNg==",
    "number": 2067,
    "title": "Service listeners are not called reliably",
    "user": {
      "login": "Bombe",
      "id": 81599,
      "node_id": "MDQ6VXNlcjgxNTk5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/81599?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bombe",
      "html_url": "https://github.com/Bombe",
      "followers_url": "https://api.github.com/users/Bombe/followers",
      "following_url": "https://api.github.com/users/Bombe/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bombe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bombe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bombe/subscriptions",
      "organizations_url": "https://api.github.com/users/Bombe/orgs",
      "repos_url": "https://api.github.com/users/Bombe/repos",
      "events_url": "https://api.github.com/users/Bombe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bombe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-06-02T07:27:16Z",
    "updated_at": "2015-06-02T17:11:53Z",
    "closed_at": "2015-06-02T17:11:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this class:\n\n``` java\npublic class Core extends AbstractIdleService {\n\n    @Override\n    protected void startUp() throws Exception {\n    }\n\n    @Override\n    protected void shutDown() throws Exception {\n    }\n\n}\n```\n\n…and this unit test:\n\n``` java\npublic class CoreTest {\n\n    private final Core core = new Core();\n    private final AtomicBoolean started = new AtomicBoolean();\n    private final AtomicBoolean stopped = new AtomicBoolean();\n\n    @Before\n    public void setupCoreListener() {\n        core.addListener(new Listener() {\n            @Override\n            public void running() {\n                System.out.println(\"running\");\n                started.set(true);\n            }\n\n            @Override\n            public void stopping(State from) {\n                System.out.println(\"stopping\");\n                stopped.set(true);\n            }\n\n            @Override\n            public void terminated(State from) {\n                System.out.println(\"terminated\");\n                stopped.set(true);\n            }\n        }, MoreExecutors.directExecutor());\n    }\n\n    @Test\n    public void coreCanStartUp() {\n        core.startAsync().awaitRunning();\n        System.out.println(\"testing started\");\n        MatcherAssert.assertThat(started.get(), Matchers.is(true));\n    }\n\n    @Test\n    public void coreCanShutDown() {\n        core.startAsync().awaitRunning();\n        core.stopAsync().awaitTerminated();\n        System.out.println(\"testing stopped\");\n        MatcherAssert.assertThat(stopped.get(), Matchers.is(true));\n    }\n\n}\n```\n\nI would expect these tests to always succeed; the service listener is run in the same thread, the boolean is stored in an `AtomicBoolean` and yet, if I run this test multiple times it sometimes fails. On stdout I see:\n\n```\ntesting started\nrunning\nrunning\nstopping\ntesting stopped\nterminated\n```\n\nSo `core.startAsync().awaitRunning()` returns before the listener for `running` is called. Is that intended and correct behaviour?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2066",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2066/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2066/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2066/events",
    "html_url": "https://github.com/google/guava/issues/2066",
    "id": 83634793,
    "node_id": "MDU6SXNzdWU4MzYzNDc5Mw==",
    "number": 2066,
    "title": "containsIgnoreCase method for collection of strings",
    "user": {
      "login": "jefjos",
      "id": 12532258,
      "node_id": "MDQ6VXNlcjEyNTMyMjU4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12532258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jefjos",
      "html_url": "https://github.com/jefjos",
      "followers_url": "https://api.github.com/users/jefjos/followers",
      "following_url": "https://api.github.com/users/jefjos/following{/other_user}",
      "gists_url": "https://api.github.com/users/jefjos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jefjos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jefjos/subscriptions",
      "organizations_url": "https://api.github.com/users/jefjos/orgs",
      "repos_url": "https://api.github.com/users/jefjos/repos",
      "events_url": "https://api.github.com/users/jefjos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jefjos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-06-01T18:28:20Z",
    "updated_at": "2015-06-01T18:48:21Z",
    "closed_at": "2015-06-01T18:48:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "To check if a list of strings contains the input string case-insensitively.\n\nList<String> lisr= new List<String>();\nlist.add(\"Apple\")t\nlist.add(\"Orange\");\nlist.add(\"Mango\");\nif(list.containsIgnoreCase(\"ApPle\")) {\n   System.out.println(\"List contains input string\");\n}\n\nThis should print the output \"List contains input string\"\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2065",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2065/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2065/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2065/events",
    "html_url": "https://github.com/google/guava/issues/2065",
    "id": 82561743,
    "node_id": "MDU6SXNzdWU4MjU2MTc0Mw==",
    "number": 2065,
    "title": "Provide EvictingQueue::of method for easier testing",
    "user": {
      "login": "scr",
      "id": 245840,
      "node_id": "MDQ6VXNlcjI0NTg0MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/245840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scr",
      "html_url": "https://github.com/scr",
      "followers_url": "https://api.github.com/users/scr/followers",
      "following_url": "https://api.github.com/users/scr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scr/subscriptions",
      "organizations_url": "https://api.github.com/users/scr/orgs",
      "repos_url": "https://api.github.com/users/scr/repos",
      "events_url": "https://api.github.com/users/scr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-05-29T19:53:09Z",
    "updated_at": "2015-06-02T15:38:38Z",
    "closed_at": "2015-06-02T15:38:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As a follow up to https://github.com/google/guava/issues/2064, for testing, it would be handy to have\n\n`EvictingQueue.of(1,2,3,4,5)` that would just create a new EvictingQueue of size 5 with the passed in elements.\n\nSomething like this, perhaps:\n\n```\nclass EvictingQueue {\n    //...\n    public static <T> EvictingQueue<T> of(Collection<T> elements) {\n        EvictingQueue<T> ret = EvictingQueue.create(elements.size());\n        ret.addAll(elements);\n        return ret;\n    }\n\n    public static <T> EvictingQueue<T> of(T... elements) {\n        return EvictingQueue.of(Arrays.asList(elements));\n    }\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2064",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2064/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2064/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2064/events",
    "html_url": "https://github.com/google/guava/issues/2064",
    "id": 82560113,
    "node_id": "MDU6SXNzdWU4MjU2MDExMw==",
    "number": 2064,
    "title": "EvictingQueue doesn't proxy equals/hashcode to its delegate Queue",
    "user": {
      "login": "scr",
      "id": 245840,
      "node_id": "MDQ6VXNlcjI0NTg0MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/245840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scr",
      "html_url": "https://github.com/scr",
      "followers_url": "https://api.github.com/users/scr/followers",
      "following_url": "https://api.github.com/users/scr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scr/subscriptions",
      "organizations_url": "https://api.github.com/users/scr/orgs",
      "repos_url": "https://api.github.com/users/scr/repos",
      "events_url": "https://api.github.com/users/scr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-05-29T19:47:33Z",
    "updated_at": "2015-05-29T20:46:57Z",
    "closed_at": "2015-05-29T20:46:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using [hamcrest assertions](http://hamcrest.org/JavaHamcrest/), I was surprised that the following didn't pass:\n\n```\nEvictingQueue<Integer> lastFive = Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).collect(Collectors.toCollection(() -> EvictingQueue.create(5));\nEvictingQueue<Integer> expected = EvictingQueue.create(5);\nexpected.addAll(Arrays.asList(6, 7, 8, 9, 10));\nassertThat(lastFive, is(expected));\n```\n\nWhereas the following did:\n\n```\nEvictingQueue<Integer> lastFive = Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).collect(Collectors.toCollection(() -> EvictingQueue.create(5));\nEvictingQueue<Integer> expected = Arrays.asList(6, 7, 8, 9, 10);\nassertThat(new ArrayList<>(lastFive), is(expected));\n```\n\nIf it's only for testing, no big deal, but I would have expected that two EvictingQueues could be compared to each other naturally especially if the delegate is.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2062",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2062/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2062/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2062/events",
    "html_url": "https://github.com/google/guava/pull/2062",
    "id": 81762271,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzNzIzMjA=",
    "number": 2062,
    "title": "Add deprecation for compare(Boolean, Boolean)",
    "user": {
      "login": "gaul",
      "id": 848247,
      "node_id": "MDQ6VXNlcjg0ODI0Nw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/848247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaul",
      "html_url": "https://github.com/gaul",
      "followers_url": "https://api.github.com/users/gaul/followers",
      "following_url": "https://api.github.com/users/gaul/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaul/subscriptions",
      "organizations_url": "https://api.github.com/users/gaul/orgs",
      "repos_url": "https://api.github.com/users/gaul/repos",
      "events_url": "https://api.github.com/users/gaul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaul/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-05-28T05:04:23Z",
    "updated_at": "2015-06-01T20:01:51Z",
    "closed_at": "2015-06-01T19:54:27Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2062",
      "html_url": "https://github.com/google/guava/pull/2062",
      "diff_url": "https://github.com/google/guava/pull/2062.diff",
      "patch_url": "https://github.com/google/guava/pull/2062.patch"
    },
    "body": "This method exists to warn callers of `compare(Boolean, Boolean)` and\n`compare(boolean, boolean)` with a deprecation warning.  Using the\nprivate access modifier would still allow callers to use the generic\n`compare(Comparable<?>, Comparable<?>)` method.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2061",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2061/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2061/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2061/events",
    "html_url": "https://github.com/google/guava/issues/2061",
    "id": 80605463,
    "node_id": "MDU6SXNzdWU4MDYwNTQ2Mw==",
    "number": 2061,
    "title": "Skips null values from ComparisonChain",
    "user": {
      "login": "javlaks",
      "id": 513351,
      "node_id": "MDQ6VXNlcjUxMzM1MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/513351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javlaks",
      "html_url": "https://github.com/javlaks",
      "followers_url": "https://api.github.com/users/javlaks/followers",
      "following_url": "https://api.github.com/users/javlaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/javlaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javlaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javlaks/subscriptions",
      "organizations_url": "https://api.github.com/users/javlaks/orgs",
      "repos_url": "https://api.github.com/users/javlaks/repos",
      "events_url": "https://api.github.com/users/javlaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javlaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-05-25T17:23:44Z",
    "updated_at": "2015-05-28T21:23:58Z",
    "closed_at": "2015-05-28T20:48:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be great if it were possible to ignore null values received in the ComparisonChain class.\n\nI solve this problem by using the Optional class, but it would be better to use a condition to ignore null values of comparison\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2060",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2060/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2060/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2060/events",
    "html_url": "https://github.com/google/guava/pull/2060",
    "id": 80109987,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYxMDA0NDM=",
    "number": 2060,
    "title": "Merge pull request #1 from google/master",
    "user": {
      "login": "monkeychen",
      "id": 726404,
      "node_id": "MDQ6VXNlcjcyNjQwNA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/726404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/monkeychen",
      "html_url": "https://github.com/monkeychen",
      "followers_url": "https://api.github.com/users/monkeychen/followers",
      "following_url": "https://api.github.com/users/monkeychen/following{/other_user}",
      "gists_url": "https://api.github.com/users/monkeychen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/monkeychen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/monkeychen/subscriptions",
      "organizations_url": "https://api.github.com/users/monkeychen/orgs",
      "repos_url": "https://api.github.com/users/monkeychen/repos",
      "events_url": "https://api.github.com/users/monkeychen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/monkeychen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-05-24T09:39:27Z",
    "updated_at": "2015-05-24T10:04:00Z",
    "closed_at": "2015-05-24T10:02:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2060",
      "html_url": "https://github.com/google/guava/pull/2060",
      "diff_url": "https://github.com/google/guava/pull/2060.diff",
      "patch_url": "https://github.com/google/guava/pull/2060.patch"
    },
    "body": "pull from head\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2059",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2059/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2059/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2059/events",
    "html_url": "https://github.com/google/guava/pull/2059",
    "id": 79158350,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU5NzY3Njc=",
    "number": 2059,
    "title": "Add basic \"Start using Guava\" instructions to README",
    "user": {
      "login": "jonikarppinen",
      "id": 4047647,
      "node_id": "MDQ6VXNlcjQwNDc2NDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4047647?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonikarppinen",
      "html_url": "https://github.com/jonikarppinen",
      "followers_url": "https://api.github.com/users/jonikarppinen/followers",
      "following_url": "https://api.github.com/users/jonikarppinen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonikarppinen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonikarppinen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonikarppinen/subscriptions",
      "organizations_url": "https://api.github.com/users/jonikarppinen/orgs",
      "repos_url": "https://api.github.com/users/jonikarppinen/repos",
      "events_url": "https://api.github.com/users/jonikarppinen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonikarppinen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-05-21T20:57:40Z",
    "updated_at": "2017-01-09T20:04:52Z",
    "closed_at": "2017-01-09T20:04:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2059",
      "html_url": "https://github.com/google/guava/pull/2059",
      "diff_url": "https://github.com/google/guava/pull/2059.diff",
      "patch_url": "https://github.com/google/guava/pull/2059.patch"
    },
    "body": "The [code.google.com Guava homepage](https://code.google.com/p/guava-libraries/) tells people to come here at GitHub instead, yet key information for new users was missing from the README.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2057",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2057/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2057/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2057/events",
    "html_url": "https://github.com/google/guava/issues/2057",
    "id": 79080181,
    "node_id": "MDU6SXNzdWU3OTA4MDE4MQ==",
    "number": 2057,
    "title": "WeakHashMap",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-05-21T16:55:36Z",
    "updated_at": "2015-05-21T17:33:09Z",
    "closed_at": "2015-05-21T17:04:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I like to create new collections using static classes like Maps, Lists, Sets, but guava missies some types of collections. For example WeakHashMap. Do it's done for some purpose? \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2056",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2056/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2056/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2056/events",
    "html_url": "https://github.com/google/guava/issues/2056",
    "id": 78829101,
    "node_id": "MDU6SXNzdWU3ODgyOTEwMQ==",
    "number": 2056,
    "title": "Collections",
    "user": {
      "login": "vrstest",
      "id": 11205946,
      "node_id": "MDQ6VXNlcjExMjA1OTQ2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11205946?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vrstest",
      "html_url": "https://github.com/vrstest",
      "followers_url": "https://api.github.com/users/vrstest/followers",
      "following_url": "https://api.github.com/users/vrstest/following{/other_user}",
      "gists_url": "https://api.github.com/users/vrstest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vrstest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vrstest/subscriptions",
      "organizations_url": "https://api.github.com/users/vrstest/orgs",
      "repos_url": "https://api.github.com/users/vrstest/repos",
      "events_url": "https://api.github.com/users/vrstest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vrstest/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515873,
        "node_id": "MDU6TGFiZWwxNDM1MTU4NzM=",
        "url": "https://api.github.com/repos/google/guava/labels/status=invalid",
        "name": "status=invalid",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-05-21T04:47:11Z",
    "updated_at": "2015-05-29T16:46:52Z",
    "closed_at": "2015-05-29T00:02:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Guava should improve sorting. in a way that the every type of list is supported. like right now ArrayList are supported. it should the same with CopyOnWriteArrayList.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2055",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2055/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2055/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2055/events",
    "html_url": "https://github.com/google/guava/issues/2055",
    "id": 77792712,
    "node_id": "MDU6SXNzdWU3Nzc5MjcxMg==",
    "number": 2055,
    "title": "Document that EventBus doesn't (can't) respect parameterized types",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143509865,
        "node_id": "MDU6TGFiZWwxNDM1MDk4NjU=",
        "url": "https://api.github.com/repos/google/guava/labels/package=eventbus",
        "name": "package=eventbus",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505529,
        "node_id": "MDU6TGFiZWwxNDM1MDU1Mjk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=api-docs",
        "name": "type=api-docs",
        "color": "f4d75f",
        "default": false,
        "description": "Change/add API documentation"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-05-18T20:25:21Z",
    "updated_at": "2019-08-09T16:35:48Z",
    "closed_at": "2019-08-09T16:35:41Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "https://groups.google.com/d/topic/guava-discuss/xJJggXuhhbs/discussion\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2054",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2054/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2054/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2054/events",
    "html_url": "https://github.com/google/guava/issues/2054",
    "id": 77691956,
    "node_id": "MDU6SXNzdWU3NzY5MTk1Ng==",
    "number": 2054,
    "title": "Don't swallow interruption state in Throwables.propagate",
    "user": {
      "login": "electrum",
      "id": 9230,
      "node_id": "MDQ6VXNlcjkyMzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/9230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143534295,
        "node_id": "MDU6TGFiZWwxNDM1MzQyOTU=",
        "url": "https://api.github.com/repos/google/guava/labels/status=obsolete",
        "name": "status=obsolete",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-05-18T15:11:09Z",
    "updated_at": "2016-03-21T12:49:19Z",
    "closed_at": "2016-03-21T12:49:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using `Throwables.propagate` with a method that throws `Exception` or `Throwable`, using it properly requires some boilerplate to avoid swallowing `InterruptedException`. An example of such a method is `MethodHandle.invoke`. While it is true that such a method is very unlikely to throw `InterruptedException`, the pedant in me requires handling it correctly. It would be nice if this check could be added to `propagate`.\n\n``` java\ntry {\n    method.invoke();\n}\ncatch (Throwable t) {\n    if (t instanceof InterruptedException) {\n        Thread.currentThread().interrupt();\n    }\n    throw Throwables.propagate(t);\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2053",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2053/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2053/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2053/events",
    "html_url": "https://github.com/google/guava/issues/2053",
    "id": 76480059,
    "node_id": "MDU6SXNzdWU3NjQ4MDA1OQ==",
    "number": 2053,
    "title": "Adding additional precondition checks for blank / empty",
    "user": {
      "login": "cchesser",
      "id": 2358324,
      "node_id": "MDQ6VXNlcjIzNTgzMjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2358324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cchesser",
      "html_url": "https://github.com/cchesser",
      "followers_url": "https://api.github.com/users/cchesser/followers",
      "following_url": "https://api.github.com/users/cchesser/following{/other_user}",
      "gists_url": "https://api.github.com/users/cchesser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cchesser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cchesser/subscriptions",
      "organizations_url": "https://api.github.com/users/cchesser/orgs",
      "repos_url": "https://api.github.com/users/cchesser/repos",
      "events_url": "https://api.github.com/users/cchesser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cchesser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-05-14T20:29:00Z",
    "updated_at": "2015-05-14T21:36:20Z",
    "closed_at": "2015-05-14T21:36:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to add more checks which can be applied on the [Preconditions](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Preconditions.html) class. These checks would include:\n- checkBlank(String)\n- checkNotBlank(String)\n- checkEmpty(String/Collection)\n- checkNotEmpty(String/Collection)\n\nAll of these would throw an IllegalArgumentException if the check fails. Would it be acceptable to expand Preconditions to these new checks? I would be happy do to the pull request if so.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2052",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2052/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2052/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2052/events",
    "html_url": "https://github.com/google/guava/pull/2052",
    "id": 76036956,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUzNDMxMjA=",
    "number": 2052,
    "title": "Update JavaDoc for Maps Difference.",
    "user": {
      "login": "qayshp",
      "id": 714080,
      "node_id": "MDQ6VXNlcjcxNDA4MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/714080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qayshp",
      "html_url": "https://github.com/qayshp",
      "followers_url": "https://api.github.com/users/qayshp/followers",
      "following_url": "https://api.github.com/users/qayshp/following{/other_user}",
      "gists_url": "https://api.github.com/users/qayshp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qayshp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qayshp/subscriptions",
      "organizations_url": "https://api.github.com/users/qayshp/orgs",
      "repos_url": "https://api.github.com/users/qayshp/repos",
      "events_url": "https://api.github.com/users/qayshp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qayshp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-05-13T16:06:12Z",
    "updated_at": "2017-04-18T14:00:49Z",
    "closed_at": "2017-04-18T14:00:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2052",
      "html_url": "https://github.com/google/guava/pull/2052",
      "diff_url": "https://github.com/google/guava/pull/2052.diff",
      "patch_url": "https://github.com/google/guava/pull/2052.patch"
    },
    "body": "Make the JavaDoc more clear about what happens in cases of equivalence.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2051",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2051/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2051/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2051/events",
    "html_url": "https://github.com/google/guava/issues/2051",
    "id": 75930345,
    "node_id": "MDU6SXNzdWU3NTkzMDM0NQ==",
    "number": 2051,
    "title": "ImmutableMap.Builder should have a public constructor which takes an initial capacity",
    "user": {
      "login": "rgolden",
      "id": 1523344,
      "node_id": "MDQ6VXNlcjE1MjMzNDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1523344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgolden",
      "html_url": "https://github.com/rgolden",
      "followers_url": "https://api.github.com/users/rgolden/followers",
      "following_url": "https://api.github.com/users/rgolden/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgolden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgolden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgolden/subscriptions",
      "organizations_url": "https://api.github.com/users/rgolden/orgs",
      "repos_url": "https://api.github.com/users/rgolden/repos",
      "events_url": "https://api.github.com/users/rgolden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgolden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143515008,
        "node_id": "MDU6TGFiZWwxNDM1MTUwMDg=",
        "url": "https://api.github.com/repos/google/guava/labels/status=duplicate",
        "name": "status=duplicate",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-05-13T10:12:27Z",
    "updated_at": "2015-06-11T05:17:57Z",
    "closed_at": "2015-06-11T05:17:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I use the builder and put multiple entries into the map, the capacity keeps getting resized. I know the desired capacity before hand, so should be able to construct an immutable map of the correct size, and avoid this performance tax.\n\nThe builder already has a package private capacity constructor. I can not find documentation as to why this is not public (https://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures may have explained, but it is no longer available).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2049",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2049/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2049/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2049/events",
    "html_url": "https://github.com/google/guava/issues/2049",
    "id": 75080046,
    "node_id": "MDU6SXNzdWU3NTA4MDA0Ng==",
    "number": 2049,
    "title": "AsyncEventBus  with  CyclicBarrier",
    "user": {
      "login": "fromcth",
      "id": 3088172,
      "node_id": "MDQ6VXNlcjMwODgxNzI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3088172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fromcth",
      "html_url": "https://github.com/fromcth",
      "followers_url": "https://api.github.com/users/fromcth/followers",
      "following_url": "https://api.github.com/users/fromcth/following{/other_user}",
      "gists_url": "https://api.github.com/users/fromcth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fromcth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fromcth/subscriptions",
      "organizations_url": "https://api.github.com/users/fromcth/orgs",
      "repos_url": "https://api.github.com/users/fromcth/repos",
      "events_url": "https://api.github.com/users/fromcth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fromcth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143509865,
        "node_id": "MDU6TGFiZWwxNDM1MDk4NjU=",
        "url": "https://api.github.com/repos/google/guava/labels/package=eventbus",
        "name": "package=eventbus",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-05-11T04:23:21Z",
    "updated_at": "2019-07-30T14:49:36Z",
    "closed_at": "2019-07-30T14:49:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi，  \n\nI use AsyncEventBus  in my project , and sometime i want  the AsyncEventBus   have  \"CyclicBarrier \" function.  \n\nCan guava write a  version of  \"AsyncEventBusWithCyclicBarrier\" ?  or  make the \"subscribersByType， EventSubscriber\" class public , so  i can override AsyncEventBus's dispatch function  by myself\n\nbest wishes\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2047",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2047/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2047/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2047/events",
    "html_url": "https://github.com/google/guava/issues/2047",
    "id": 73682572,
    "node_id": "MDU6SXNzdWU3MzY4MjU3Mg==",
    "number": 2047,
    "title": "Can't seem to properly form a pull request",
    "user": {
      "login": "javajosh",
      "id": 18854,
      "node_id": "MDQ6VXNlcjE4ODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/18854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javajosh",
      "html_url": "https://github.com/javajosh",
      "followers_url": "https://api.github.com/users/javajosh/followers",
      "following_url": "https://api.github.com/users/javajosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/javajosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javajosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javajosh/subscriptions",
      "organizations_url": "https://api.github.com/users/javajosh/orgs",
      "repos_url": "https://api.github.com/users/javajosh/repos",
      "events_url": "https://api.github.com/users/javajosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javajosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-05-06T17:21:04Z",
    "updated_at": "2015-05-21T16:15:17Z",
    "closed_at": "2015-05-21T16:15:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So I found a minor bug while browsing the source in IntelliJ and figured, heck, why not fix it? So I forked guava, built it, made my change, pushed and created a pull request, complete with affable wit.\n\n   https://github.com/google/guava/pull/2045\n\nThe CLA bot wasn't happy. I suspected it was because I signed the CLA under javajosh@gmail.com, but my `git config user.email` was a different email. So I changed the value, reverted, created a new branch 'javajosh' and merged my change from master, pushed, and crafted a new pull request. Yet this did not, apparently, correct the problem:\n\n   https://github.com/google/guava/pull/2046\n\nI am flummoxed.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2046",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2046/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2046/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2046/events",
    "html_url": "https://github.com/google/guava/pull/2046",
    "id": 73681014,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ4Mzg5ODU=",
    "number": 2046,
    "title": "Removed unnecessary null check from io.BaseEncoding.encode(bytes)",
    "user": {
      "login": "javajosh",
      "id": 18854,
      "node_id": "MDQ6VXNlcjE4ODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/18854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javajosh",
      "html_url": "https://github.com/javajosh",
      "followers_url": "https://api.github.com/users/javajosh/followers",
      "following_url": "https://api.github.com/users/javajosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/javajosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javajosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javajosh/subscriptions",
      "organizations_url": "https://api.github.com/users/javajosh/orgs",
      "repos_url": "https://api.github.com/users/javajosh/repos",
      "events_url": "https://api.github.com/users/javajosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javajosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-05-06T17:14:48Z",
    "updated_at": "2015-05-06T17:34:56Z",
    "closed_at": "2015-05-06T17:34:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2046",
      "html_url": "https://github.com/google/guava/pull/2046",
      "diff_url": "https://github.com/google/guava/pull/2046.diff",
      "patch_url": "https://github.com/google/guava/pull/2046.patch"
    },
    "body": "The check is done on line 166, so the first check is redundant.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2045",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2045/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2045/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2045/events",
    "html_url": "https://github.com/google/guava/pull/2045",
    "id": 73677680,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ4Mzc0NjQ=",
    "number": 2045,
    "title": "Removed unnecessary null check from io.BaseEncoding.encode(bytes)",
    "user": {
      "login": "javajosh",
      "id": 18854,
      "node_id": "MDQ6VXNlcjE4ODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/18854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javajosh",
      "html_url": "https://github.com/javajosh",
      "followers_url": "https://api.github.com/users/javajosh/followers",
      "following_url": "https://api.github.com/users/javajosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/javajosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javajosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javajosh/subscriptions",
      "organizations_url": "https://api.github.com/users/javajosh/orgs",
      "repos_url": "https://api.github.com/users/javajosh/repos",
      "events_url": "https://api.github.com/users/javajosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javajosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-05-06T16:57:53Z",
    "updated_at": "2015-05-06T17:09:48Z",
    "closed_at": "2015-05-06T17:09:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2045",
      "html_url": "https://github.com/google/guava/pull/2045",
      "diff_url": "https://github.com/google/guava/pull/2045.diff",
      "patch_url": "https://github.com/google/guava/pull/2045.patch"
    },
    "body": "The check is done on line 166, so the first check is redundant.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2044",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2044/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2044/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2044/events",
    "html_url": "https://github.com/google/guava/pull/2044",
    "id": 72474448,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ1NTAyNTM=",
    "number": 2044,
    "title": "Small Javadoc fix.",
    "user": {
      "login": "archiecobbs",
      "id": 545866,
      "node_id": "MDQ6VXNlcjU0NTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/545866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/archiecobbs",
      "html_url": "https://github.com/archiecobbs",
      "followers_url": "https://api.github.com/users/archiecobbs/followers",
      "following_url": "https://api.github.com/users/archiecobbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/archiecobbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/archiecobbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/archiecobbs/subscriptions",
      "organizations_url": "https://api.github.com/users/archiecobbs/orgs",
      "repos_url": "https://api.github.com/users/archiecobbs/repos",
      "events_url": "https://api.github.com/users/archiecobbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/archiecobbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-05-01T17:02:14Z",
    "updated_at": "2015-05-01T19:44:46Z",
    "closed_at": "2015-05-01T19:44:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2044",
      "html_url": "https://github.com/google/guava/pull/2044",
      "diff_url": "https://github.com/google/guava/pull/2044.diff",
      "patch_url": "https://github.com/google/guava/pull/2044.patch"
    },
    "body": "",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2043",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2043/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2043/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2043/events",
    "html_url": "https://github.com/google/guava/pull/2043",
    "id": 72426903,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ1MzU0ODM=",
    "number": 2043,
    "title": "update travis-ci for new container based infrastructure and maven cachin...",
    "user": {
      "login": "codylerum",
      "id": 217262,
      "node_id": "MDQ6VXNlcjIxNzI2Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/217262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codylerum",
      "html_url": "https://github.com/codylerum",
      "followers_url": "https://api.github.com/users/codylerum/followers",
      "following_url": "https://api.github.com/users/codylerum/following{/other_user}",
      "gists_url": "https://api.github.com/users/codylerum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codylerum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codylerum/subscriptions",
      "organizations_url": "https://api.github.com/users/codylerum/orgs",
      "repos_url": "https://api.github.com/users/codylerum/repos",
      "events_url": "https://api.github.com/users/codylerum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codylerum/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-05-01T12:50:21Z",
    "updated_at": "2015-05-21T15:45:18Z",
    "closed_at": "2015-05-20T20:43:56Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2043",
      "html_url": "https://github.com/google/guava/pull/2043",
      "diff_url": "https://github.com/google/guava/pull/2043.diff",
      "patch_url": "https://github.com/google/guava/pull/2043.patch"
    },
    "body": "Looks like this shaves 9+ minutes in total off the build and about 3 per sub build\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2042",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2042/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2042/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2042/events",
    "html_url": "https://github.com/google/guava/issues/2042",
    "id": 72171932,
    "node_id": "MDU6SXNzdWU3MjE3MTkzMg==",
    "number": 2042,
    "title": "What's the point about CycleDetectingLockFactory (@Beta, I know...)",
    "user": {
      "login": "Petikoch",
      "id": 9936866,
      "node_id": "MDQ6VXNlcjk5MzY4NjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9936866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Petikoch",
      "html_url": "https://github.com/Petikoch",
      "followers_url": "https://api.github.com/users/Petikoch/followers",
      "following_url": "https://api.github.com/users/Petikoch/following{/other_user}",
      "gists_url": "https://api.github.com/users/Petikoch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Petikoch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Petikoch/subscriptions",
      "organizations_url": "https://api.github.com/users/Petikoch/orgs",
      "repos_url": "https://api.github.com/users/Petikoch/repos",
      "events_url": "https://api.github.com/users/Petikoch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Petikoch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-04-30T14:04:43Z",
    "updated_at": "2015-05-07T18:56:17Z",
    "closed_at": "2015-05-07T18:47:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there,\n\nI'm trying to understand the CycleDetectingLockFactory class and how it can be useful.\n\nI checked the unit tests and found one scenario with a false positive. I did another scenario with a real deadlock (involving two threads), which is not recognized.\n\nSo I'm wondering what is the benefit of the current class implementation? (If those two basic scenarios are not working?)\n\nAs far as I can guess, the only meaningful point about this implementation is, that the rule `all threads acquire the locks in the same order`(http://docs.oracle.com/cd/E19455-01/806-5257/6je9h0347/index.html) is enforced, is that right? After reading the javadoc again, I find this as `checking for cycles in lock acquisition order`. So, a better name for the class could be `IllegalLockAquisitionOrderDetectingLockFactory`. \n\nThanks for your feedback and best regards from Switzerland, \nPeti\n\n```\npackage com.google.common.util.concurrent;\n\nimport com.google.common.util.concurrent.CycleDetectingLockFactory.Policies;\nimport junit.framework.TestCase;\n\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class CycleDetectingLockFactoryTest extends TestCase {\n\n    private ReentrantLock lockA;\n    private ReentrantLock lockB;\n\n    @Override\n    protected void setUp() throws Exception {\n        CycleDetectingLockFactory factory =\n                CycleDetectingLockFactory.newInstance(Policies.THROW);\n        lockB = factory.newReentrantLock(\"LockB\");\n        lockA = factory.newReentrantLock(\"LockA\");\n    }\n\n    //------\n    // FALSE POSITIVE?\n    //-----\n    public void testDeadlock_twoLocks_falsePositive() {\n        // Establish an acquisition order of lockA -> lockB.\n        lockA.lock();\n        lockB.lock();\n        lockA.unlock();\n        lockB.unlock();\n\n        // The opposite order fails afterwards, although there is no deadlock ANYWHERE\n        lockB.lock();\n        lockA.lock();\n    }\n\n    //------\n    // REAL DEADLOCK NOT RECOGNIZED?\n    //-----\n    public void testDeadlock_twoThreads_realDeadlock_notDetectedOrPrevented() throws InterruptedException {\n        final CountDownLatch t1HasLockA = new CountDownLatch(1);\n        final CountDownLatch t2HasLockB = new CountDownLatch(1);\n        final CountDownLatch allThreadsFinished = new CountDownLatch(2);\n\n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    //prepare\n                    lockA.lock();\n                    t1HasLockA.countDown();\n                    t2HasLockB.await();\n\n                    // now deadlock\n                    lockB.lock();\n                } catch (Exception ignored) {\n                    // expected due to the use of CycleDetectingLockFactory\n                    ignored.printStackTrace();\n                } finally {\n                    lockA.unlock();\n                    lockB.unlock(); // just in case\n                    allThreadsFinished.countDown();\n                }\n            }\n        });\n        t1.setDaemon(true);\n        t1.start();\n\n        Thread t2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    // prepare\n                    t1HasLockA.await();\n                    lockB.lock();\n                    t2HasLockB.countDown();\n\n                    // now deadlock\n                    lockA.lock();\n                } catch (Exception ignored) {\n                    // expected due to the use of CycleDetectingLockFactory\n                    ignored.printStackTrace();\n                } finally {\n                    lockB.unlock();\n                    lockA.unlock(); // just in case\n                    allThreadsFinished.countDown();\n                }\n            }\n        });\n        t2.setDaemon(true);\n        t2.start();\n\n        t1HasLockA.await();\n        System.out.println(\"Thread 1 has Lock A\");\n        t2HasLockB.await();\n        System.out.println(\"Thread 2 has Lock A\");\n\n        allThreadsFinished.await();\n    }\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2039",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2039/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2039/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2039/events",
    "html_url": "https://github.com/google/guava/issues/2039",
    "id": 70324194,
    "node_id": "MDU6SXNzdWU3MDMyNDE5NA==",
    "number": 2039,
    "title": "Possible duplicate tests? - testElapsed_millis() and testElapsedMillis()",
    "user": {
      "login": "daveschaefer",
      "id": 666646,
      "node_id": "MDQ6VXNlcjY2NjY0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/666646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daveschaefer",
      "html_url": "https://github.com/daveschaefer",
      "followers_url": "https://api.github.com/users/daveschaefer/followers",
      "following_url": "https://api.github.com/users/daveschaefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/daveschaefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daveschaefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daveschaefer/subscriptions",
      "organizations_url": "https://api.github.com/users/daveschaefer/orgs",
      "repos_url": "https://api.github.com/users/daveschaefer/repos",
      "events_url": "https://api.github.com/users/daveschaefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daveschaefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 6,
    "created_at": "2015-04-23T06:31:39Z",
    "updated_at": "2015-07-27T20:43:55Z",
    "closed_at": "2015-04-23T16:01:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I was reading through the set of tests at https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/base/StopwatchTest.java , and I noticed there are two tests that appear to do the same thing - testElapsed_millis() and testElapsedMillis(). Is this expected? Could one test perhaps be an old test under a different naming convention? From the history it looks like they were added independently.\n\nThe contribution guide recommends creating an issue as the first step, so I thought I would ask.\n\nGitHub suggests that both functions are only called from guava-gwt/test/com/google/common/base/StopwatchTest_gwt.java . Would it be appropriate to create a pull request to remove one of the tests? (Or of course, feel free to simply remove one yourself if the workflow is easier; I just wanted to ask)\n\nCheers!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2037",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2037/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2037/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2037/events",
    "html_url": "https://github.com/google/guava/issues/2037",
    "id": 69562130,
    "node_id": "MDU6SXNzdWU2OTU2MjEzMA==",
    "number": 2037,
    "title": "Optional.hashCode()",
    "user": {
      "login": "alexei-zaycev",
      "id": 7767211,
      "node_id": "MDQ6VXNlcjc3NjcyMTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7767211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexei-zaycev",
      "html_url": "https://github.com/alexei-zaycev",
      "followers_url": "https://api.github.com/users/alexei-zaycev/followers",
      "following_url": "https://api.github.com/users/alexei-zaycev/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexei-zaycev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexei-zaycev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexei-zaycev/subscriptions",
      "organizations_url": "https://api.github.com/users/alexei-zaycev/orgs",
      "repos_url": "https://api.github.com/users/alexei-zaycev/repos",
      "events_url": "https://api.github.com/users/alexei-zaycev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexei-zaycev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 4,
    "created_at": "2015-04-20T11:04:29Z",
    "updated_at": "2015-07-27T20:44:29Z",
    "closed_at": "2015-04-24T19:51:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Uncorrect hashCode() implementation at com.google.common.base.Absent and com.google.common.base.Present - for example if hashCode() of reference at Present return 0 then it hashCode() equal Absent.\n\nexample: Optional.absent() has same hash code as Optional.of(0.0) or Optional.of(0)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2036",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2036/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2036/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2036/events",
    "html_url": "https://github.com/google/guava/issues/2036",
    "id": 69449934,
    "node_id": "MDU6SXNzdWU2OTQ0OTkzNA==",
    "number": 2036,
    "title": "Some methods in LongMathTest are pointless",
    "user": {
      "login": "Maaartinus",
      "id": 2324516,
      "node_id": "MDQ6VXNlcjIzMjQ1MTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2324516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Maaartinus",
      "html_url": "https://github.com/Maaartinus",
      "followers_url": "https://api.github.com/users/Maaartinus/followers",
      "following_url": "https://api.github.com/users/Maaartinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/Maaartinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Maaartinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Maaartinus/subscriptions",
      "organizations_url": "https://api.github.com/users/Maaartinus/orgs",
      "repos_url": "https://api.github.com/users/Maaartinus/repos",
      "events_url": "https://api.github.com/users/Maaartinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Maaartinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-19T18:13:54Z",
    "updated_at": "2015-05-20T14:51:57Z",
    "closed_at": "2015-05-20T14:51:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Some tests in `LongMathTest` test about nothing as they use `ALL_INTEGER_CANDIDATES`. For example, `expectedSuccess` in `testCheckedAdd` is always true.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2035",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2035/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2035/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2035/events",
    "html_url": "https://github.com/google/guava/issues/2035",
    "id": 69038583,
    "node_id": "MDU6SXNzdWU2OTAzODU4Mw==",
    "number": 2035,
    "title": "Could we add a getFirstValue(K key) method to Multimap and return Optional<V>",
    "user": {
      "login": "Sumu-Ning",
      "id": 10792148,
      "node_id": "MDQ6VXNlcjEwNzkyMTQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10792148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sumu-Ning",
      "html_url": "https://github.com/Sumu-Ning",
      "followers_url": "https://api.github.com/users/Sumu-Ning/followers",
      "following_url": "https://api.github.com/users/Sumu-Ning/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sumu-Ning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sumu-Ning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sumu-Ning/subscriptions",
      "organizations_url": "https://api.github.com/users/Sumu-Ning/orgs",
      "repos_url": "https://api.github.com/users/Sumu-Ning/repos",
      "events_url": "https://api.github.com/users/Sumu-Ning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sumu-Ning/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-04-17T00:47:22Z",
    "updated_at": "2015-04-17T01:04:35Z",
    "closed_at": "2015-04-17T01:04:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In some cases, I know that there will be at most one value for some key in a multimap, and it is pretty annoying to get the value out by the iterator and then check hasNext() and get by next(), especially if the multimaps are nested in each other.\n\ncould we wrap it and provide a method on Multimap\npublic Optional<V> getFirstValue(K key);\nJust return the first Value by Iterator or Absent.\n\nSimilar to XMLNode.getFirstChild()\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2034",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2034/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2034/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2034/events",
    "html_url": "https://github.com/google/guava/issues/2034",
    "id": 68819135,
    "node_id": "MDU6SXNzdWU2ODgxOTEzNQ==",
    "number": 2034,
    "title": "guava-testlib not compatible with latest version of Truth",
    "user": {
      "login": "ekuefler",
      "id": 666477,
      "node_id": "MDQ6VXNlcjY2NjQ3Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/666477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekuefler",
      "html_url": "https://github.com/ekuefler",
      "followers_url": "https://api.github.com/users/ekuefler/followers",
      "following_url": "https://api.github.com/users/ekuefler/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekuefler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekuefler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekuefler/subscriptions",
      "organizations_url": "https://api.github.com/users/ekuefler/orgs",
      "repos_url": "https://api.github.com/users/ekuefler/repos",
      "events_url": "https://api.github.com/users/ekuefler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekuefler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504641,
        "node_id": "MDU6TGFiZWwxNDM1MDQ2NDE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=testing",
        "name": "package=testing",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-16T00:52:09Z",
    "updated_at": "2019-07-31T15:37:30Z",
    "closed_at": "2019-07-31T15:37:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "guava 18 declares a dependency on version 0.23 of Truth. The latest version is 0.24. When running a collection test with 0.24 on the classpath, I get an exception like the following:\n\n```\n1) testRetainAll_countIgnored[ObservableArrayList [collection size: several]](com.google.common.collect.testing.testers.ListRetainAllTester)\njava.lang.IncompatibleClassChangeError: Found class com.google.common.truth.CollectionSubject$Has, but interface was expected\n        at com.google.common.collect.testing.testers.ListRetainAllTester.testRetainAll_countIgnored(ListRetainAllTester.java:70)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:483)\n        at junit.framework.TestCase.runTest(TestCase.java:176)\n        at junit.framework.TestCase.runBare(TestCase.java:141)\n        at junit.framework.TestResult$1.protect(TestResult.java:122)\n        at junit.framework.TestResult.runProtected(TestResult.java:142)\n        at junit.framework.TestResult.run(TestResult.java:125)\n        at junit.framework.TestCase.run(TestCase.java:129)\n        at junit.framework.TestSuite.runTest(TestSuite.java:252)\n        at junit.framework.TestSuite.run(TestSuite.java:247)\n        at junit.framework.TestSuite.runTest(TestSuite.java:252)\n        at junit.framework.TestSuite.run(TestSuite.java:247)\n        at junit.framework.TestSuite.runTest(TestSuite.java:252)\n        at junit.framework.TestSuite.run(TestSuite.java:247)\n        at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)\n        at org.junit.runners.Suite.runChild(Suite.java:128)\n        at org.junit.runners.Suite.runChild(Suite.java:27)\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n        at org.junit.runners.Suite.runChild(Suite.java:128)\n        at org.junit.runners.Suite.runChild(Suite.java:27)\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n        at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n        at org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n        at org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\n        at org.junit.runner.JUnitCore.main(JUnitCore.java:36)\n```\n\nDowngrading to 0.23 fixes the problem.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2033",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2033/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2033/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2033/events",
    "html_url": "https://github.com/google/guava/issues/2033",
    "id": 68754267,
    "node_id": "MDU6SXNzdWU2ODc1NDI2Nw==",
    "number": 2033,
    "title": "ImmutableMap.Builder can be subclassed outside of the package",
    "user": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 691862394,
        "node_id": "MDU6TGFiZWw2OTE4NjIzOTQ=",
        "url": "https://api.github.com/repos/google/guava/labels/P3",
        "name": "P3",
        "color": "c5c5c5",
        "default": false,
        "description": null
      },
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "ronshapiro",
        "id": 792797,
        "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ronshapiro",
        "html_url": "https://github.com/ronshapiro",
        "followers_url": "https://api.github.com/users/ronshapiro/followers",
        "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
        "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
        "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
        "repos_url": "https://api.github.com/users/ronshapiro/repos",
        "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-04-15T18:24:04Z",
    "updated_at": "2017-11-01T18:59:09Z",
    "closed_at": "2017-10-09T18:28:06Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "It's non-final (since it's subclassed for the sorted variety, etc.) and has a public no-arg constructor. There may be other `Builder`s in this boat. We should consider deprecating the public no-arg constructor, given that having two ways to create a `Builder` is unusual and unnecessary in the first place.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2031",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2031/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2031/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2031/events",
    "html_url": "https://github.com/google/guava/issues/2031",
    "id": 68352366,
    "node_id": "MDU6SXNzdWU2ODM1MjM2Ng==",
    "number": 2031,
    "title": "RangeSet<C> could implement Predicate<C>",
    "user": {
      "login": "panchenko",
      "id": 440271,
      "node_id": "MDQ6VXNlcjQ0MDI3MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/440271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/panchenko",
      "html_url": "https://github.com/panchenko",
      "followers_url": "https://api.github.com/users/panchenko/followers",
      "following_url": "https://api.github.com/users/panchenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/panchenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/panchenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/panchenko/subscriptions",
      "organizations_url": "https://api.github.com/users/panchenko/orgs",
      "repos_url": "https://api.github.com/users/panchenko/repos",
      "events_url": "https://api.github.com/users/panchenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/panchenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-14T12:11:17Z",
    "updated_at": "2015-04-15T19:06:51Z",
    "closed_at": "2015-04-15T19:06:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`Range` implements it, so it would be natural if `RangeSet` also does.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2029",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2029/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2029/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2029/events",
    "html_url": "https://github.com/google/guava/issues/2029",
    "id": 67801669,
    "node_id": "MDU6SXNzdWU2NzgwMTY2OQ==",
    "number": 2029,
    "title": "Collections should override spliterator()",
    "user": {
      "login": "cowwoc",
      "id": 633348,
      "node_id": "MDQ6VXNlcjYzMzM0OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/633348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cowwoc",
      "html_url": "https://github.com/cowwoc",
      "followers_url": "https://api.github.com/users/cowwoc/followers",
      "following_url": "https://api.github.com/users/cowwoc/following{/other_user}",
      "gists_url": "https://api.github.com/users/cowwoc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cowwoc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cowwoc/subscriptions",
      "organizations_url": "https://api.github.com/users/cowwoc/orgs",
      "repos_url": "https://api.github.com/users/cowwoc/repos",
      "events_url": "https://api.github.com/users/cowwoc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cowwoc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-04-11T16:03:20Z",
    "updated_at": "2016-11-03T19:47:53Z",
    "closed_at": "2016-11-03T19:47:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Because Guava's collection classes (e.g. `ImmutableList`) do not override `spliterator()` they inherit the default implementation which has a characteristics of `SIZED` and `SUBSIZED`. This means that they cannot be used for parallel processing with ForkJoin.\n\nExpected behavior: `Immutable*` should provide a more efficient `spliterator()` implementation.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2028",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2028/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2028/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2028/events",
    "html_url": "https://github.com/google/guava/issues/2028",
    "id": 67630500,
    "node_id": "MDU6SXNzdWU2NzYzMDUwMA==",
    "number": 2028,
    "title": "Iterables.transform and Suppliers.compose are inconsistent",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "ronshapiro",
      "id": 792797,
      "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronshapiro",
      "html_url": "https://github.com/ronshapiro",
      "followers_url": "https://api.github.com/users/ronshapiro/followers",
      "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
      "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
      "repos_url": "https://api.github.com/users/ronshapiro/repos",
      "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "ronshapiro",
        "id": 792797,
        "node_id": "MDQ6VXNlcjc5Mjc5Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/792797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ronshapiro",
        "html_url": "https://github.com/ronshapiro",
        "followers_url": "https://api.github.com/users/ronshapiro/followers",
        "following_url": "https://api.github.com/users/ronshapiro/following{/other_user}",
        "gists_url": "https://api.github.com/users/ronshapiro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ronshapiro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ronshapiro/subscriptions",
        "organizations_url": "https://api.github.com/users/ronshapiro/orgs",
        "repos_url": "https://api.github.com/users/ronshapiro/repos",
        "events_url": "https://api.github.com/users/ronshapiro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ronshapiro/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-04-10T16:22:52Z",
    "updated_at": "2017-10-09T16:51:07Z",
    "closed_at": "2017-10-09T16:51:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`Iterables.transform` and `Iterators.transform` are declared like so:\n\n```\npublic static <F, T> Iterator<T> transform(Iterator<F> fromIterator, Function<? super F, ? extends T> function);\npublic static <F, T> Iterable<T> transform(Iterable<F> fromIterable, Function<? super F, ? extends T> function);\n```\n\n`Suppliers.compose` is declared like so:\n\n```\npublic static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier);\n```\n\nThese 3 methods are conceptually doing the same thing - taking values out of a 'producer' object (iterator/iterable/supplier) and lazily transforming them using a function. So they should all look the same, and in particular, have arguments in the same order.\n\nTo make them consistent, I suggest that `Suppliers.compose` is deprecated in favour of the following method:\n\n```\npublic static <F, T> Supplier<T> transform(Supplier<F> supplier, Function<? super F, ? extends T> function);\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2027",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2027/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2027/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2027/events",
    "html_url": "https://github.com/google/guava/issues/2027",
    "id": 67551207,
    "node_id": "MDU6SXNzdWU2NzU1MTIwNw==",
    "number": 2027,
    "title": "CharSource to CharSink line by line",
    "user": {
      "login": "orionll",
      "id": 761899,
      "node_id": "MDQ6VXNlcjc2MTg5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/761899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orionll",
      "html_url": "https://github.com/orionll",
      "followers_url": "https://api.github.com/users/orionll/followers",
      "following_url": "https://api.github.com/users/orionll/following{/other_user}",
      "gists_url": "https://api.github.com/users/orionll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orionll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orionll/subscriptions",
      "organizations_url": "https://api.github.com/users/orionll/orgs",
      "repos_url": "https://api.github.com/users/orionll/repos",
      "events_url": "https://api.github.com/users/orionll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orionll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143507158,
        "node_id": "MDU6TGFiZWwxNDM1MDcxNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=io",
        "name": "package=io",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-10T09:26:08Z",
    "updated_at": "2015-05-20T20:35:33Z",
    "closed_at": "2015-05-20T20:35:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Sometimes it is necessary to replace line endings in some text with platform line endings. One way to do it is to call CharSource.readLines() and then pass the returned list to CharSink.writeLines(). While this   solves the problem, this is not very efficient, because it allocates an intermediate ImmutableList which can be huge.\n\nIt would be nice to have a method CharSource.writeLinesTo(CharSink), which does the same job without allocating an intermediate list.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2024",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2024/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2024/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2024/events",
    "html_url": "https://github.com/google/guava/issues/2024",
    "id": 66651629,
    "node_id": "MDU6SXNzdWU2NjY1MTYyOQ==",
    "number": 2024,
    "title": "Document the ordering guarantees made by Uri",
    "user": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-06T16:51:47Z",
    "updated_at": "2017-10-09T16:54:52Z",
    "closed_at": "2017-10-09T16:54:52Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Someone asked, \"is the order of URL parameters fixed across JVM boundaries? In other words, is it e.g. alphabetical, rather than just hash order?\"\n\nAnswers:\n\"They are in insertion (creation) order, so that parse->serialize ordering is preserved.\"\n\"Yep, uses a LinkedListMultimap under the hood.\"\n\"It seems unsafe to depend on this though, because that detail is never promised in the Uri interface, at least as far as I can see (though, it's probably one of those things that is unlikely to ever change).\"\n\nSo... \"If we're willing to make the commitment, it would be nice to add that promise to the interface.\"\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2023",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2023/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2023/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2023/events",
    "html_url": "https://github.com/google/guava/issues/2023",
    "id": 66369100,
    "node_id": "MDU6SXNzdWU2NjM2OTEwMA==",
    "number": 2023,
    "title": "Allow use of Longs.toByteArray without allocation",
    "user": {
      "login": "brianfromoregon",
      "id": 1198163,
      "node_id": "MDQ6VXNlcjExOTgxNjM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1198163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianfromoregon",
      "html_url": "https://github.com/brianfromoregon",
      "followers_url": "https://api.github.com/users/brianfromoregon/followers",
      "following_url": "https://api.github.com/users/brianfromoregon/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianfromoregon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianfromoregon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianfromoregon/subscriptions",
      "organizations_url": "https://api.github.com/users/brianfromoregon/orgs",
      "repos_url": "https://api.github.com/users/brianfromoregon/repos",
      "events_url": "https://api.github.com/users/brianfromoregon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianfromoregon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143551708,
        "node_id": "MDU6TGFiZWwxNDM1NTE3MDg=",
        "url": "https://api.github.com/repos/google/guava/labels/package=primitives",
        "name": "package=primitives",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-04-04T21:17:57Z",
    "updated_at": "2015-04-06T16:23:19Z",
    "closed_at": "2015-04-06T16:22:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Request for Longs.toByteArray and Ints.toByteArray (maybe others?) to add overload accepting a byte[] argument to avoid the new byte[8] allocation.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2022",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2022/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2022/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2022/events",
    "html_url": "https://github.com/google/guava/issues/2022",
    "id": 66180541,
    "node_id": "MDU6SXNzdWU2NjE4MDU0MQ==",
    "number": 2022,
    "title": "ExplicitOrdering of collection with 1 element doesn't throw exception",
    "user": {
      "login": "mgh520",
      "id": 7861715,
      "node_id": "MDQ6VXNlcjc4NjE3MTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7861715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgh520",
      "html_url": "https://github.com/mgh520",
      "followers_url": "https://api.github.com/users/mgh520/followers",
      "following_url": "https://api.github.com/users/mgh520/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgh520/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgh520/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgh520/subscriptions",
      "organizations_url": "https://api.github.com/users/mgh520/orgs",
      "repos_url": "https://api.github.com/users/mgh520/repos",
      "events_url": "https://api.github.com/users/mgh520/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgh520/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-03T16:31:22Z",
    "updated_at": "2017-11-13T17:38:44Z",
    "closed_at": "2017-11-13T17:38:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "the javadoc for ExplicitOrdering says it will throw a ClassCastException if any elements are not in the explicit list defined for the ordering.  However, this depends on the comparator actually getting called.  In the case of sorting a list with a single item that is not present in the explict ordering list, an exception is not thrown because the underlying call to Arrays.sort will not call the comparator for a 1 item array.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2021",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2021/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2021/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2021/events",
    "html_url": "https://github.com/google/guava/issues/2021",
    "id": 65638553,
    "node_id": "MDU6SXNzdWU2NTYzODU1Mw==",
    "number": 2021,
    "title": "Maps.fromProperties() throws NPE if a value is null.",
    "user": {
      "login": "jwausle",
      "id": 1932517,
      "node_id": "MDQ6VXNlcjE5MzI1MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1932517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwausle",
      "html_url": "https://github.com/jwausle",
      "followers_url": "https://api.github.com/users/jwausle/followers",
      "following_url": "https://api.github.com/users/jwausle/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwausle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwausle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwausle/subscriptions",
      "organizations_url": "https://api.github.com/users/jwausle/orgs",
      "repos_url": "https://api.github.com/users/jwausle/repos",
      "events_url": "https://api.github.com/users/jwausle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwausle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-01T09:04:11Z",
    "updated_at": "2015-05-20T19:10:31Z",
    "closed_at": "2015-05-20T19:10:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Maybe is intential.\n\nI have that:\n\n``` java\n    Properties properties = new Properties();\n    properties.put( \"key\" , null ); \n    // I know its impossible. It should show the problem\n    // By me it happens because a Sytem.property value is null (with the time).\n    // I´m not sure why?\n    ...\n    Map propertiesMap = Maps.fromProperties( properties );\n```\n\nActual impl:\n\n``` java\n@GwtIncompatible(\"java.util.Properties\")\n  public static ImmutableMap<String, String> fromProperties,    Properties properties) {\n    ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n\n    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();) {\n      String key = (String) e.nextElement();\n      builder.put(key, properties.getProperty(key));\n    }\n\n    return builder.build();\n  }\n```\n\nThe `properties.propertyNames()` is the problem. It throws a NPE.\nThe `properties.stringPropertyNames()` would be return a empty keySet(). \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2020",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2020/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2020/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2020/events",
    "html_url": "https://github.com/google/guava/pull/2020",
    "id": 65560474,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzIzNzI1MjI=",
    "number": 2020,
    "title": "I suggest adding generators to com.google.common.collect.Iterators",
    "user": {
      "login": "eirikma",
      "id": 410346,
      "node_id": "MDQ6VXNlcjQxMDM0Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/410346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eirikma",
      "html_url": "https://github.com/eirikma",
      "followers_url": "https://api.github.com/users/eirikma/followers",
      "following_url": "https://api.github.com/users/eirikma/following{/other_user}",
      "gists_url": "https://api.github.com/users/eirikma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eirikma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eirikma/subscriptions",
      "organizations_url": "https://api.github.com/users/eirikma/orgs",
      "repos_url": "https://api.github.com/users/eirikma/repos",
      "events_url": "https://api.github.com/users/eirikma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eirikma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571602,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MDI=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20no",
        "name": "cla: no",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-31T22:27:28Z",
    "updated_at": "2017-01-09T20:04:52Z",
    "closed_at": "2017-01-09T20:04:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2020",
      "html_url": "https://github.com/google/guava/pull/2020",
      "diff_url": "https://github.com/google/guava/pull/2020.diff",
      "patch_url": "https://github.com/google/guava/pull/2020.patch"
    },
    "body": "I suggest adding (possibly infinite) generators to the Iterators class. The idea is to have an Iterator presenting a possibly infinite sequence of values, generated on the fly a generator function so you don't have to keep all of that in memory at once. \n\nTwo use cases are provided as unit tests: \na) some kind of endless computation \nb) iterating over possibly infinite input. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2019",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2019/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2019/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2019/events",
    "html_url": "https://github.com/google/guava/issues/2019",
    "id": 65514837,
    "node_id": "MDU6SXNzdWU2NTUxNDgzNw==",
    "number": 2019,
    "title": "Cache & Friends should have @Beta removed",
    "user": {
      "login": "sameb",
      "id": 2145042,
      "node_id": "MDQ6VXNlcjIxNDUwNDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2145042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sameb",
      "html_url": "https://github.com/sameb",
      "followers_url": "https://api.github.com/users/sameb/followers",
      "following_url": "https://api.github.com/users/sameb/following{/other_user}",
      "gists_url": "https://api.github.com/users/sameb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sameb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sameb/subscriptions",
      "organizations_url": "https://api.github.com/users/sameb/orgs",
      "repos_url": "https://api.github.com/users/sameb/repos",
      "events_url": "https://api.github.com/users/sameb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sameb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505989,
        "node_id": "MDU6TGFiZWwxNDM1MDU5ODk=",
        "url": "https://api.github.com/repos/google/guava/labels/type=other",
        "name": "type=other",
        "color": "f4d75f",
        "default": false,
        "description": "Miscellaneous activities not covered by other type= labels"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 2,
    "created_at": "2015-03-31T18:21:59Z",
    "updated_at": "2015-04-22T19:29:26Z",
    "closed_at": "2015-04-22T02:34:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Guice depends on Cache, RemovalListener, RemovalNotification, etc....\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2018",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2018/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2018/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2018/events",
    "html_url": "https://github.com/google/guava/issues/2018",
    "id": 65332366,
    "node_id": "MDU6SXNzdWU2NTMzMjM2Ng==",
    "number": 2018,
    "title": "Broken link: ElementCostInDataStructures",
    "user": {
      "login": "ben-manes",
      "id": 378614,
      "node_id": "MDQ6VXNlcjM3ODYxNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/378614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-manes",
      "html_url": "https://github.com/ben-manes",
      "followers_url": "https://api.github.com/users/ben-manes/followers",
      "following_url": "https://api.github.com/users/ben-manes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-manes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-manes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-manes/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-manes/orgs",
      "repos_url": "https://api.github.com/users/ben-manes/repos",
      "events_url": "https://api.github.com/users/ben-manes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-manes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cgdecker",
      "id": 101568,
      "node_id": "MDQ6VXNlcjEwMTU2OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgdecker",
      "html_url": "https://github.com/cgdecker",
      "followers_url": "https://api.github.com/users/cgdecker/followers",
      "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cgdecker/orgs",
      "repos_url": "https://api.github.com/users/cgdecker/repos",
      "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-31T00:13:35Z",
    "updated_at": "2015-11-20T18:03:16Z",
    "closed_at": "2015-11-20T18:03:16Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The project [memory-measurer](https://code.google.com/p/memory-measurer) was removed. Guava's documentation link [Footprint of JDK/Guava data structures](https://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures) is 403 (Forbidden).\n\nI wanted to verify my [analysis](https://github.com/ben-manes/caffeine/wiki/Memory-overhead) using [jamm](https://github.com/jbellis/jamm). Using OpenJDK's [Java Object Layout](http://openjdk.java.net/projects/code-tools/jol/) will be the best, but due to its immaturity it isn't as easy to quickly script.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2017",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2017/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2017/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2017/events",
    "html_url": "https://github.com/google/guava/pull/2017",
    "id": 65054370,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzIxODA0NTM=",
    "number": 2017,
    "title": "Add missing serialVersionUID field to Converter and VerifyException classes.",
    "user": {
      "login": "mtuchowski",
      "id": 8456055,
      "node_id": "MDQ6VXNlcjg0NTYwNTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8456055?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mtuchowski",
      "html_url": "https://github.com/mtuchowski",
      "followers_url": "https://api.github.com/users/mtuchowski/followers",
      "following_url": "https://api.github.com/users/mtuchowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mtuchowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mtuchowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mtuchowski/subscriptions",
      "organizations_url": "https://api.github.com/users/mtuchowski/orgs",
      "repos_url": "https://api.github.com/users/mtuchowski/repos",
      "events_url": "https://api.github.com/users/mtuchowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mtuchowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-29T11:59:36Z",
    "updated_at": "2016-04-11T08:13:05Z",
    "closed_at": "2016-04-11T08:13:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2017",
      "html_url": "https://github.com/google/guava/pull/2017",
      "diff_url": "https://github.com/google/guava/pull/2017.diff",
      "patch_url": "https://github.com/google/guava/pull/2017.patch"
    },
    "body": "Both Converter and VerifyException implement Serializable interface, so they should declare a static final serialVersionUID field.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2016",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2016/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2016/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2016/events",
    "html_url": "https://github.com/google/guava/issues/2016",
    "id": 64763217,
    "node_id": "MDU6SXNzdWU2NDc2MzIxNw==",
    "number": 2016,
    "title": "ImmutableSortedMultiset::naturalOrder has wrong generic type",
    "user": {
      "login": "ogregoire",
      "id": 666970,
      "node_id": "MDQ6VXNlcjY2Njk3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/666970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogregoire",
      "html_url": "https://github.com/ogregoire",
      "followers_url": "https://api.github.com/users/ogregoire/followers",
      "following_url": "https://api.github.com/users/ogregoire/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogregoire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogregoire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogregoire/subscriptions",
      "organizations_url": "https://api.github.com/users/ogregoire/orgs",
      "repos_url": "https://api.github.com/users/ogregoire/repos",
      "events_url": "https://api.github.com/users/ogregoire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogregoire/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-27T13:35:52Z",
    "updated_at": "2015-08-03T11:00:44Z",
    "closed_at": "2015-07-30T19:10:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Please fix the `ImmutableSortedMultiset::naturalOrder` generic type so that classes that are subclasses of classes implementing `Comparable` can be used.\n\nHere is a snippet showing the issue:\n\n```\npublic class ImmutableSortedCollectionsComparison {\n  public static void main(String[] args) {\n    ImmutableSortedSet     <MySubComparable> sortedSet      = ImmutableSortedSet     .<MySubComparable>naturalOrder().build();\n    ImmutableSortedMultiset<MySubComparable> sortedMultiset = ImmutableSortedMultiset.<MySubComparable>naturalOrder().build();\n  }\n}\nclass MyComparable implements Comparable<MyComparable> {\n  @Override public int compareTo(MyComparable o) { return 1; }\n}\nclass MySubComparable extends MyComparable { }\n```\n\nThe line of the `ImmutableSortedSet` will compile nicely, but the one of the `ImmutableSortedMultiset` won't.\n\nHere's the faulty signature of `ImmutableSortedMultiset::naturalOrder`:\n\n```\npublic static <E extends Comparable<E>> ImmutableSortedMultiset.Builder<E> naturalOrder()\n```\n\nAnd here is the expected signature:\n\n```\npublic static <E extends Comparable<?>> ImmutableSortedMultiset.Builder<E> naturalOrder()\n```\n\nWhich will then be similar to the working `ImmutableSortedSet::naturalOrder`:\n\n```\npublic static <E extends Comparable<?>> ImmutableSortedSet.Builder<E> naturalOrder()\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2015",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2015/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2015/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2015/events",
    "html_url": "https://github.com/google/guava/issues/2015",
    "id": 64466051,
    "node_id": "MDU6SXNzdWU2NDQ2NjA1MQ==",
    "number": 2015,
    "title": "Add Functions.allAsList",
    "user": {
      "login": "orionll",
      "id": 761899,
      "node_id": "MDQ6VXNlcjc2MTg5OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/761899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orionll",
      "html_url": "https://github.com/orionll",
      "followers_url": "https://api.github.com/users/orionll/followers",
      "following_url": "https://api.github.com/users/orionll/following{/other_user}",
      "gists_url": "https://api.github.com/users/orionll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orionll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orionll/subscriptions",
      "organizations_url": "https://api.github.com/users/orionll/orgs",
      "repos_url": "https://api.github.com/users/orionll/repos",
      "events_url": "https://api.github.com/users/orionll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orionll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143514951,
        "node_id": "MDU6TGFiZWwxNDM1MTQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=will-not-fix",
        "name": "status=will-not-fix",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-26T08:15:22Z",
    "updated_at": "2015-04-10T20:29:13Z",
    "closed_at": "2015-04-10T20:28:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Add a method that transforms a list of functions to a function which returns a list:\n\n``` java\npublic static <I, A> Function<I, List<A>> allAsList(Iterable<Function<I, A>> list)\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2014",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2014/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2014/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2014/events",
    "html_url": "https://github.com/google/guava/issues/2014",
    "id": 64310596,
    "node_id": "MDU6SXNzdWU2NDMxMDU5Ng==",
    "number": 2014,
    "title": "whenAll{Complete,Succeed}.{call,callAsync} should clear runningState as soon as all inputs are done",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "cpovirk",
        "id": 1703908,
        "node_id": "MDQ6VXNlcjE3MDM5MDg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpovirk",
        "html_url": "https://github.com/cpovirk",
        "followers_url": "https://api.github.com/users/cpovirk/followers",
        "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
        "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
        "organizations_url": "https://api.github.com/users/cpovirk/orgs",
        "repos_url": "https://api.github.com/users/cpovirk/repos",
        "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cpovirk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-25T16:18:15Z",
    "updated_at": "2017-10-09T16:50:02Z",
    "closed_at": "2017-10-09T16:50:02Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "(These methods are currently Google-internal, but they should be coming soon to Guava.)\n\nThere's no need for it to wait for the `Future` to complete (which might be a while, especially in the case of `callAsync`). The `runningState` reference is used only for cancellation of the inputs, so we can clear it as soon as (a) the `Future` is done (as we do now) or (b) all the inputs are done (at which point we'll have no inputs to cancel).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2013",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2013/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2013/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2013/events",
    "html_url": "https://github.com/google/guava/issues/2013",
    "id": 64280225,
    "node_id": "MDU6SXNzdWU2NDI4MDIyNQ==",
    "number": 2013,
    "title": "Cancelling the output of Futures.transform/catching should eagerly null out its fields",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505670,
        "node_id": "MDU6TGFiZWwxNDM1MDU2NzA=",
        "url": "https://api.github.com/repos/google/guava/labels/package=concurrent",
        "name": "package=concurrent",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499130,
        "node_id": "MDU6TGFiZWwxNDM0OTkxMzA=",
        "url": "https://api.github.com/repos/google/guava/labels/type=enhancement",
        "name": "type=enhancement",
        "color": "f4d75f",
        "default": false,
        "description": "Make an existing feature better"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-25T14:17:55Z",
    "updated_at": "2015-06-02T22:40:06Z",
    "closed_at": "2015-06-02T22:40:06Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We'll have to make sure that `run()` methods are resilient to this, of course. Currently, for `Futures.transform`, we let `run()` do its thing even if the output has been cancelled! (We're about to fix that.)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2012",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2012/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2012/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2012/events",
    "html_url": "https://github.com/google/guava/pull/2012",
    "id": 63855913,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3ODM2OTQ=",
    "number": 2012,
    "title": "Alternative way to get AssertionError instance in",
    "user": {
      "login": "Sumu-Ning",
      "id": 10792148,
      "node_id": "MDQ6VXNlcjEwNzkyMTQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10792148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sumu-Ning",
      "html_url": "https://github.com/Sumu-Ning",
      "followers_url": "https://api.github.com/users/Sumu-Ning/followers",
      "following_url": "https://api.github.com/users/Sumu-Ning/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sumu-Ning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sumu-Ning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sumu-Ning/subscriptions",
      "organizations_url": "https://api.github.com/users/Sumu-Ning/orgs",
      "repos_url": "https://api.github.com/users/Sumu-Ning/repos",
      "events_url": "https://api.github.com/users/Sumu-Ning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sumu-Ning/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 147571624,
        "node_id": "MDU6TGFiZWwxNDc1NzE2MjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/cla:%20yes",
        "name": "cla: yes",
        "color": "009800",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-03-23T23:16:13Z",
    "updated_at": "2020-08-17T16:03:09Z",
    "closed_at": "2015-06-11T18:28:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/google/guava/pulls/2012",
      "html_url": "https://github.com/google/guava/pull/2012",
      "diff_url": "https://github.com/google/guava/pull/2012.diff",
      "patch_url": "https://github.com/google/guava/pull/2012.patch"
    },
    "body": "Alternative way to get AssertionError instance in com.google.common.util.concurrent.GeneratedMonitorTest, since \npublic AssertionError(String message, Throwable cause) \ndoes not exist in Java 6 yet.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2010",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2010/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2010/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2010/events",
    "html_url": "https://github.com/google/guava/issues/2010",
    "id": 63376693,
    "node_id": "MDU6SXNzdWU2MzM3NjY5Mw==",
    "number": 2010,
    "title": "Java 8 testlib extension",
    "user": {
      "login": "ben-manes",
      "id": 378614,
      "node_id": "MDQ6VXNlcjM3ODYxNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/378614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-manes",
      "html_url": "https://github.com/ben-manes",
      "followers_url": "https://api.github.com/users/ben-manes/followers",
      "following_url": "https://api.github.com/users/ben-manes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-manes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-manes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-manes/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-manes/orgs",
      "repos_url": "https://api.github.com/users/ben-manes/repos",
      "events_url": "https://api.github.com/users/ben-manes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-manes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-21T08:22:40Z",
    "updated_at": "2015-03-23T15:36:30Z",
    "closed_at": "2015-03-23T15:36:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It would be very useful if testlib supported Java 8 collections. This might be done with an extension module or, where possible, reflective invocations. For example Map's compute and merge functions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2009",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2009/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2009/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2009/events",
    "html_url": "https://github.com/google/guava/issues/2009",
    "id": 63234794,
    "node_id": "MDU6SXNzdWU2MzIzNDc5NA==",
    "number": 2009,
    "title": "Add TreeTraverser.xxxTraversal(Iterable) overloads for multiple root nodes",
    "user": {
      "login": "bjmi",
      "id": 2063480,
      "node_id": "MDQ6VXNlcjIwNjM0ODA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2063480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjmi",
      "html_url": "https://github.com/bjmi",
      "followers_url": "https://api.github.com/users/bjmi/followers",
      "following_url": "https://api.github.com/users/bjmi/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjmi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjmi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjmi/subscriptions",
      "organizations_url": "https://api.github.com/users/bjmi/orgs",
      "repos_url": "https://api.github.com/users/bjmi/repos",
      "events_url": "https://api.github.com/users/bjmi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjmi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 311498444,
        "node_id": "MDU6TGFiZWwzMTE0OTg0NDQ=",
        "url": "https://api.github.com/repos/google/guava/labels/package=graph",
        "name": "package=graph",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "jrtom",
      "id": 11969894,
      "node_id": "MDQ6VXNlcjExOTY5ODk0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrtom",
      "html_url": "https://github.com/jrtom",
      "followers_url": "https://api.github.com/users/jrtom/followers",
      "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
      "organizations_url": "https://api.github.com/users/jrtom/orgs",
      "repos_url": "https://api.github.com/users/jrtom/repos",
      "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrtom/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "jrtom",
        "id": 11969894,
        "node_id": "MDQ6VXNlcjExOTY5ODk0",
        "avatar_url": "https://avatars3.githubusercontent.com/u/11969894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrtom",
        "html_url": "https://github.com/jrtom",
        "followers_url": "https://api.github.com/users/jrtom/followers",
        "following_url": "https://api.github.com/users/jrtom/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrtom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrtom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrtom/subscriptions",
        "organizations_url": "https://api.github.com/users/jrtom/orgs",
        "repos_url": "https://api.github.com/users/jrtom/repos",
        "events_url": "https://api.github.com/users/jrtom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrtom/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/28",
      "html_url": "https://github.com/google/guava/milestone/28",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/28/labels",
      "id": 3191449,
      "node_id": "MDk6TWlsZXN0b25lMzE5MTQ0OQ==",
      "number": 28,
      "title": "24.1",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 2,
      "state": "closed",
      "created_at": "2018-03-15T18:56:56Z",
      "updated_at": "2018-03-20T13:23:24Z",
      "due_on": null,
      "closed_at": "2018-03-15T18:57:24Z"
    },
    "comments": 11,
    "created_at": "2015-03-20T14:12:42Z",
    "updated_at": "2020-07-22T06:57:57Z",
    "closed_at": "2017-10-09T18:37:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "From time to time I have to traverse tree-based data structures where starting point are multiple root nodes  e.g. traversing files with TreeTraverser.breadthFirstTraversal(dir1, dir2, dir3) with one single call. \n\nOne could sometimes create a single virtual root node and skip this node but it feels like a work-around.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2008",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2008/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2008/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2008/events",
    "html_url": "https://github.com/google/guava/issues/2008",
    "id": 63109509,
    "node_id": "MDU6SXNzdWU2MzEwOTUwOQ==",
    "number": 2008,
    "title": "Iterators.concat is not gc friendly",
    "user": {
      "login": "devinrsmith",
      "id": 6764691,
      "node_id": "MDQ6VXNlcjY3NjQ2OTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6764691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devinrsmith",
      "html_url": "https://github.com/devinrsmith",
      "followers_url": "https://api.github.com/users/devinrsmith/followers",
      "following_url": "https://api.github.com/users/devinrsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/devinrsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devinrsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devinrsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/devinrsmith/orgs",
      "repos_url": "https://api.github.com/users/devinrsmith/repos",
      "events_url": "https://api.github.com/users/devinrsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devinrsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      },
      {
        "id": 143499063,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjM=",
        "url": "https://api.github.com/repos/google/guava/labels/type=defect",
        "name": "type=defect",
        "color": "e11d21",
        "default": false,
        "description": "Bug, not working as expected"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/14",
      "html_url": "https://github.com/google/guava/milestone/14",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/14/labels",
      "id": 849127,
      "node_id": "MDk6TWlsZXN0b25lODQ5MTI3",
      "number": 14,
      "title": "19.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 43,
      "state": "closed",
      "created_at": "2014-11-01T03:47:25Z",
      "updated_at": "2016-10-06T21:34:37Z",
      "due_on": null,
      "closed_at": "2015-12-11T19:51:02Z"
    },
    "comments": 5,
    "created_at": "2015-03-19T22:53:23Z",
    "updated_at": "2015-07-27T20:45:41Z",
    "closed_at": "2015-04-07T17:54:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I ran into a situation where I was using recursion and lazy iteration to emulate the in-order traversal path of a binary tree, but wasn't able to use `Iterators.concat` due to its non gc friendly implementation.\n\n(Note: the amount of memory that should be needed to run this is `O(maxDepth)` or `O(log N)`)\n\nHere's code to trigger the issue, and a potential solution: https://gist.github.com/devinrsmith/121d9a5ebd460c3bbaa0\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2007",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2007/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2007/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2007/events",
    "html_url": "https://github.com/google/guava/issues/2007",
    "id": 63008090,
    "node_id": "MDU6SXNzdWU2MzAwODA5MA==",
    "number": 2007,
    "title": "Stopwatch.toString(TimeUnit)",
    "user": {
      "login": "ogregoire",
      "id": 666970,
      "node_id": "MDQ6VXNlcjY2Njk3MA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/666970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogregoire",
      "html_url": "https://github.com/ogregoire",
      "followers_url": "https://api.github.com/users/ogregoire/followers",
      "following_url": "https://api.github.com/users/ogregoire/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogregoire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogregoire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogregoire/subscriptions",
      "organizations_url": "https://api.github.com/users/ogregoire/orgs",
      "repos_url": "https://api.github.com/users/ogregoire/repos",
      "events_url": "https://api.github.com/users/ogregoire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogregoire/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505359,
        "node_id": "MDU6TGFiZWwxNDM1MDUzNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=base",
        "name": "package=base",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143508181,
        "node_id": "MDU6TGFiZWwxNDM1MDgxODE=",
        "url": "https://api.github.com/repos/google/guava/labels/status=working-as-intended",
        "name": "status=working-as-intended",
        "color": "c5c5c5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kevinb9n",
      "id": 934551,
      "node_id": "MDQ6VXNlcjkzNDU1MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinb9n",
      "html_url": "https://github.com/kevinb9n",
      "followers_url": "https://api.github.com/users/kevinb9n/followers",
      "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
      "repos_url": "https://api.github.com/users/kevinb9n/repos",
      "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kevinb9n",
        "id": 934551,
        "node_id": "MDQ6VXNlcjkzNDU1MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/934551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevinb9n",
        "html_url": "https://github.com/kevinb9n",
        "followers_url": "https://api.github.com/users/kevinb9n/followers",
        "following_url": "https://api.github.com/users/kevinb9n/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinb9n/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kevinb9n/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinb9n/subscriptions",
        "organizations_url": "https://api.github.com/users/kevinb9n/orgs",
        "repos_url": "https://api.github.com/users/kevinb9n/repos",
        "events_url": "https://api.github.com/users/kevinb9n/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kevinb9n/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-19T14:50:49Z",
    "updated_at": "2017-11-13T17:38:00Z",
    "closed_at": "2017-11-13T17:38:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "To easily visually compare elapsed times with different orders of magnitude, please overload the method `Stopwatch::toString()` with `Stopwatch::toString(TimeUnit)` (or something similar) where we can then pass a specific `TimeUnit` which allows us to see actual differences.\n\nThe current implementation is very nice to see how much time a portion of code took to execute, but if we want to compare, it'd be nice to normalize the TimeUnit.\n\nMy use case is the following: I have a hundred time measures and I often have orders of magnitude of difference between those:\n\n```\nA took 12.34 ms\nB took 23.45 µs\nC took 34.56 ms\n```\n\nAnd then we're ask ourselves \"oh wait, was B \"ms\" or \"μs\" ?\" And we gotta check again. Oh, so B was (roughly) 500 times faster than A.\n\nIf I always select the same `TimeUnit` (milliseconds in this case), I can have this:\n\n```\nA took 12.34 ms\nB took 0.023 ms\nC took 34.56 ms\n```\n\nThen it's really clear that B took a fraction of time of what A used.\n\nA comment in Guava's code for `toString()` also mentions `Too bad this functionality is not exposed as a regular method call`. Which seems to mean that someone else also kind of needed a similar behavior.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2006",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2006/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2006/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2006/events",
    "html_url": "https://github.com/google/guava/issues/2006",
    "id": 62995274,
    "node_id": "MDU6SXNzdWU2Mjk5NTI3NA==",
    "number": 2006,
    "title": "Provide TreeTraverser.fromFunction(Function)",
    "user": {
      "login": "bjmi",
      "id": 2063480,
      "node_id": "MDQ6VXNlcjIwNjM0ODA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2063480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjmi",
      "html_url": "https://github.com/bjmi",
      "followers_url": "https://api.github.com/users/bjmi/followers",
      "following_url": "https://api.github.com/users/bjmi/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjmi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjmi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjmi/subscriptions",
      "organizations_url": "https://api.github.com/users/bjmi/orgs",
      "repos_url": "https://api.github.com/users/bjmi/repos",
      "events_url": "https://api.github.com/users/bjmi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjmi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143505259,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTk=",
        "url": "https://api.github.com/repos/google/guava/labels/package=collect",
        "name": "package=collect",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143505557,
        "node_id": "MDU6TGFiZWwxNDM1MDU1NTc=",
        "url": "https://api.github.com/repos/google/guava/labels/status=research",
        "name": "status=research",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 143505258,
        "node_id": "MDU6TGFiZWwxNDM1MDUyNTg=",
        "url": "https://api.github.com/repos/google/guava/labels/type=addition",
        "name": "type=addition",
        "color": "f4d75f",
        "default": false,
        "description": "A new feature"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-03-19T13:59:50Z",
    "updated_at": "2017-10-09T16:16:30Z",
    "closed_at": "2017-10-09T16:16:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Instead of implementing TreeTraverser.children(T) in anonymous classes each time a function that retrieves children from each node could be handy also.\n\nWhat about this static method at TreeTraverser \n\n``` java\nstatic <T> TreeTraverser<T> fromFunction(final Function<? super T, ? extends Iterable<? extends T>> descendants) {\n  return new TreeTraverser (...);\n}\n```\n\nand a possible implementation as proposal.\n\n``` java\n/**\n * @see Traversers#fromFunction(Function)\n */\nstatic final class TreeTraverserFromFunction<T> extends TreeTraverser<T> {\n\n  private final Function<? super T, ? extends Iterable<? extends T>> descendants;\n\n  TreeTraverserFromFunction(final Function<? super T, ? extends Iterable<? extends T>> children) {\n    descendants = checkNotNull(children);\n  }\n\n  @Override\n  public Iterable<T> children(final T root) {\n    @SuppressWarnings(\"unchecked\")\n    final Iterable<T> checkedIterable = (Iterable<T>) descendants.apply(root);\n    return checkedIterable;\n  }\n\n  @Override\n  public String toString() {\n    return \"TreeTraverser.fromFunction(\" + descendants + \")\";\n  }\n\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2005",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2005/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2005/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2005/events",
    "html_url": "https://github.com/google/guava/issues/2005",
    "id": 62861058,
    "node_id": "MDU6SXNzdWU2Mjg2MTA1OA==",
    "number": 2005,
    "title": "Documentation Error in CachesExplained, section \"Features\"",
    "user": {
      "login": "VishalRao",
      "id": 531511,
      "node_id": "MDQ6VXNlcjUzMTUxMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/531511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VishalRao",
      "html_url": "https://github.com/VishalRao",
      "followers_url": "https://api.github.com/users/VishalRao/followers",
      "following_url": "https://api.github.com/users/VishalRao/following{/other_user}",
      "gists_url": "https://api.github.com/users/VishalRao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VishalRao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VishalRao/subscriptions",
      "organizations_url": "https://api.github.com/users/VishalRao/orgs",
      "repos_url": "https://api.github.com/users/VishalRao/repos",
      "events_url": "https://api.github.com/users/VishalRao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VishalRao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-19T03:17:30Z",
    "updated_at": "2017-10-09T16:21:58Z",
    "closed_at": "2017-10-09T16:21:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://code.google.com/p/guava-libraries/wiki/CachesExplained#Features\n\n\"So, for example, iterating through cache.entrySet() does not reset access time for the entries you retrieve.\"\n\nshould probably be\n\n\"So, for example, iterating through cache.asMap().entrySet() does not reset access time for the entries you retrieve.\"\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2004",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2004/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2004/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2004/events",
    "html_url": "https://github.com/google/guava/issues/2004",
    "id": 62860343,
    "node_id": "MDU6SXNzdWU2Mjg2MDM0Mw==",
    "number": 2004,
    "title": "Documentation Error in CachesExplained, section \"Interruption\"",
    "user": {
      "login": "VishalRao",
      "id": 531511,
      "node_id": "MDQ6VXNlcjUzMTUxMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/531511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VishalRao",
      "html_url": "https://github.com/VishalRao",
      "followers_url": "https://api.github.com/users/VishalRao/followers",
      "following_url": "https://api.github.com/users/VishalRao/following{/other_user}",
      "gists_url": "https://api.github.com/users/VishalRao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VishalRao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VishalRao/subscriptions",
      "organizations_url": "https://api.github.com/users/VishalRao/orgs",
      "repos_url": "https://api.github.com/users/VishalRao/repos",
      "events_url": "https://api.github.com/users/VishalRao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VishalRao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "lowasser",
      "id": 544569,
      "node_id": "MDQ6VXNlcjU0NDU2OQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lowasser",
      "html_url": "https://github.com/lowasser",
      "followers_url": "https://api.github.com/users/lowasser/followers",
      "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
      "organizations_url": "https://api.github.com/users/lowasser/orgs",
      "repos_url": "https://api.github.com/users/lowasser/repos",
      "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lowasser/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "lowasser",
        "id": 544569,
        "node_id": "MDQ6VXNlcjU0NDU2OQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/544569?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lowasser",
        "html_url": "https://github.com/lowasser",
        "followers_url": "https://api.github.com/users/lowasser/followers",
        "following_url": "https://api.github.com/users/lowasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/lowasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lowasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lowasser/subscriptions",
        "organizations_url": "https://api.github.com/users/lowasser/orgs",
        "repos_url": "https://api.github.com/users/lowasser/repos",
        "events_url": "https://api.github.com/users/lowasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lowasser/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-19T03:13:02Z",
    "updated_at": "2015-04-10T19:47:44Z",
    "closed_at": "2015-04-10T19:47:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://code.google.com/p/guava-libraries/wiki/CachesExplained#Interruption\n\n\"(wrapped in an ExceptionException)\"\nshould probably be\n\"(wrapped in an ExecutionException)\"\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2001",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2001/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2001/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2001/events",
    "html_url": "https://github.com/google/guava/issues/2001",
    "id": 62224938,
    "node_id": "MDU6SXNzdWU2MjIyNDkzOA==",
    "number": 2001,
    "title": "Document that InternetDomainName public-suffix support doesn't do what many users expect",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143504951,
        "node_id": "MDU6TGFiZWwxNDM1MDQ5NTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=net",
        "name": "package=net",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 143545192,
        "node_id": "MDU6TGFiZWwxNDM1NDUxOTI=",
        "url": "https://api.github.com/repos/google/guava/labels/type=documentation",
        "name": "type=documentation",
        "color": "f4d75f",
        "default": false,
        "description": "Documentation that is other than for an API"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-16T22:29:22Z",
    "updated_at": "2015-03-23T17:16:52Z",
    "closed_at": "2015-03-23T17:16:52Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "See, e.g., #2000.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/2000",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/2000/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/2000/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/2000/events",
    "html_url": "https://github.com/google/guava/issues/2000",
    "id": 61255295,
    "node_id": "MDU6SXNzdWU2MTI1NTI5NQ==",
    "number": 2000,
    "title": "InternetDomainName topPrivateDomain resolution error",
    "user": {
      "login": "rferreira",
      "id": 36054,
      "node_id": "MDQ6VXNlcjM2MDU0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/36054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rferreira",
      "html_url": "https://github.com/rferreira",
      "followers_url": "https://api.github.com/users/rferreira/followers",
      "following_url": "https://api.github.com/users/rferreira/following{/other_user}",
      "gists_url": "https://api.github.com/users/rferreira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rferreira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rferreira/subscriptions",
      "organizations_url": "https://api.github.com/users/rferreira/orgs",
      "repos_url": "https://api.github.com/users/rferreira/repos",
      "events_url": "https://api.github.com/users/rferreira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rferreira/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-13T21:34:18Z",
    "updated_at": "2015-03-16T22:27:28Z",
    "closed_at": "2015-03-16T22:27:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\nInternetDomainName.from(\"bucket.s3.amazonaws.com\").topPrivateDomain()\n```\n\n returns bucket.s3.amazonaws.com instead of \"amazonaws.com\". Strangely enough \n\n```\nInternetDomainName.from(\"a.b.c.com\").topPrivateDomain()\n```\n\nworks just fine\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1999",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1999/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1999/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1999/events",
    "html_url": "https://github.com/google/guava/issues/1999",
    "id": 60870802,
    "node_id": "MDU6SXNzdWU2MDg3MDgwMg==",
    "number": 1999,
    "title": "Release a Guava that supports+requires GWT 2.8.0 upon GWT release",
    "user": {
      "login": "cpovirk",
      "id": 1703908,
      "node_id": "MDQ6VXNlcjE3MDM5MDg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1703908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpovirk",
      "html_url": "https://github.com/cpovirk",
      "followers_url": "https://api.github.com/users/cpovirk/followers",
      "following_url": "https://api.github.com/users/cpovirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpovirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpovirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpovirk/subscriptions",
      "organizations_url": "https://api.github.com/users/cpovirk/orgs",
      "repos_url": "https://api.github.com/users/cpovirk/repos",
      "events_url": "https://api.github.com/users/cpovirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpovirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143508611,
        "node_id": "MDU6TGFiZWwxNDM1MDg2MTE=",
        "url": "https://api.github.com/repos/google/guava/labels/package=general",
        "name": "package=general",
        "color": "62a0e5",
        "default": false,
        "description": ""
      },
      {
        "id": 321689268,
        "node_id": "MDU6TGFiZWwzMjE2ODkyNjg=",
        "url": "https://api.github.com/repos/google/guava/labels/platform=gwt",
        "name": "platform=gwt",
        "color": "ff9560",
        "default": false,
        "description": ""
      },
      {
        "id": 143499064,
        "node_id": "MDU6TGFiZWwxNDM0OTkwNjQ=",
        "url": "https://api.github.com/repos/google/guava/labels/status=fixed",
        "name": "status=fixed",
        "color": "6eb26e",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/google/guava/milestones/17",
      "html_url": "https://github.com/google/guava/milestone/17",
      "labels_url": "https://api.github.com/repos/google/guava/milestones/17/labels",
      "id": 1313983,
      "node_id": "MDk6TWlsZXN0b25lMTMxMzk4Mw==",
      "number": 17,
      "title": "20.0",
      "description": "",
      "creator": {
        "login": "cgdecker",
        "id": 101568,
        "node_id": "MDQ6VXNlcjEwMTU2OA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/101568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cgdecker",
        "html_url": "https://github.com/cgdecker",
        "followers_url": "https://api.github.com/users/cgdecker/followers",
        "following_url": "https://api.github.com/users/cgdecker/following{/other_user}",
        "gists_url": "https://api.github.com/users/cgdecker/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cgdecker/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cgdecker/subscriptions",
        "organizations_url": "https://api.github.com/users/cgdecker/orgs",
        "repos_url": "https://api.github.com/users/cgdecker/repos",
        "events_url": "https://api.github.com/users/cgdecker/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cgdecker/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 36,
      "state": "closed",
      "created_at": "2015-09-18T19:55:48Z",
      "updated_at": "2017-09-12T19:44:04Z",
      "due_on": null,
      "closed_at": "2016-10-28T21:21:39Z"
    },
    "comments": 23,
    "created_at": "2015-03-12T18:27:29Z",
    "updated_at": "2016-10-06T21:13:23Z",
    "closed_at": "2016-10-06T21:13:23Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "- @lowasser internal CL 88242480 wants to use `SimpleImmutableEntry`.\n- Internal CL 86210805 can be rolled back to use `AssertionError(String, Throwable)`.\n- @kak internal CL 83767705 wanted to use `Arrays.copyOf`.\n- My internal CL 59647656 wants to remove `AbstractIteratorTester` workarounds for bugs in `java.util` classes fixed in new releases of GWT.\n\nGWT 2.7.0 was released in November. But note that we had bug reports from users of GWT 2.5.1 as late as October 2014, 9 months after the release of 2.6.0. We should get some idea of how quickly external users update the version of GWT they use.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1998",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1998/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1998/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1998/events",
    "html_url": "https://github.com/google/guava/issues/1998",
    "id": 60862125,
    "node_id": "MDU6SXNzdWU2MDg2MjEyNQ==",
    "number": 1998,
    "title": "Cache#getIfPresent() variant returning Optional",
    "user": {
      "login": "fluentfuture",
      "id": 3457808,
      "node_id": "MDQ6VXNlcjM0NTc4MDg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3457808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fluentfuture",
      "html_url": "https://github.com/fluentfuture",
      "followers_url": "https://api.github.com/users/fluentfuture/followers",
      "following_url": "https://api.github.com/users/fluentfuture/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluentfuture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fluentfuture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluentfuture/subscriptions",
      "organizations_url": "https://api.github.com/users/fluentfuture/orgs",
      "repos_url": "https://api.github.com/users/fluentfuture/repos",
      "events_url": "https://api.github.com/users/fluentfuture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fluentfuture/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 143506482,
        "node_id": "MDU6TGFiZWwxNDM1MDY0ODI=",
        "url": "https://api.github.com/repos/google/guava/labels/package=cache",
        "name": "package=cache",
        "color": "62a0e5",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kluever",
      "id": 2036304,
      "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kluever",
      "html_url": "https://github.com/kluever",
      "followers_url": "https://api.github.com/users/kluever/followers",
      "following_url": "https://api.github.com/users/kluever/following{/other_user}",
      "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
      "organizations_url": "https://api.github.com/users/kluever/orgs",
      "repos_url": "https://api.github.com/users/kluever/repos",
      "events_url": "https://api.github.com/users/kluever/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kluever/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kluever",
        "id": 2036304,
        "node_id": "MDQ6VXNlcjIwMzYzMDQ=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2036304?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kluever",
        "html_url": "https://github.com/kluever",
        "followers_url": "https://api.github.com/users/kluever/followers",
        "following_url": "https://api.github.com/users/kluever/following{/other_user}",
        "gists_url": "https://api.github.com/users/kluever/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kluever/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kluever/subscriptions",
        "organizations_url": "https://api.github.com/users/kluever/orgs",
        "repos_url": "https://api.github.com/users/kluever/repos",
        "events_url": "https://api.github.com/users/kluever/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kluever/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-12T17:41:56Z",
    "updated_at": "2017-10-09T16:29:15Z",
    "closed_at": "2017-10-09T16:29:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Today I ran into a code snippet like this:\n\n```\nV value = cache.getIfPresent(key);\nreturn (value == null) ? 0 : value.getFoo();\n```\n\nThe code would have been more concise if the lookup method returned an Optional:\n\n```\nreturn cache.peek(key).or(defaultValue()).getFoo();\n```\n\nCould Cache be added with a method returning Optional? (Although, with Java 8 adding its own Optional, I can imagine us not investing into Guava's Optional any further).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/google/guava/issues/1997",
    "repository_url": "https://api.github.com/repos/google/guava",
    "labels_url": "https://api.github.com/repos/google/guava/issues/1997/labels{/name}",
    "comments_url": "https://api.github.com/repos/google/guava/issues/1997/comments",
    "events_url": "https://api.github.com/repos/google/guava/issues/1997/events",
    "html_url": "https://github.com/google/guava/issues/1997",
    "id": 60762758,
    "node_id": "MDU6SXNzdWU2MDc2Mjc1OA==",
    "number": 1997,
    "title": "JDK8: TestsForMapsInJavaUtil fails with ConcurrentHashMap",
    "user": {
      "login": "ben-manes",
      "id": 378614,
      "node_id": "MDQ6VXNlcjM3ODYxNA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/378614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-manes",
      "html_url": "https://github.com/ben-manes",
      "followers_url": "https://api.github.com/users/ben-manes/followers",
      "following_url": "https://api.github.com/users/ben-manes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-manes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-manes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-manes/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-manes/orgs",
      "repos_url": "https://api.github.com/users/ben-manes/repos",
      "events_url": "https://api.github.com/users/ben-manes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-manes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-12T02:42:48Z",
    "updated_at": "2015-03-12T18:24:04Z",
    "closed_at": "2015-03-12T18:24:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In JDK8, the entrySet view supports additions which the previous version did not. The existing tests fails due because it assumes that all collection views either support additions or disallow it. An addition through the key or value views would not make sense, while the entry view easily supported. Due to the testlib feature set not being able to distinguish the different features that the views may support, this test is not forward compatible as is.\n\nThis was discovered when using testlib to validate the `Cache.asMap()` view which should provide similar semantics except serialization support. The following additions have to be added for JDK8, but it would be nice if the features could be specified for the applicable views to avoid disabling tests.\n\n``` java\n.suppressing(\n    // Suppressed due to entrySet() view supporting additions, while the keySet() and\n    // values() views do not. The Guava tests are unable to understand this rational.\n    CollectionAddTester.class.getMethod(\"testAdd_unsupportedNotPresent\"),\n    CollectionAddAllTester.class.getMethod(\"testAddAll_unsupportedNonePresent\"),\n    CollectionAddAllTester.class.getMethod(\"testAddAll_unsupportedSomePresent\"))\n```\n",
    "performed_via_github_app": null
  }
]
